{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../node_modules/@preact/prerender-data-provider/src/context.js","webpack:///rule.es6","webpack:///warning.es6","webpack:///../node_modules/ansi-styles/index.js","webpack:///stringify.es6","webpack:///../node_modules/source-map/lib/base64-vlq.js","webpack:///terminal-highlight.es6","webpack:///node.es6","webpack:///postcss.es6","webpack:///../node_modules/source-map/lib/mapping-list.js","webpack:///parse.es6","webpack:///comment.es6","webpack:///../node_modules/chalk/index.js","webpack:///../node_modules/source-map/lib/base64.js","webpack:///./routes/home/style.css","webpack:///external \"preact\"","webpack:///css-syntax-error.es6","webpack:///../node_modules/source-map/lib/util.js","webpack:///previous-map.es6","webpack:///../node_modules/escape-string-regexp/index.js","webpack:///warn-once.es6","webpack:///../node_modules/@preact/prerender-data-provider/src/render-prop.js","webpack:///../node_modules/source-map/lib/binary-search.js","webpack:///processor.es6","webpack:///../src/index.js","webpack:///../node_modules/@preact/prerender-data-provider/src/index.js","webpack:///./components/banner/index.js","webpack:///./components/header/index.js","webpack:///./components/footer/index.js","webpack:///./components/button/index.js","webpack:///./components/mapnavigationcard/index.js","webpack:///./components/sizecontroll/index.js","webpack:///./routes/home/index.js","webpack:///./routes/fishing/index.js","webpack:///./routes/cleaner/index.js","webpack:///./routes/shop/index.js","webpack:///./routes/production/index.js","webpack:///./routes/parking/index.js","webpack:///./routes/profile/index.js","webpack:///./components/app.js","webpack:///./index.js","webpack:///container.es6","webpack:///../node_modules/webpack/buildin/module.js","webpack:///../node_modules/source-map/lib/array-set.js","webpack:///../node_modules/source-map/lib/source-map-consumer.js","webpack:///list.es6","webpack:///../node_modules/ansi-regex/index.js","webpack:///../src/util.js","webpack:///declaration.es6","webpack:///lazy-result.es6","webpack:///../node_modules/strip-ansi/index.js","webpack:///../node_modules/source-map/lib/quick-sort.js","webpack:///result.es6","webpack:///root.es6","webpack:///../node_modules/source-map/source-map.js","webpack:///../node_modules/supports-color/index.js","webpack:///../node_modules/source-map/lib/source-map-generator.js","webpack:///external \"fs\"","webpack:///vendor.es6","webpack:///input.es6","webpack:///../node_modules/preact-router/match.js","webpack:///external \"path\"","webpack:///../node_modules/has-ansi/index.js","webpack:///../node_modules/@preact/prerender-data-provider/src/utils.js","webpack:///at-rule.es6","webpack:///./components/footer/style.css","webpack:///map-generator.es6","webpack:///stringifier.es6","webpack:///../node_modules/source-map/lib/source-node.js","webpack:///parser.es6","webpack:///../node_modules/@preact/prerender-data-provider/src/constants.js","webpack:///tokenize.es6"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","PrerenderDataContext","createContext","list","this","values","match","selector","sep","raw","Container","opts","pos","toString","node","error","plugin","index","word","styles","modifiers","reset","bold","dim","italic","underline","inverse","hidden","strikethrough","colors","black","red","green","yellow","blue","magenta","cyan","white","gray","bgColors","bgBlack","bgRed","bgGreen","bgYellow","bgBlue","bgMagenta","bgCyan","bgWhite","grey","keys","forEach","groupName","group","styleName","style","open","close","Stringifier","str","base64","require","encode","aValue","digit","encoded","vlq","toVLQSigned","VLQ_BASE","decode","aStr","aIndex","aOutParam","continuation","shifted","strLen","length","result","shift","Error","charCodeAt","charAt","rest","HIGHLIGHT_THEME","chalk","processor","Input","ignoreErrors","token","color","type","next","getTokenType","defaults","positionBy","source","input","message","CssSyntaxError","warn","data","remove","stringifier","stringify","clone","overrides","cloned","cloneNode","obj","j","cloneBefore","cloneAfter","replaceWith","nodes","parent","prev","before","after","toJSON","fixed","root","cleanRaws","raws","positionInside","string","column","start","line","indexOf","postcss","plugins","Array","Processor","transformer","initializer","cache","creator","css","processOpts","pluginOpts","parse","vendor","Comment","AtRule","Declaration","Rule","Root","util","MappingList","_array","_sorted","_last","generatedLine","generatedColumn","unsortedForEach","aCallback","aThisArg","add","aMapping","mappingA","mappingB","lineA","lineB","columnA","columnB","compareByGeneratedPositionsInflated","push","toArray","sort","parser","Parser","e","Node","escapeStringRegexp","ansiStyles","stripAnsi","hasAnsi","supportsColor","defineProps","defineProperties","isSimpleWindowsTerm","process","platform","test","env","TERM","Chalk","options","enabled","undefined","ret","closeRe","RegExp","build","_styles","concat","proto","builder","applyStyle","apply","arguments","__proto__","args","argsLen","String","a","nestedStyles","originalDim","code","replace","init","hasColor","stripColor","intToCharMap","split","number","TypeError","charCode","setMessage","file","showSourceCode","terminalHighlight","lines","Math","end","maxWidth","gutter","spacing","aside","mark","getArg","aArgs","aName","aDefaultValue","urlRegexp","dataUrlRegexp","urlParse","aUrl","scheme","auth","host","port","path","urlGenerate","aParsedUrl","url","normalize","aPath","part","isAbsolute","parts","up","splice","join","aRoot","aPathUrl","aRootUrl","joined","relative","level","lastIndexOf","slice","substr","supportsNullProto","identity","isProtoString","strcmp","aStr1","aStr2","toSetString","fromSetString","compareByOriginalPositions","onlyCompareOriginal","cmp","originalLine","originalColumn","compareByGeneratedPositionsDeflated","onlyCompareGenerated","parseSourceMapInput","JSON","computeSourceURL","sourceRoot","sourceURL","sourceMapURL","parsed","substring","startWith","text","loadMap","consumer","mozilla","withContent","sourcesContent","getAnnotationURL","sourceMapString","loadAnnotation","annotations","lastAnnotation","decodeInline","uri","decodeURIComponent","baseCharsetUri","baseUri","Buffer","window","encoding","prevPath","fs","isMap","map","matchOperatorsRe","printed","console","Consumer","Component","GREATEST_LOWER_BOUND","LEAST_UPPER_BOUND","search","aNeedle","aHaystack","aCompare","aBias","recursiveSearch","aLow","aHigh","mid","floor","use","LazyResult","normalized","currentIndex","currentComponent","prevRaf","currentHook","afterPaintEffects","oldBeforeDiff","oldBeforeRender","oldAfterDiff","diffed","oldCommit","oldBeforeUnmount","unmount","getHookState","hooks","useState","initialState","reducer","hookState","_reducer","invokeOrReturn","nextValue","action","setState","useReducer","flushAfterPaintEffects","component","invokeCleanup","invokeEffect","vnode","requestAnimationFrame","callback","raf","done","clearTimeout","timeout","HAS_RAF","cancelAnimationFrame","setTimeout","commitQueue","some","filter","cb","hook","comp","argsChanged","oldArgs","newArgs","arg","f","Provider","Banner","class","role","Header","src","alt","href","placeholder","Footer","Button","MapNavigationCard","SizeControll","Home","className","Profile","state","user","Date","now","time","setTime","count","setCount","timer","setInterval","clearInterval","toLocaleString","onClick","App","handleRoute","currentUrl","render","props","onChange","child","each","lastEach","indexes","id","walk","walkDecls","prop","walkRules","walkAtRules","walkComments","append","children","prepend","insertBefore","exist","insertAfter","removeChild","removeAll","replaceValues","decl","every","cleanSource","sample","webpackPolyfill","deprecate","paths","has","hasNativeMap","Map","ArraySet","_set","fromArray","aArray","aAllowDuplicates","set","len","size","getOwnPropertyNames","sStr","isDuplicate","idx","at","aIdx","binarySearch","base64VLQ","quickSort","SourceMapConsumer","aSourceMap","aSourceMapURL","sourceMap","sections","IndexedSourceMapConsumer","BasicSourceMapConsumer","version","sources","names","mappings","_version","_names","_sources","_absoluteSources","_mappings","_sourceMapURL","Mapping","lastOffset","_sections","offset","offsetLine","offsetColumn","generatedOffset","fromSourceMap","__generatedMappings","configurable","_parseMappings","__originalMappings","_charIsMappingSeparator","aSourceRoot","GENERATED_ORDER","ORIGINAL_ORDER","eachMapping","aContext","aOrder","context","_generatedMappings","_originalMappings","mapping","allGeneratedPositionsFor","needle","_findSourceIndex","_findMapping","lastColumn","aSource","relativeSource","smc","_sourceRoot","_generateSourcesContent","_file","generatedMappings","destGeneratedMappings","destOriginalMappings","srcMapping","destMapping","segment","previousGeneratedColumn","previousOriginalLine","previousOriginalColumn","previousSource","previousName","cachedSegments","temp","originalMappings","aMappings","aLineName","aColumnName","aComparator","computeColumnSpans","nextMapping","lastGeneratedColumn","Infinity","originalPositionFor","hasContentsOfAllSources","sc","sourceContentFor","nullOnMissing","fileUriAbsPath","generatedPositionFor","constructor","sectionIndex","section","bias","content","generatedPosition","sectionMappings","adjustedMapping","array","current","func","quote","escape","letter","separators","last","space","comma","EMPTY","assign","let","exec","route","reg","matches","segmentize","max","param","flags","plus","star","val","default","pathRankSort","b","rank","prepareVNodeForRanking","rankSegment","rankChild","customHistory","ROUTERS","subscribers","getCurrentUrl","location","getCurrentLocation","pathname","canRoute","history","setUrl","routeTo","didRoute","routeFromLink","getAttribute","target","handleLinkClick","ctrlKey","metaKey","altKey","shiftKey","button","currentTarget","prevent","stopImmediatePropagation","stopPropagation","preventDefault","delegateLinkHandler","nodeName","toUpperCase","hasAttribute","parentNode","eventListenersInitialized","Router","super","addEventListener","shouldComponentUpdate","static","const","getMatchingChildren","updating","forceUpdate","componentWillMount","componentDidMount","unlisten","listen","componentWillUnmount","componentWillUpdate","componentDidUpdate","invoke","newProps","ref","Boolean","active","previous","previousUrl","router","Link","Route","isPromise","Result","warnings","sync","then","async","onFulfilled","catch","finally","onFinally","handleError","err","asyncTick","resolve","promise","run","reject","Promise","MapGenerator","ansiRegex","swap","ary","x","y","doQuickSort","comparator","low","high","round","random","pivot","q","lastPlugin","warning","Warning","messages","ignore","first","toResult","SourceMapGenerator","SourceNode","argv","terminator","hasFlag","flag","stdout","isTTY","_skipValidation","_sourcesContents","aSourceMapConsumer","generator","newMapping","generated","original","addMapping","sourceFile","sourceRelative","setSourceContent","_validateMapping","aSourceFile","aSourceContent","applySourceMap","aSourceMapPath","newSources","newNames","aGenerated","aOriginal","_serializeMappings","nameIdx","sourceIdx","previousGeneratedLine","aSources","prefix","unprefixed","sequence","PreviousMap","mapResolve","origin","from","Match","_extends","_preact","_preactRouter","_classCallCheck","instance","Constructor","_possibleConstructorReturn","self","ReferenceError","_Component","_temp","_this","_len","_key","update","nextUrl","subClass","superClass","writable","setPrototypeOf","_inherits","_ref","activeClassName","_objectWithoutProperties","h","_ref2","re","normalizeUrl","endsWith","getPrerenderdata","checkProps","isInline","mapOpts","annotation","isSourcesContent","clearAnnotation","setSourcesContent","already","applyPrevMaps","isAnnotation","toBase64","unescape","encodeURIComponent","addAnnotation","outputFile","eol","generateMap","to","sourcePath","generateString","generate","DEFAULT_RAW","colon","indent","beforeDecl","beforeRule","beforeOpen","beforeClose","beforeComment","emptyBody","commentLeft","commentRight","semicolon","comment","left","right","between","rawValue","rule","atrule","params","body","block","detect","beforeAfter","method","rawSemicolon","rawEmptyBody","rawIndent","rawBeforeComment","rawBeforeDecl","rawBeforeRule","rawBeforeClose","rawBeforeOpen","rawColon","buf","depth","step","REGEX_NEWLINE","isSourceNode","aLine","aColumn","aChunks","sourceContents","fromStringWithSourceMap","aGeneratedCode","aRelativePath","remainingLines","remainingLinesIndex","shiftNextLine","getNextLine","lastGeneratedLine","lastMapping","nextLine","addMappingWithCode","aChunk","isArray","chunk","unshift","aFn","aSep","newChildren","replaceRight","aPattern","aReplacement","lastChild","walkSourceContents","toStringWithSourceMap","sourceMappingActive","lastOriginalSource","lastOriginalLine","lastOriginalColumn","lastOriginalName","sourceContent","createTokenizer","tokenizer","emptyRule","other","bracket","brackets","tokens","unclosedBracket","spacesAndCommentsFromEnd","unknownWord","spacesAndCommentsFromStart","stringFrom","spacesFromEnd","checkMissedSemicolon","endFile","unclosedBlock","freeSemicolon","clean","pattern","all","spaces","lastTokenType","unexpectedClose","doubleColon","unnamedAtrule","precheckMissedSemicolon","founded","PRERENDER_DATA_FILE_NAME","buffer","returned","back","nextToken","ignoreUnclosed","currentToken","controlChar","escaped","unclosed","escapePos","RE_BAD_BRACKET","nextOffset","RE_AT_END","RE_HEX_ESCAPE","RE_WORD_END","endOfFile","position","SINGLE_QUOTE","DOUBLE_QUOTE","BACKSLASH","SLASH","NEWLINE","SPACE","FEED","TAB","CR","OPEN_SQUARE","CLOSE_SQUARE","OPEN_PARENTHESES","CLOSE_PARENTHESES","OPEN_CURLY","CLOSE_CURLY","SEMICOLON","ASTERISK","COLON","AT"],"mappings":"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","file":"ssr-bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"QfWi\");\n","import { createContext } from 'preact';\n\nconst PrerenderDataContext = createContext(null);\n\nexport { PrerenderDataContext };\n","import Container from './container'\nimport list from './list'\n\n/**\n * Represents a CSS rule: a selector followed by a declaration block.\n *\n * @extends Container\n *\n * @example\n * const root = postcss.parse('a{}')\n * const rule = root.first\n * rule.type       //=> 'rule'\n * rule.toString() //=> 'a{}'\n */\nclass Rule extends Container {\n  constructor (defaults) {\n    super(defaults)\n    this.type = 'rule'\n    if (!this.nodes) this.nodes = []\n  }\n\n  /**\n   * An array containing the rule’s individual selectors.\n   * Groups of selectors are split at commas.\n   *\n   * @type {string[]}\n   *\n   * @example\n   * const root = postcss.parse('a, b { }')\n   * const rule = root.first\n   *\n   * rule.selector  //=> 'a, b'\n   * rule.selectors //=> ['a', 'b']\n   *\n   * rule.selectors = ['a', 'strong']\n   * rule.selector //=> 'a, strong'\n   */\n  get selectors () {\n    return list.comma(this.selector)\n  }\n\n  set selectors (values) {\n    let match = this.selector ? this.selector.match(/,\\s*/) : null\n    let sep = match ? match[0] : ',' + this.raw('between', 'beforeOpen')\n    this.selector = values.join(sep)\n  }\n\n  /**\n   * @memberof Rule#\n   * @member {string} selector The rule’s full selector represented\n   *                           as a string.\n   *\n   * @example\n   * const root = postcss.parse('a, b { }')\n   * const rule = root.first\n   * rule.selector //=> 'a, b'\n   */\n\n  /**\n   * @memberof Rule#\n   * @member {object} raws Information to generate byte-to-byte equal\n   *                       node string as it was in the origin input.\n   *\n   * Every parser saves its own properties,\n   * but the default CSS parser uses:\n   *\n   * * `before`: the space symbols before the node. It also stores `*`\n   *   and `_` symbols before the declaration (IE hack).\n   * * `after`: the space symbols after the last child of the node\n   *   to the end of the node.\n   * * `between`: the symbols between the property and value\n   *   for declarations, selector and `{` for rules, or last parameter\n   *   and `{` for at-rules.\n   * * `semicolon`: contains `true` if the last child has\n   *   an (optional) semicolon.\n   * * `ownSemicolon`: contains `true` if there is semicolon after rule.\n   *\n   * PostCSS cleans selectors from comments and extra spaces,\n   * but it stores origin content in raws properties.\n   * As such, if you don’t change a declaration’s value,\n   * PostCSS will use the raw value with comments.\n   *\n   * @example\n   * const root = postcss.parse('a {\\n  color:black\\n}')\n   * root.first.first.raws //=> { before: '', between: ' ', after: '\\n' }\n   */\n}\n\nexport default Rule\n","/**\n * Represents a plugin’s warning. It can be created using {@link Node#warn}.\n *\n * @example\n * if (decl.important) {\n *   decl.warn(result, 'Avoid !important', { word: '!important' })\n * }\n */\nclass Warning {\n  /**\n   * @param {string} text        Warning message.\n   * @param {Object} [opts]      Warning options.\n   * @param {Node}   opts.node   CSS node that caused the warning.\n   * @param {string} opts.word   Word in CSS source that caused the warning.\n   * @param {number} opts.index  Index in CSS node string that caused\n   *                             the warning.\n   * @param {string} opts.plugin Name of the plugin that created\n   *                             this warning. {@link Result#warn} fills\n   *                             this property automatically.\n   */\n  constructor (text, opts = { }) {\n    /**\n     * Type to filter warnings from {@link Result#messages}.\n     * Always equal to `\"warning\"`.\n     *\n     * @type {string}\n     *\n     * @example\n     * const nonWarning = result.messages.filter(i => i.type !== 'warning')\n     */\n    this.type = 'warning'\n    /**\n     * The warning message.\n     *\n     * @type {string}\n     *\n     * @example\n     * warning.text //=> 'Try to avoid !important'\n     */\n    this.text = text\n\n    if (opts.node && opts.node.source) {\n      let pos = opts.node.positionBy(opts)\n      /**\n       * Line in the input file with this warning’s source.\n       * @type {number}\n       *\n       * @example\n       * warning.line //=> 5\n       */\n      this.line = pos.line\n      /**\n       * Column in the input file with this warning’s source.\n       *\n       * @type {number}\n       *\n       * @example\n       * warning.column //=> 6\n       */\n      this.column = pos.column\n    }\n\n    for (let opt in opts) this[opt] = opts[opt]\n  }\n\n  /**\n   * Returns a warning position and message.\n   *\n   * @example\n   * warning.toString() //=> 'postcss-lint:a.css:10:14: Avoid !important'\n   *\n   * @return {string} Warning position and message.\n   */\n  toString () {\n    if (this.node) {\n      return this.node.error(this.text, {\n        plugin: this.plugin,\n        index: this.index,\n        word: this.word\n      }).message\n    }\n\n    if (this.plugin) {\n      return this.plugin + ': ' + this.text\n    }\n\n    return this.text\n  }\n\n  /**\n   * @memberof Warning#\n   * @member {string} plugin The name of the plugin that created\n   *                         it will fill this property automatically.\n   *                         this warning. When you call {@link Node#warn}\n   *\n   * @example\n   * warning.plugin //=> 'postcss-important'\n   */\n\n  /**\n   * @memberof Warning#\n   * @member {Node} node Contains the CSS node that caused the warning.\n   *\n   * @example\n   * warning.node.toString() //=> 'color: white !important'\n   */\n}\n\nexport default Warning\n","'use strict';\n\nfunction assembleStyles () {\n\tvar styles = {\n\t\tmodifiers: {\n\t\t\treset: [0, 0],\n\t\t\tbold: [1, 22], // 21 isn't widely supported and 22 does the same thing\n\t\t\tdim: [2, 22],\n\t\t\titalic: [3, 23],\n\t\t\tunderline: [4, 24],\n\t\t\tinverse: [7, 27],\n\t\t\thidden: [8, 28],\n\t\t\tstrikethrough: [9, 29]\n\t\t},\n\t\tcolors: {\n\t\t\tblack: [30, 39],\n\t\t\tred: [31, 39],\n\t\t\tgreen: [32, 39],\n\t\t\tyellow: [33, 39],\n\t\t\tblue: [34, 39],\n\t\t\tmagenta: [35, 39],\n\t\t\tcyan: [36, 39],\n\t\t\twhite: [37, 39],\n\t\t\tgray: [90, 39]\n\t\t},\n\t\tbgColors: {\n\t\t\tbgBlack: [40, 49],\n\t\t\tbgRed: [41, 49],\n\t\t\tbgGreen: [42, 49],\n\t\t\tbgYellow: [43, 49],\n\t\t\tbgBlue: [44, 49],\n\t\t\tbgMagenta: [45, 49],\n\t\t\tbgCyan: [46, 49],\n\t\t\tbgWhite: [47, 49]\n\t\t}\n\t};\n\n\t// fix humans\n\tstyles.colors.grey = styles.colors.gray;\n\n\tObject.keys(styles).forEach(function (groupName) {\n\t\tvar group = styles[groupName];\n\n\t\tObject.keys(group).forEach(function (styleName) {\n\t\t\tvar style = group[styleName];\n\n\t\t\tstyles[styleName] = group[styleName] = {\n\t\t\t\topen: '\\u001b[' + style[0] + 'm',\n\t\t\t\tclose: '\\u001b[' + style[1] + 'm'\n\t\t\t};\n\t\t});\n\n\t\tObject.defineProperty(styles, groupName, {\n\t\t\tvalue: group,\n\t\t\tenumerable: false\n\t\t});\n\t});\n\n\treturn styles;\n}\n\nObject.defineProperty(module, 'exports', {\n\tenumerable: true,\n\tget: assembleStyles\n});\n","import Stringifier from './stringifier'\n\nfunction stringify (node, builder) {\n  let str = new Stringifier(builder)\n  str.stringify(node)\n}\n\nexport default stringify\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar base64 = require('./base64');\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nvar VLQ_BASE_SHIFT = 5;\n\n// binary: 100000\nvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n// binary: 011111\nvar VLQ_BASE_MASK = VLQ_BASE - 1;\n\n// binary: 100000\nvar VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\nfunction toVLQSigned(aValue) {\n  return aValue < 0\n    ? ((-aValue) << 1) + 1\n    : (aValue << 1) + 0;\n}\n\n/**\n * Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n */\nfunction fromVLQSigned(aValue) {\n  var isNegative = (aValue & 1) === 1;\n  var shifted = aValue >> 1;\n  return isNegative\n    ? -shifted\n    : shifted;\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nexports.encode = function base64VLQ_encode(aValue) {\n  var encoded = \"\";\n  var digit;\n\n  var vlq = toVLQSigned(aValue);\n\n  do {\n    digit = vlq & VLQ_BASE_MASK;\n    vlq >>>= VLQ_BASE_SHIFT;\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT;\n    }\n    encoded += base64.encode(digit);\n  } while (vlq > 0);\n\n  return encoded;\n};\n\n/**\n * Decodes the next base 64 VLQ value from the given string and returns the\n * value and the rest of the string via the out parameter.\n */\nexports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n  var strLen = aStr.length;\n  var result = 0;\n  var shift = 0;\n  var continuation, digit;\n\n  do {\n    if (aIndex >= strLen) {\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\n    }\n\n    digit = base64.decode(aStr.charCodeAt(aIndex++));\n    if (digit === -1) {\n      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\n    }\n\n    continuation = !!(digit & VLQ_CONTINUATION_BIT);\n    digit &= VLQ_BASE_MASK;\n    result = result + (digit << shift);\n    shift += VLQ_BASE_SHIFT;\n  } while (continuation);\n\n  aOutParam.value = fromVLQSigned(result);\n  aOutParam.rest = aIndex;\n};\n","import chalk from 'chalk'\n\nimport tokenizer from './tokenize'\nimport Input from './input'\n\nconst HIGHLIGHT_THEME = {\n  'brackets': chalk.cyan,\n  'at-word': chalk.cyan,\n  'comment': chalk.gray,\n  'string': chalk.green,\n  'class': chalk.yellow,\n  'call': chalk.cyan,\n  'hash': chalk.magenta,\n  '(': chalk.cyan,\n  ')': chalk.cyan,\n  '{': chalk.yellow,\n  '}': chalk.yellow,\n  '[': chalk.yellow,\n  ']': chalk.yellow,\n  ':': chalk.yellow,\n  ';': chalk.yellow\n}\n\nfunction getTokenType ([type, value], processor) {\n  if (type === 'word') {\n    if (value[0] === '.') {\n      return 'class'\n    }\n    if (value[0] === '#') {\n      return 'hash'\n    }\n  }\n\n  if (!processor.endOfFile()) {\n    let next = processor.nextToken()\n    processor.back(next)\n    if (next[0] === 'brackets' || next[0] === '(') return 'call'\n  }\n\n  return type\n}\n\nfunction terminalHighlight (css) {\n  let processor = tokenizer(new Input(css), { ignoreErrors: true })\n  let result = ''\n  while (!processor.endOfFile()) {\n    let token = processor.nextToken()\n    let color = HIGHLIGHT_THEME[getTokenType(token, processor)]\n    if (color) {\n      result += token[1].split(/\\r?\\n/)\n        .map(i => color(i))\n        .join('\\n')\n    } else {\n      result += token[1]\n    }\n  }\n  return result\n}\n\nexport default terminalHighlight\n","import CssSyntaxError from './css-syntax-error'\nimport Stringifier from './stringifier'\nimport stringify from './stringify'\n\nfunction cloneNode (obj, parent) {\n  let cloned = new obj.constructor()\n\n  for (let i in obj) {\n    if (!obj.hasOwnProperty(i)) continue\n    let value = obj[i]\n    let type = typeof value\n\n    if (i === 'parent' && type === 'object') {\n      if (parent) cloned[i] = parent\n    } else if (i === 'source') {\n      cloned[i] = value\n    } else if (value instanceof Array) {\n      cloned[i] = value.map(j => cloneNode(j, cloned))\n    } else {\n      if (type === 'object' && value !== null) value = cloneNode(value)\n      cloned[i] = value\n    }\n  }\n\n  return cloned\n}\n\n/**\n * All node classes inherit the following common methods.\n *\n * @abstract\n */\nclass Node {\n  /**\n   * @param {object} [defaults] Value for node properties.\n   */\n  constructor (defaults = { }) {\n    this.raws = { }\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof defaults !== 'object' && typeof defaults !== 'undefined') {\n        throw new Error(\n          'PostCSS nodes constructor accepts object, not ' +\n          JSON.stringify(defaults)\n        )\n      }\n    }\n    for (let name in defaults) {\n      this[name] = defaults[name]\n    }\n  }\n\n  /**\n   * Returns a `CssSyntaxError` instance containing the original position\n   * of the node in the source, showing line and column numbers and also\n   * a small excerpt to facilitate debugging.\n   *\n   * If present, an input source map will be used to get the original position\n   * of the source, even from a previous compilation step\n   * (e.g., from Sass compilation).\n   *\n   * This method produces very useful error messages.\n   *\n   * @param {string} message     Error description.\n   * @param {object} [opts]      Options.\n   * @param {string} opts.plugin Plugin name that created this error.\n   *                             PostCSS will set it automatically.\n   * @param {string} opts.word   A word inside a node’s string that should\n   *                             be highlighted as the source of the error.\n   * @param {number} opts.index  An index inside a node’s string that should\n   *                             be highlighted as the source of the error.\n   *\n   * @return {CssSyntaxError} Error object to throw it.\n   *\n   * @example\n   * if (!variables[name]) {\n   *   throw decl.error('Unknown variable ' + name, { word: name })\n   *   // CssSyntaxError: postcss-vars:a.sass:4:3: Unknown variable $black\n   *   //   color: $black\n   *   // a\n   *   //          ^\n   *   //   background: white\n   * }\n   */\n  error (message, opts = { }) {\n    if (this.source) {\n      let pos = this.positionBy(opts)\n      return this.source.input.error(message, pos.line, pos.column, opts)\n    }\n    return new CssSyntaxError(message)\n  }\n\n  /**\n   * This method is provided as a convenience wrapper for {@link Result#warn}.\n   *\n   * @param {Result} result      The {@link Result} instance\n   *                             that will receive the warning.\n   * @param {string} text        Warning message.\n   * @param {object} [opts]      Options\n   * @param {string} opts.plugin Plugin name that created this warning.\n   *                             PostCSS will set it automatically.\n   * @param {string} opts.word   A word inside a node’s string that should\n   *                             be highlighted as the source of the warning.\n   * @param {number} opts.index  An index inside a node’s string that should\n   *                             be highlighted as the source of the warning.\n   *\n   * @return {Warning} Created warning object.\n   *\n   * @example\n   * const plugin = postcss.plugin('postcss-deprecated', () => {\n   *   return (root, result) => {\n   *     root.walkDecls('bad', decl => {\n   *       decl.warn(result, 'Deprecated property bad')\n   *     })\n   *   }\n   * })\n   */\n  warn (result, text, opts) {\n    let data = { node: this }\n    for (let i in opts) data[i] = opts[i]\n    return result.warn(text, data)\n  }\n\n  /**\n   * Removes the node from its parent and cleans the parent properties\n   * from the node and its children.\n   *\n   * @example\n   * if (decl.prop.match(/^-webkit-/)) {\n   *   decl.remove()\n   * }\n   *\n   * @return {Node} Node to make calls chain.\n   */\n  remove () {\n    if (this.parent) {\n      this.parent.removeChild(this)\n    }\n    this.parent = undefined\n    return this\n  }\n\n  /**\n   * Returns a CSS string representing the node.\n   *\n   * @param {stringifier|syntax} [stringifier] A syntax to use\n   *                                           in string generation.\n   *\n   * @return {string} CSS string of this node.\n   *\n   * @example\n   * postcss.rule({ selector: 'a' }).toString() //=> \"a {}\"\n   */\n  toString (stringifier = stringify) {\n    if (stringifier.stringify) stringifier = stringifier.stringify\n    let result = ''\n    stringifier(this, i => {\n      result += i\n    })\n    return result\n  }\n\n  /**\n   * Returns an exact clone of the node.\n   *\n   * The resulting cloned node and its (cloned) children will retain\n   * code style properties.\n   *\n   * @param {object} [overrides] New properties to override in the clone.\n   *\n   * @example\n   * decl.raws.before    //=> \"\\n  \"\n   * const cloned = decl.clone({ prop: '-moz-' + decl.prop })\n   * cloned.raws.before  //=> \"\\n  \"\n   * cloned.toString()   //=> -moz-transform: scale(0)\n   *\n   * @return {Node} Clone of the node.\n   */\n  clone (overrides = { }) {\n    let cloned = cloneNode(this)\n    for (let name in overrides) {\n      cloned[name] = overrides[name]\n    }\n    return cloned\n  }\n\n  /**\n   * Shortcut to clone the node and insert the resulting cloned node\n   * before the current node.\n   *\n   * @param {object} [overrides] Mew properties to override in the clone.\n   *\n   * @example\n   * decl.cloneBefore({ prop: '-moz-' + decl.prop })\n   *\n   * @return {Node} New node\n   */\n  cloneBefore (overrides = { }) {\n    let cloned = this.clone(overrides)\n    this.parent.insertBefore(this, cloned)\n    return cloned\n  }\n\n  /**\n   * Shortcut to clone the node and insert the resulting cloned node\n   * after the current node.\n   *\n   * @param {object} [overrides] New properties to override in the clone.\n   *\n   * @return {Node} New node.\n   */\n  cloneAfter (overrides = { }) {\n    let cloned = this.clone(overrides)\n    this.parent.insertAfter(this, cloned)\n    return cloned\n  }\n\n  /**\n   * Inserts node(s) before the current node and removes the current node.\n   *\n   * @param {...Node} nodes Mode(s) to replace current one.\n   *\n   * @example\n   * if (atrule.name === 'mixin') {\n   *   atrule.replaceWith(mixinRules[atrule.params])\n   * }\n   *\n   * @return {Node} Current node to methods chain.\n   */\n  replaceWith (...nodes) {\n    if (this.parent) {\n      for (let node of nodes) {\n        this.parent.insertBefore(this, node)\n      }\n\n      this.remove()\n    }\n\n    return this\n  }\n\n  /**\n   * Returns the next child of the node’s parent.\n   * Returns `undefined` if the current node is the last child.\n   *\n   * @return {Node|undefined} Next node.\n   *\n   * @example\n   * if (comment.text === 'delete next') {\n   *   const next = comment.next()\n   *   if (next) {\n   *     next.remove()\n   *   }\n   * }\n   */\n  next () {\n    if (!this.parent) return undefined\n    let index = this.parent.index(this)\n    return this.parent.nodes[index + 1]\n  }\n\n  /**\n   * Returns the previous child of the node’s parent.\n   * Returns `undefined` if the current node is the first child.\n   *\n   * @return {Node|undefined} Previous node.\n   *\n   * @example\n   * const annotation = decl.prev()\n   * if (annotation.type === 'comment') {\n   *   readAnnotation(annotation.text)\n   * }\n   */\n  prev () {\n    if (!this.parent) return undefined\n    let index = this.parent.index(this)\n    return this.parent.nodes[index - 1]\n  }\n\n  /**\n   * Insert new node before current node to current node’s parent.\n   *\n   * Just alias for `node.parent.insertBefore(node, add)`.\n   *\n   * @param {Node|object|string|Node[]} add New node.\n   *\n   * @return {Node} This node for methods chain.\n   *\n   * @example\n   * decl.before('content: \"\"')\n   */\n  before (add) {\n    this.parent.insertBefore(this, add)\n    return this\n  }\n\n  /**\n   * Insert new node after current node to current node’s parent.\n   *\n   * Just alias for `node.parent.insertAfter(node, add)`.\n   *\n   * @param {Node|object|string|Node[]} add New node.\n   *\n   * @return {Node} This node for methods chain.\n   *\n   * @example\n   * decl.after('color: black')\n   */\n  after (add) {\n    this.parent.insertAfter(this, add)\n    return this\n  }\n\n  toJSON () {\n    let fixed = { }\n\n    for (let name in this) {\n      if (!this.hasOwnProperty(name)) continue\n      if (name === 'parent') continue\n      let value = this[name]\n\n      if (value instanceof Array) {\n        fixed[name] = value.map(i => {\n          if (typeof i === 'object' && i.toJSON) {\n            return i.toJSON()\n          } else {\n            return i\n          }\n        })\n      } else if (typeof value === 'object' && value.toJSON) {\n        fixed[name] = value.toJSON()\n      } else {\n        fixed[name] = value\n      }\n    }\n\n    return fixed\n  }\n\n  /**\n   * Returns a {@link Node#raws} value. If the node is missing\n   * the code style property (because the node was manually built or cloned),\n   * PostCSS will try to autodetect the code style property by looking\n   * at other nodes in the tree.\n   *\n   * @param {string} prop          Name of code style property.\n   * @param {string} [defaultType] Name of default value, it can be missed\n   *                               if the value is the same as prop.\n   *\n   * @example\n   * const root = postcss.parse('a { background: white }')\n   * root.nodes[0].append({ prop: 'color', value: 'black' })\n   * root.nodes[0].nodes[1].raws.before   //=> undefined\n   * root.nodes[0].nodes[1].raw('before') //=> ' '\n   *\n   * @return {string} Code style value.\n   */\n  raw (prop, defaultType) {\n    let str = new Stringifier()\n    return str.raw(this, prop, defaultType)\n  }\n\n  /**\n   * Finds the Root instance of the node’s tree.\n   *\n   * @example\n   * root.nodes[0].nodes[0].root() === root\n   *\n   * @return {Root} Root parent.\n   */\n  root () {\n    let result = this\n    while (result.parent) result = result.parent\n    return result\n  }\n\n  /**\n   * Clear the code style properties for the node and its children.\n   *\n   * @param {boolean} [keepBetween] Keep the raws.between symbols.\n   *\n   * @return {undefined}\n   *\n   * @example\n   * node.raws.before  //=> ' '\n   * node.cleanRaws()\n   * node.raws.before  //=> undefined\n   */\n  cleanRaws (keepBetween) {\n    delete this.raws.before\n    delete this.raws.after\n    if (!keepBetween) delete this.raws.between\n  }\n\n  positionInside (index) {\n    let string = this.toString()\n    let column = this.source.start.column\n    let line = this.source.start.line\n\n    for (let i = 0; i < index; i++) {\n      if (string[i] === '\\n') {\n        column = 1\n        line += 1\n      } else {\n        column += 1\n      }\n    }\n\n    return { line, column }\n  }\n\n  positionBy (opts) {\n    let pos = this.source.start\n    if (opts.index) {\n      pos = this.positionInside(opts.index)\n    } else if (opts.word) {\n      let index = this.toString().indexOf(opts.word)\n      if (index !== -1) pos = this.positionInside(index)\n    }\n    return pos\n  }\n\n  /**\n   * @memberof Node#\n   * @member {string} type String representing the node’s type.\n   *                       Possible values are `root`, `atrule`, `rule`,\n   *                       `decl`, or `comment`.\n   *\n   * @example\n   * postcss.decl({ prop: 'color', value: 'black' }).type //=> 'decl'\n   */\n\n  /**\n   * @memberof Node#\n   * @member {Container} parent The node’s parent node.\n   *\n   * @example\n   * root.nodes[0].parent === root\n   */\n\n  /**\n   * @memberof Node#\n   * @member {source} source The input source of the node.\n   *\n   * The property is used in source map generation.\n   *\n   * If you create a node manually (e.g., with `postcss.decl()`),\n   * that node will not have a `source` property and will be absent\n   * from the source map. For this reason, the plugin developer should\n   * consider cloning nodes to create new ones (in which case the new node’s\n   * source will reference the original, cloned node) or setting\n   * the `source` property manually.\n   *\n   * ```js\n   * // Bad\n   * const prefixed = postcss.decl({\n   *   prop: '-moz-' + decl.prop,\n   *   value: decl.value\n   * })\n   *\n   * // Good\n   * const prefixed = decl.clone({ prop: '-moz-' + decl.prop })\n   * ```\n   *\n   * ```js\n   * if (atrule.name === 'add-link') {\n   *   const rule = postcss.rule({ selector: 'a', source: atrule.source })\n   *   atrule.parent.insertBefore(atrule, rule)\n   * }\n   * ```\n   *\n   * @example\n   * decl.source.input.from //=> '/home/ai/a.sass'\n   * decl.source.start      //=> { line: 10, column: 2 }\n   * decl.source.end        //=> { line: 10, column: 12 }\n   */\n\n  /**\n   * @memberof Node#\n   * @member {object} raws Information to generate byte-to-byte equal\n   *                       node string as it was in the origin input.\n   *\n   * Every parser saves its own properties,\n   * but the default CSS parser uses:\n   *\n   * * `before`: the space symbols before the node. It also stores `*`\n   *   and `_` symbols before the declaration (IE hack).\n   * * `after`: the space symbols after the last child of the node\n   *   to the end of the node.\n   * * `between`: the symbols between the property and value\n   *   for declarations, selector and `{` for rules, or last parameter\n   *   and `{` for at-rules.\n   * * `semicolon`: contains true if the last child has\n   *   an (optional) semicolon.\n   * * `afterName`: the space between the at-rule name and its parameters.\n   * * `left`: the space symbols between `/*` and the comment’s text.\n   * * `right`: the space symbols between the comment’s text\n   *   and <code>*&#47;</code>.\n   * * `important`: the content of the important statement,\n   *   if it is not just `!important`.\n   *\n   * PostCSS cleans selectors, declaration values and at-rule parameters\n   * from comments and extra spaces, but it stores origin content in raws\n   * properties. As such, if you don’t change a declaration’s value,\n   * PostCSS will use the raw value with comments.\n   *\n   * @example\n   * const root = postcss.parse('a {\\n  color:black\\n}')\n   * root.first.first.raws //=> { before: '\\n  ', between: ':' }\n   */\n}\n\nexport default Node\n\n/**\n * @typedef {object} position\n * @property {number} line   Source line in file.\n * @property {number} column Source column in file.\n */\n\n/**\n * @typedef {object} source\n * @property {Input} input    {@link Input} with input file\n * @property {position} start The starting position of the node’s source.\n * @property {position} end   The ending position of the node’s source.\n */\n","import Declaration from './declaration'\nimport Processor from './processor'\nimport stringify from './stringify'\nimport Comment from './comment'\nimport AtRule from './at-rule'\nimport vendor from './vendor'\nimport parse from './parse'\nimport list from './list'\nimport Rule from './rule'\nimport Root from './root'\n\n/**\n * Create a new {@link Processor} instance that will apply `plugins`\n * as CSS processors.\n *\n * @param {Array.<Plugin|pluginFunction>|Processor} plugins PostCSS plugins.\n *        See {@link Processor#use} for plugin format.\n *\n * @return {Processor} Processor to process multiple CSS.\n *\n * @example\n * import postcss from 'postcss'\n *\n * postcss(plugins).process(css, { from, to }).then(result => {\n *   console.log(result.css)\n * })\n *\n * @namespace postcss\n */\nfunction postcss (...plugins) {\n  if (plugins.length === 1 && Array.isArray(plugins[0])) {\n    plugins = plugins[0]\n  }\n  return new Processor(plugins)\n}\n\n/**\n * Creates a PostCSS plugin with a standard API.\n *\n * The newly-wrapped function will provide both the name and PostCSS\n * version of the plugin.\n *\n * ```js\n * const processor = postcss([replace])\n * processor.plugins[0].postcssPlugin  //=> 'postcss-replace'\n * processor.plugins[0].postcssVersion //=> '6.0.0'\n * ```\n *\n * The plugin function receives 2 arguments: {@link Root}\n * and {@link Result} instance. The function should mutate the provided\n * `Root` node. Alternatively, you can create a new `Root` node\n * and override the `result.root` property.\n *\n * ```js\n * const cleaner = postcss.plugin('postcss-cleaner', () => {\n *   return (root, result) => {\n *     result.root = postcss.root()\n *   }\n * })\n * ```\n *\n * As a convenience, plugins also expose a `process` method so that you can use\n * them as standalone tools.\n *\n * ```js\n * cleaner.process(css, processOpts, pluginOpts)\n * // This is equivalent to:\n * postcss([ cleaner(pluginOpts) ]).process(css, processOpts)\n * ```\n *\n * Asynchronous plugins should return a `Promise` instance.\n *\n * ```js\n * postcss.plugin('postcss-import', () => {\n *   return (root, result) => {\n *     return new Promise( (resolve, reject) => {\n *       fs.readFile('base.css', (base) => {\n *         root.prepend(base)\n *         resolve()\n *       })\n *     })\n *   }\n * })\n * ```\n *\n * Add warnings using the {@link Node#warn} method.\n * Send data to other plugins using the {@link Result#messages} array.\n *\n * ```js\n * postcss.plugin('postcss-caniuse-test', () => {\n *   return (root, result) => {\n *     root.walkDecls(decl => {\n *       if (!caniuse.support(decl.prop)) {\n *         decl.warn(result, 'Some browsers do not support ' + decl.prop)\n *       }\n *     })\n *   }\n * })\n * ```\n *\n * @param {string} name          PostCSS plugin name. Same as in `name`\n *                               property in `package.json`. It will be saved\n *                               in `plugin.postcssPlugin` property.\n * @param {function} initializer Will receive plugin options\n *                               and should return {@link pluginFunction}\n *\n * @return {Plugin} PostCSS plugin.\n */\npostcss.plugin = function plugin (name, initializer) {\n  function creator (...args) {\n    let transformer = initializer(...args)\n    transformer.postcssPlugin = name\n    transformer.postcssVersion = (new Processor()).version\n    return transformer\n  }\n\n  let cache\n  Object.defineProperty(creator, 'postcss', {\n    get () {\n      if (!cache) cache = creator()\n      return cache\n    }\n  })\n\n  creator.process = function (css, processOpts, pluginOpts) {\n    return postcss([creator(pluginOpts)]).process(css, processOpts)\n  }\n\n  return creator\n}\n\n/**\n * Default function to convert a node tree into a CSS string.\n *\n * @param {Node} node       Start node for stringifing. Usually {@link Root}.\n * @param {builder} builder Function to concatenate CSS from node’s parts\n *                          or generate string and source map.\n *\n * @return {void}\n *\n * @function\n */\npostcss.stringify = stringify\n\n/**\n * Parses source css and returns a new {@link Root} node,\n * which contains the source CSS nodes.\n *\n * @param {string|toString} css   String with input CSS or any object\n *                                with toString() method, like a Buffer\n * @param {processOptions} [opts] Options with only `from` and `map` keys.\n *\n * @return {Root} PostCSS AST.\n *\n * @example\n * // Simple CSS concatenation with source map support\n * const root1 = postcss.parse(css1, { from: file1 })\n * const root2 = postcss.parse(css2, { from: file2 })\n * root1.append(root2).toResult().css\n *\n * @function\n */\npostcss.parse = parse\n\n/**\n * Contains the {@link vendor} module.\n *\n * @type {vendor}\n *\n * @example\n * postcss.vendor.unprefixed('-moz-tab') //=> ['tab']\n */\npostcss.vendor = vendor\n\n/**\n * Contains the {@link list} module.\n *\n * @member {list}\n *\n * @example\n * postcss.list.space('5px calc(10% + 5px)') //=> ['5px', 'calc(10% + 5px)']\n */\npostcss.list = list\n\n/**\n * Creates a new {@link Comment} node.\n *\n * @param {object} [defaults] Properties for the new node.\n *\n * @return {Comment} New comment node\n *\n * @example\n * postcss.comment({ text: 'test' })\n */\npostcss.comment = defaults => new Comment(defaults)\n\n/**\n * Creates a new {@link AtRule} node.\n *\n * @param {object} [defaults] Properties for the new node.\n *\n * @return {AtRule} new at-rule node\n *\n * @example\n * postcss.atRule({ name: 'charset' }).toString() //=> \"@charset\"\n */\npostcss.atRule = defaults => new AtRule(defaults)\n\n/**\n * Creates a new {@link Declaration} node.\n *\n * @param {object} [defaults] Properties for the new node.\n *\n * @return {Declaration} new declaration node\n *\n * @example\n * postcss.decl({ prop: 'color', value: 'red' }).toString() //=> \"color: red\"\n */\npostcss.decl = defaults => new Declaration(defaults)\n\n/**\n * Creates a new {@link Rule} node.\n *\n * @param {object} [defaults] Properties for the new node.\n *\n * @return {Rule} new rule node\n *\n * @example\n * postcss.rule({ selector: 'a' }).toString() //=> \"a {\\n}\"\n */\npostcss.rule = defaults => new Rule(defaults)\n\n/**\n * Creates a new {@link Root} node.\n *\n * @param {object} [defaults] Properties for the new node.\n *\n * @return {Root} new root node.\n *\n * @example\n * postcss.root({ after: '\\n' }).toString() //=> \"\\n\"\n */\npostcss.root = defaults => new Root(defaults)\n\nexport default postcss\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\n\n/**\n * Determine whether mappingB is after mappingA with respect to generated\n * position.\n */\nfunction generatedPositionAfter(mappingA, mappingB) {\n  // Optimized for most common case\n  var lineA = mappingA.generatedLine;\n  var lineB = mappingB.generatedLine;\n  var columnA = mappingA.generatedColumn;\n  var columnB = mappingB.generatedColumn;\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\n         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n}\n\n/**\n * A data structure to provide a sorted view of accumulated mappings in a\n * performance conscious manner. It trades a neglibable overhead in general\n * case for a large speedup in case of mappings being added in order.\n */\nfunction MappingList() {\n  this._array = [];\n  this._sorted = true;\n  // Serves as infimum\n  this._last = {generatedLine: -1, generatedColumn: 0};\n}\n\n/**\n * Iterate through internal items. This method takes the same arguments that\n * `Array.prototype.forEach` takes.\n *\n * NOTE: The order of the mappings is NOT guaranteed.\n */\nMappingList.prototype.unsortedForEach =\n  function MappingList_forEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg);\n  };\n\n/**\n * Add the given source mapping.\n *\n * @param Object aMapping\n */\nMappingList.prototype.add = function MappingList_add(aMapping) {\n  if (generatedPositionAfter(this._last, aMapping)) {\n    this._last = aMapping;\n    this._array.push(aMapping);\n  } else {\n    this._sorted = false;\n    this._array.push(aMapping);\n  }\n};\n\n/**\n * Returns the flat, sorted array of mappings. The mappings are sorted by\n * generated position.\n *\n * WARNING: This method returns internal data without copying, for\n * performance. The return value must NOT be mutated, and should be treated as\n * an immutable borrow. If you want to take ownership, you must make your own\n * copy.\n */\nMappingList.prototype.toArray = function MappingList_toArray() {\n  if (!this._sorted) {\n    this._array.sort(util.compareByGeneratedPositionsInflated);\n    this._sorted = true;\n  }\n  return this._array;\n};\n\nexports.MappingList = MappingList;\n","import Parser from './parser'\nimport Input from './input'\n\nfunction parse (css, opts) {\n  let input = new Input(css, opts)\n  let parser = new Parser(input)\n  try {\n    parser.parse()\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (e.name === 'CssSyntaxError' && opts && opts.from) {\n        if (/\\.scss$/i.test(opts.from)) {\n          e.message += '\\nYou tried to parse SCSS with ' +\n                       'the standard CSS parser; ' +\n                       'try again with the postcss-scss parser'\n        } else if (/\\.sass/i.test(opts.from)) {\n          e.message += '\\nYou tried to parse Sass with ' +\n                       'the standard CSS parser; ' +\n                       'try again with the postcss-sass parser'\n        } else if (/\\.less$/i.test(opts.from)) {\n          e.message += '\\nYou tried to parse Less with ' +\n                       'the standard CSS parser; ' +\n                       'try again with the postcss-less parser'\n        }\n      }\n    }\n    throw e\n  }\n\n  return parser.root\n}\n\nexport default parse\n","import Node from './node'\n\n/**\n * Represents a comment between declarations or statements (rule and at-rules).\n *\n * Comments inside selectors, at-rule parameters, or declaration values\n * will be stored in the `raws` properties explained above.\n *\n * @extends Node\n */\nclass Comment extends Node {\n  constructor (defaults) {\n    super(defaults)\n    this.type = 'comment'\n  }\n\n  /**\n   * @memberof Comment#\n   * @member {string} text The comment’s text.\n   */\n\n  /**\n   * @memberof Comment#\n   * @member {object} raws Information to generate byte-to-byte equal\n   *                       node string as it was in the origin input.\n   *\n   * Every parser saves its own properties,\n   * but the default CSS parser uses:\n   *\n   * * `before`: the space symbols before the node.\n   * * `left`: the space symbols between `/*` and the comment’s text.\n   * * `right`: the space symbols between the comment’s text.\n   */\n}\n\nexport default Comment\n","'use strict';\nvar escapeStringRegexp = require('escape-string-regexp');\nvar ansiStyles = require('ansi-styles');\nvar stripAnsi = require('strip-ansi');\nvar hasAnsi = require('has-ansi');\nvar supportsColor = require('supports-color');\nvar defineProps = Object.defineProperties;\nvar isSimpleWindowsTerm = process.platform === 'win32' && !/^xterm/i.test(process.env.TERM);\n\nfunction Chalk(options) {\n\t// detect mode if not set manually\n\tthis.enabled = !options || options.enabled === undefined ? supportsColor : options.enabled;\n}\n\n// use bright blue on Windows as the normal blue color is illegible\nif (isSimpleWindowsTerm) {\n\tansiStyles.blue.open = '\\u001b[94m';\n}\n\nvar styles = (function () {\n\tvar ret = {};\n\n\tObject.keys(ansiStyles).forEach(function (key) {\n\t\tansiStyles[key].closeRe = new RegExp(escapeStringRegexp(ansiStyles[key].close), 'g');\n\n\t\tret[key] = {\n\t\t\tget: function () {\n\t\t\t\treturn build.call(this, this._styles.concat(key));\n\t\t\t}\n\t\t};\n\t});\n\n\treturn ret;\n})();\n\nvar proto = defineProps(function chalk() {}, styles);\n\nfunction build(_styles) {\n\tvar builder = function () {\n\t\treturn applyStyle.apply(builder, arguments);\n\t};\n\n\tbuilder._styles = _styles;\n\tbuilder.enabled = this.enabled;\n\t// __proto__ is used because we must return a function, but there is\n\t// no way to create a function with a different prototype.\n\t/* eslint-disable no-proto */\n\tbuilder.__proto__ = proto;\n\n\treturn builder;\n}\n\nfunction applyStyle() {\n\t// support varags, but simply cast to string in case there's only one arg\n\tvar args = arguments;\n\tvar argsLen = args.length;\n\tvar str = argsLen !== 0 && String(arguments[0]);\n\n\tif (argsLen > 1) {\n\t\t// don't slice `arguments`, it prevents v8 optimizations\n\t\tfor (var a = 1; a < argsLen; a++) {\n\t\t\tstr += ' ' + args[a];\n\t\t}\n\t}\n\n\tif (!this.enabled || !str) {\n\t\treturn str;\n\t}\n\n\tvar nestedStyles = this._styles;\n\tvar i = nestedStyles.length;\n\n\t// Turns out that on Windows dimmed gray text becomes invisible in cmd.exe,\n\t// see https://github.com/chalk/chalk/issues/58\n\t// If we're on Windows and we're dealing with a gray color, temporarily make 'dim' a noop.\n\tvar originalDim = ansiStyles.dim.open;\n\tif (isSimpleWindowsTerm && (nestedStyles.indexOf('gray') !== -1 || nestedStyles.indexOf('grey') !== -1)) {\n\t\tansiStyles.dim.open = '';\n\t}\n\n\twhile (i--) {\n\t\tvar code = ansiStyles[nestedStyles[i]];\n\n\t\t// Replace any instances already present with a re-opening code\n\t\t// otherwise only the part of the string until said closing code\n\t\t// will be colored, and the rest will simply be 'plain'.\n\t\tstr = code.open + str.replace(code.closeRe, code.open) + code.close;\n\t}\n\n\t// Reset the original 'dim' if we changed it to work around the Windows dimmed gray issue.\n\tansiStyles.dim.open = originalDim;\n\n\treturn str;\n}\n\nfunction init() {\n\tvar ret = {};\n\n\tObject.keys(styles).forEach(function (name) {\n\t\tret[name] = {\n\t\t\tget: function () {\n\t\t\t\treturn build.call(this, [name]);\n\t\t\t}\n\t\t};\n\t});\n\n\treturn ret;\n}\n\ndefineProps(Chalk.prototype, init());\n\nmodule.exports = new Chalk();\nmodule.exports.styles = ansiStyles;\nmodule.exports.hasColor = hasAnsi;\nmodule.exports.stripColor = stripAnsi;\nmodule.exports.supportsColor = supportsColor;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nexports.encode = function (number) {\n  if (0 <= number && number < intToCharMap.length) {\n    return intToCharMap[number];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\n};\n\n/**\n * Decode a single base 64 character code digit to an integer. Returns -1 on\n * failure.\n */\nexports.decode = function (charCode) {\n  var bigA = 65;     // 'A'\n  var bigZ = 90;     // 'Z'\n\n  var littleA = 97;  // 'a'\n  var littleZ = 122; // 'z'\n\n  var zero = 48;     // '0'\n  var nine = 57;     // '9'\n\n  var plus = 43;     // '+'\n  var slash = 47;    // '/'\n\n  var littleOffset = 26;\n  var numberOffset = 52;\n\n  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n  if (bigA <= charCode && charCode <= bigZ) {\n    return (charCode - bigA);\n  }\n\n  // 26 - 51: abcdefghijklmnopqrstuvwxyz\n  if (littleA <= charCode && charCode <= littleZ) {\n    return (charCode - littleA + littleOffset);\n  }\n\n  // 52 - 61: 0123456789\n  if (zero <= charCode && charCode <= nine) {\n    return (charCode - zero + numberOffset);\n  }\n\n  // 62: +\n  if (charCode == plus) {\n    return 62;\n  }\n\n  // 63: /\n  if (charCode == slash) {\n    return 63;\n  }\n\n  // Invalid base64 digit.\n  return -1;\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"background__3m4FA\"};","module.exports = require(\"preact\");","import supportsColor from 'supports-color'\nimport chalk from 'chalk'\n\nimport terminalHighlight from './terminal-highlight'\n\n/**\n * The CSS parser throws this error for broken CSS.\n *\n * Custom parsers can throw this error for broken custom syntax using\n * the {@link Node#error} method.\n *\n * PostCSS will use the input source map to detect the original error location.\n * If you wrote a Sass file, compiled it to CSS and then parsed it with PostCSS,\n * PostCSS will show the original position in the Sass file.\n *\n * If you need the position in the PostCSS input\n * (e.g., to debug the previous compiler), use `error.input.file`.\n *\n * @example\n * // Catching and checking syntax error\n * try {\n *   postcss.parse('a{')\n * } catch (error) {\n *   if (error.name === 'CssSyntaxError') {\n *     error //=> CssSyntaxError\n *   }\n * }\n *\n * @example\n * // Raising error from plugin\n * throw node.error('Unknown variable', { plugin: 'postcss-vars' })\n */\nclass CssSyntaxError extends Error {\n  /**\n   * @param {string} message  Error message.\n   * @param {number} [line]   Source line of the error.\n   * @param {number} [column] Source column of the error.\n   * @param {string} [source] Source code of the broken file.\n   * @param {string} [file]   Absolute path to the broken file.\n   * @param {string} [plugin] PostCSS plugin name, if error came from plugin.\n   */\n  constructor (message, line, column, source, file, plugin) {\n    super(message)\n\n    /**\n     * Always equal to `'CssSyntaxError'`. You should always check error type\n     * by `error.name === 'CssSyntaxError'`\n     * instead of `error instanceof CssSyntaxError`,\n     * because npm could have several PostCSS versions.\n     *\n     * @type {string}\n     *\n     * @example\n     * if (error.name === 'CssSyntaxError') {\n     *   error //=> CssSyntaxError\n     * }\n     */\n    this.name = 'CssSyntaxError'\n    /**\n     * Error message.\n     *\n     * @type {string}\n     *\n     * @example\n     * error.message //=> 'Unclosed block'\n     */\n    this.reason = message\n\n    if (file) {\n      /**\n       * Absolute path to the broken file.\n       *\n       * @type {string}\n       *\n       * @example\n       * error.file       //=> 'a.sass'\n       * error.input.file //=> 'a.css'\n       */\n      this.file = file\n    }\n    if (source) {\n      /**\n       * Source code of the broken file.\n       *\n       * @type {string}\n       *\n       * @example\n       * error.source       //=> 'a { b {} }'\n       * error.input.column //=> 'a b { }'\n       */\n      this.source = source\n    }\n    if (plugin) {\n      /**\n       * Plugin name, if error came from plugin.\n       *\n       * @type {string}\n       *\n       * @example\n       * error.plugin //=> 'postcss-vars'\n       */\n      this.plugin = plugin\n    }\n    if (typeof line !== 'undefined' && typeof column !== 'undefined') {\n      /**\n       * Source line of the error.\n       *\n       * @type {number}\n       *\n       * @example\n       * error.line       //=> 2\n       * error.input.line //=> 4\n       */\n      this.line = line\n      /**\n       * Source column of the error.\n       *\n       * @type {number}\n       *\n       * @example\n       * error.column       //=> 1\n       * error.input.column //=> 4\n       */\n      this.column = column\n    }\n\n    this.setMessage()\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, CssSyntaxError)\n    }\n  }\n\n  setMessage () {\n    /**\n     * Full error text in the GNU error format\n     * with plugin, file, line and column.\n     *\n     * @type {string}\n     *\n     * @example\n     * error.message //=> 'a.css:1:1: Unclosed block'\n     */\n    this.message = this.plugin ? this.plugin + ': ' : ''\n    this.message += this.file ? this.file : '<css input>'\n    if (typeof this.line !== 'undefined') {\n      this.message += ':' + this.line + ':' + this.column\n    }\n    this.message += ': ' + this.reason\n  }\n\n  /**\n   * Returns a few lines of CSS source that caused the error.\n   *\n   * If the CSS has an input source map without `sourceContent`,\n   * this method will return an empty string.\n   *\n   * @param {boolean} [color] Whether arrow will be colored red by terminal\n   *                          color codes. By default, PostCSS will detect\n   *                          color support by `process.stdout.isTTY`\n   *                          and `process.env.NODE_DISABLE_COLORS`.\n   *\n   * @example\n   * error.showSourceCode() //=> \"  4 | }\n   *                        //      5 | a {\n   *                        //    > 6 |   bad\n   *                        //        |   ^\n   *                        //      7 | }\n   *                        //      8 | b {\"\n   *\n   * @return {string} Few lines of CSS source that caused the error.\n   */\n  showSourceCode (color) {\n    if (!this.source) return ''\n\n    let css = this.source\n    if (terminalHighlight) {\n      if (typeof color === 'undefined') color = supportsColor.stdout\n      if (color) css = terminalHighlight(css)\n    }\n\n    let lines = css.split(/\\r?\\n/)\n    let start = Math.max(this.line - 3, 0)\n    let end = Math.min(this.line + 2, lines.length)\n\n    let maxWidth = String(end).length\n\n    function mark (text) {\n      if (color && chalk.red) {\n        return chalk.red.bold(text)\n      }\n      return text\n    }\n    function aside (text) {\n      if (color && chalk.gray) {\n        return chalk.gray(text)\n      }\n      return text\n    }\n\n    return lines.slice(start, end).map((line, index) => {\n      let number = start + 1 + index\n      let gutter = ' ' + (' ' + number).slice(-maxWidth) + ' | '\n      if (number === this.line) {\n        let spacing = aside(gutter.replace(/\\d/g, ' ')) +\n          line.slice(0, this.column - 1).replace(/[^\\t]/g, ' ')\n        return mark('>') + aside(gutter) + line + '\\n ' + spacing + mark('^')\n      }\n      return ' ' + aside(gutter) + line\n    }).join('\\n')\n  }\n\n  /**\n   * Returns error position, message and source code of the broken part.\n   *\n   * @example\n   * error.toString() //=> \"CssSyntaxError: app.css:1:1: Unclosed block\n   *                  //    > 1 | a {\n   *                  //        | ^\"\n   *\n   * @return {string} Error position, message and source code.\n   */\n  toString () {\n    let code = this.showSourceCode()\n    if (code) {\n      code = '\\n\\n' + code + '\\n'\n    }\n    return this.name + ': ' + this.message + code\n  }\n\n  /**\n   * @memberof CssSyntaxError#\n   * @member {Input} input Input object with PostCSS internal information\n   *                       about input file. If input has source map\n   *                       from previous tool, PostCSS will use origin\n   *                       (for example, Sass) source. You can use this\n   *                       object to get PostCSS input source.\n   *\n   * @example\n   * error.input.file //=> 'a.css'\n   * error.file       //=> 'a.sass'\n   */\n}\n\nexport default CssSyntaxError\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * This is a helper function for getting values from parameter/options\n * objects.\n *\n * @param args The object we are extracting values from\n * @param name The name of the property we are getting.\n * @param defaultValue An optional value to return if the property is missing\n * from the object. If this is not specified and the property is missing, an\n * error will be thrown.\n */\nfunction getArg(aArgs, aName, aDefaultValue) {\n  if (aName in aArgs) {\n    return aArgs[aName];\n  } else if (arguments.length === 3) {\n    return aDefaultValue;\n  } else {\n    throw new Error('\"' + aName + '\" is a required argument.');\n  }\n}\nexports.getArg = getArg;\n\nvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)(?::(\\d+))?(.*)$/;\nvar dataUrlRegexp = /^data:.+\\,.+$/;\n\nfunction urlParse(aUrl) {\n  var match = aUrl.match(urlRegexp);\n  if (!match) {\n    return null;\n  }\n  return {\n    scheme: match[1],\n    auth: match[2],\n    host: match[3],\n    port: match[4],\n    path: match[5]\n  };\n}\nexports.urlParse = urlParse;\n\nfunction urlGenerate(aParsedUrl) {\n  var url = '';\n  if (aParsedUrl.scheme) {\n    url += aParsedUrl.scheme + ':';\n  }\n  url += '//';\n  if (aParsedUrl.auth) {\n    url += aParsedUrl.auth + '@';\n  }\n  if (aParsedUrl.host) {\n    url += aParsedUrl.host;\n  }\n  if (aParsedUrl.port) {\n    url += \":\" + aParsedUrl.port\n  }\n  if (aParsedUrl.path) {\n    url += aParsedUrl.path;\n  }\n  return url;\n}\nexports.urlGenerate = urlGenerate;\n\n/**\n * Normalizes a path, or the path portion of a URL:\n *\n * - Replaces consecutive slashes with one slash.\n * - Removes unnecessary '.' parts.\n * - Removes unnecessary '<dir>/..' parts.\n *\n * Based on code in the Node.js 'path' core module.\n *\n * @param aPath The path or url to normalize.\n */\nfunction normalize(aPath) {\n  var path = aPath;\n  var url = urlParse(aPath);\n  if (url) {\n    if (!url.path) {\n      return aPath;\n    }\n    path = url.path;\n  }\n  var isAbsolute = exports.isAbsolute(path);\n\n  var parts = path.split(/\\/+/);\n  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n    part = parts[i];\n    if (part === '.') {\n      parts.splice(i, 1);\n    } else if (part === '..') {\n      up++;\n    } else if (up > 0) {\n      if (part === '') {\n        // The first part is blank if the path is absolute. Trying to go\n        // above the root is a no-op. Therefore we can remove all '..' parts\n        // directly after the root.\n        parts.splice(i + 1, up);\n        up = 0;\n      } else {\n        parts.splice(i, 2);\n        up--;\n      }\n    }\n  }\n  path = parts.join('/');\n\n  if (path === '') {\n    path = isAbsolute ? '/' : '.';\n  }\n\n  if (url) {\n    url.path = path;\n    return urlGenerate(url);\n  }\n  return path;\n}\nexports.normalize = normalize;\n\n/**\n * Joins two paths/URLs.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be joined with the root.\n *\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n *   first.\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n *   is updated with the result and aRoot is returned. Otherwise the result\n *   is returned.\n *   - If aPath is absolute, the result is aPath.\n *   - Otherwise the two paths are joined with a slash.\n * - Joining for example 'http://' and 'www.example.com' is also supported.\n */\nfunction join(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n  if (aPath === \"\") {\n    aPath = \".\";\n  }\n  var aPathUrl = urlParse(aPath);\n  var aRootUrl = urlParse(aRoot);\n  if (aRootUrl) {\n    aRoot = aRootUrl.path || '/';\n  }\n\n  // `join(foo, '//www.example.org')`\n  if (aPathUrl && !aPathUrl.scheme) {\n    if (aRootUrl) {\n      aPathUrl.scheme = aRootUrl.scheme;\n    }\n    return urlGenerate(aPathUrl);\n  }\n\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n    return aPath;\n  }\n\n  // `join('http://', 'www.example.com')`\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n    aRootUrl.host = aPath;\n    return urlGenerate(aRootUrl);\n  }\n\n  var joined = aPath.charAt(0) === '/'\n    ? aPath\n    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n  if (aRootUrl) {\n    aRootUrl.path = joined;\n    return urlGenerate(aRootUrl);\n  }\n  return joined;\n}\nexports.join = join;\n\nexports.isAbsolute = function (aPath) {\n  return aPath.charAt(0) === '/' || urlRegexp.test(aPath);\n};\n\n/**\n * Make a path relative to a URL or another path.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be made relative to aRoot.\n */\nfunction relative(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n\n  aRoot = aRoot.replace(/\\/$/, '');\n\n  // It is possible for the path to be above the root. In this case, simply\n  // checking whether the root is a prefix of the path won't work. Instead, we\n  // need to remove components from the root one by one, until either we find\n  // a prefix that fits, or we run out of components to remove.\n  var level = 0;\n  while (aPath.indexOf(aRoot + '/') !== 0) {\n    var index = aRoot.lastIndexOf(\"/\");\n    if (index < 0) {\n      return aPath;\n    }\n\n    // If the only part of the root that is left is the scheme (i.e. http://,\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n    // have exhausted all components, so the path is not relative to the root.\n    aRoot = aRoot.slice(0, index);\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n      return aPath;\n    }\n\n    ++level;\n  }\n\n  // Make sure we add a \"../\" for each component we removed from the root.\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n}\nexports.relative = relative;\n\nvar supportsNullProto = (function () {\n  var obj = Object.create(null);\n  return !('__proto__' in obj);\n}());\n\nfunction identity (s) {\n  return s;\n}\n\n/**\n * Because behavior goes wacky when you set `__proto__` on objects, we\n * have to prefix all the strings in our set with an arbitrary character.\n *\n * See https://github.com/mozilla/source-map/pull/31 and\n * https://github.com/mozilla/source-map/issues/30\n *\n * @param String aStr\n */\nfunction toSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return '$' + aStr;\n  }\n\n  return aStr;\n}\nexports.toSetString = supportsNullProto ? identity : toSetString;\n\nfunction fromSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return aStr.slice(1);\n  }\n\n  return aStr;\n}\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\n\nfunction isProtoString(s) {\n  if (!s) {\n    return false;\n  }\n\n  var length = s.length;\n\n  if (length < 9 /* \"__proto__\".length */) {\n    return false;\n  }\n\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n    return false;\n  }\n\n  for (var i = length - 10; i >= 0; i--) {\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Comparator between two mappings where the original positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same original source/line/column, but different generated\n * line and column the same. Useful when searching for a mapping with a\n * stubbed out mapping.\n */\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByOriginalPositions = compareByOriginalPositions;\n\n/**\n * Comparator between two mappings with deflated source and name indices where\n * the generated positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same generated line and column, but different\n * source/name/original line and column the same. Useful when searching for a\n * mapping with a stubbed out mapping.\n */\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\nfunction strcmp(aStr1, aStr2) {\n  if (aStr1 === aStr2) {\n    return 0;\n  }\n\n  if (aStr1 === null) {\n    return 1; // aStr2 !== null\n  }\n\n  if (aStr2 === null) {\n    return -1; // aStr1 !== null\n  }\n\n  if (aStr1 > aStr2) {\n    return 1;\n  }\n\n  return -1;\n}\n\n/**\n * Comparator between two mappings with inflated source and name strings where\n * the generated positions are compared.\n */\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n\n/**\n * Strip any JSON XSSI avoidance prefix from the string (as documented\n * in the source maps specification), and then parse the string as\n * JSON.\n */\nfunction parseSourceMapInput(str) {\n  return JSON.parse(str.replace(/^\\)]}'[^\\n]*\\n/, ''));\n}\nexports.parseSourceMapInput = parseSourceMapInput;\n\n/**\n * Compute the URL of a source given the the source root, the source's\n * URL, and the source map's URL.\n */\nfunction computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {\n  sourceURL = sourceURL || '';\n\n  if (sourceRoot) {\n    // This follows what Chrome does.\n    if (sourceRoot[sourceRoot.length - 1] !== '/' && sourceURL[0] !== '/') {\n      sourceRoot += '/';\n    }\n    // The spec says:\n    //   Line 4: An optional source root, useful for relocating source\n    //   files on a server or removing repeated values in the\n    //   “sources” entry.  This value is prepended to the individual\n    //   entries in the “source” field.\n    sourceURL = sourceRoot + sourceURL;\n  }\n\n  // Historically, SourceMapConsumer did not take the sourceMapURL as\n  // a parameter.  This mode is still somewhat supported, which is why\n  // this code block is conditional.  However, it's preferable to pass\n  // the source map URL to SourceMapConsumer, so that this function\n  // can implement the source URL resolution algorithm as outlined in\n  // the spec.  This block is basically the equivalent of:\n  //    new URL(sourceURL, sourceMapURL).toString()\n  // ... except it avoids using URL, which wasn't available in the\n  // older releases of node still supported by this library.\n  //\n  // The spec says:\n  //   If the sources are not absolute URLs after prepending of the\n  //   “sourceRoot”, the sources are resolved relative to the\n  //   SourceMap (like resolving script src in a html document).\n  if (sourceMapURL) {\n    var parsed = urlParse(sourceMapURL);\n    if (!parsed) {\n      throw new Error(\"sourceMapURL could not be parsed\");\n    }\n    if (parsed.path) {\n      // Strip the last path component, but keep the \"/\".\n      var index = parsed.path.lastIndexOf('/');\n      if (index >= 0) {\n        parsed.path = parsed.path.substring(0, index + 1);\n      }\n    }\n    sourceURL = join(urlGenerate(parsed), sourceURL);\n  }\n\n  return normalize(sourceURL);\n}\nexports.computeSourceURL = computeSourceURL;\n","import mozilla from 'source-map'\nimport path from 'path'\nimport fs from 'fs'\n\nfunction fromBase64 (str) {\n  if (Buffer) {\n    return Buffer.from(str, 'base64').toString()\n  } else {\n    return window.atob(str)\n  }\n}\n\n/**\n * Source map information from input CSS.\n * For example, source map after Sass compiler.\n *\n * This class will automatically find source map in input CSS or in file system\n * near input file (according `from` option).\n *\n * @example\n * const root = postcss.parse(css, { from: 'a.sass.css' })\n * root.input.map //=> PreviousMap\n */\nclass PreviousMap {\n  /**\n   * @param {string}         css    Input CSS source.\n   * @param {processOptions} [opts] {@link Processor#process} options.\n   */\n  constructor (css, opts) {\n    this.loadAnnotation(css)\n    /**\n     * Was source map inlined by data-uri to input CSS.\n     *\n     * @type {boolean}\n     */\n    this.inline = this.startWith(this.annotation, 'data:')\n\n    let prev = opts.map ? opts.map.prev : undefined\n    let text = this.loadMap(opts.from, prev)\n    if (text) this.text = text\n  }\n\n  /**\n   * Create a instance of `SourceMapGenerator` class\n   * from the `source-map` library to work with source map information.\n   *\n   * It is lazy method, so it will create object only on first call\n   * and then it will use cache.\n   *\n   * @return {SourceMapGenerator} Object with source map information.\n   */\n  consumer () {\n    if (!this.consumerCache) {\n      this.consumerCache = new mozilla.SourceMapConsumer(this.text)\n    }\n    return this.consumerCache\n  }\n\n  /**\n   * Does source map contains `sourcesContent` with input source text.\n   *\n   * @return {boolean} Is `sourcesContent` present.\n   */\n  withContent () {\n    return !!(this.consumer().sourcesContent &&\n              this.consumer().sourcesContent.length > 0)\n  }\n\n  startWith (string, start) {\n    if (!string) return false\n    return string.substr(0, start.length) === start\n  }\n\n  getAnnotationURL (sourceMapString) {\n    return sourceMapString\n      .match(/\\/\\*\\s*# sourceMappingURL=(.*)\\s*\\*\\//)[1]\n      .trim()\n  }\n\n  loadAnnotation (css) {\n    let annotations = css.match(/\\/\\*\\s*# sourceMappingURL=(.*)\\s*\\*\\//mg)\n\n    if (annotations && annotations.length > 0) {\n      // Locate the last sourceMappingURL to avoid picking up\n      // sourceMappingURLs from comments, strings, etc.\n      let lastAnnotation = annotations[annotations.length - 1]\n      if (lastAnnotation) {\n        this.annotation = this.getAnnotationURL(lastAnnotation)\n      }\n    }\n  }\n\n  decodeInline (text) {\n    let baseCharsetUri = /^data:application\\/json;charset=utf-?8;base64,/\n    let baseUri = /^data:application\\/json;base64,/\n    let uri = 'data:application/json,'\n\n    if (this.startWith(text, uri)) {\n      return decodeURIComponent(text.substr(uri.length))\n    }\n\n    if (baseCharsetUri.test(text) || baseUri.test(text)) {\n      return fromBase64(text.substr(RegExp.lastMatch.length))\n    }\n\n    let encoding = text.match(/data:application\\/json;([^,]+),/)[1]\n    throw new Error('Unsupported source map encoding ' + encoding)\n  }\n\n  loadMap (file, prev) {\n    if (prev === false) return false\n\n    if (prev) {\n      if (typeof prev === 'string') {\n        return prev\n      } else if (typeof prev === 'function') {\n        let prevPath = prev(file)\n        if (prevPath && fs.existsSync && fs.existsSync(prevPath)) {\n          return fs.readFileSync(prevPath, 'utf-8').toString().trim()\n        } else {\n          throw new Error(\n            'Unable to load previous source map: ' + prevPath.toString())\n        }\n      } else if (prev instanceof mozilla.SourceMapConsumer) {\n        return mozilla.SourceMapGenerator.fromSourceMap(prev).toString()\n      } else if (prev instanceof mozilla.SourceMapGenerator) {\n        return prev.toString()\n      } else if (this.isMap(prev)) {\n        return JSON.stringify(prev)\n      } else {\n        throw new Error(\n          'Unsupported previous source map format: ' + prev.toString())\n      }\n    } else if (this.inline) {\n      return this.decodeInline(this.annotation)\n    } else if (this.annotation) {\n      let map = this.annotation\n      if (file) map = path.join(path.dirname(file), map)\n\n      this.root = path.dirname(map)\n      if (fs.existsSync && fs.existsSync(map)) {\n        return fs.readFileSync(map, 'utf-8').toString().trim()\n      } else {\n        return false\n      }\n    }\n  }\n\n  isMap (map) {\n    if (typeof map !== 'object') return false\n    return typeof map.mappings === 'string' || typeof map._mappings === 'string'\n  }\n}\n\nexport default PreviousMap\n","'use strict';\n\nvar matchOperatorsRe = /[|\\\\{}()[\\]^$+*?.]/g;\n\nmodule.exports = function (str) {\n\tif (typeof str !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\treturn str.replace(matchOperatorsRe, '\\\\$&');\n};\n","let printed = { }\n\nexport default function warnOnce (message) {\n  if (printed[message]) return\n  printed[message] = true\n\n  if (typeof console !== 'undefined' && console.warn) {\n    console.warn(message)\n  }\n}\n","import { Component } from 'preact';\nimport { PrerenderDataContext } from './context';\nimport { getPrerenderdata, checkProps, normalizeUrl } from './utils';\nimport { PRERENDER_DATA_FILE_NAME } from './constants';\n\nconst { Consumer } = PrerenderDataContext;\n\nclass PreRenderDataSource extends Component {\n\tstate = {\n\t\tvalue: null,\n\t\tisLoading: false,\n\t\terror: false,\n\t};\n\tcomponentDidMount() {\n\t\tcheckProps(this.props);\n\t}\n\n\tfetchPrerenderData = async () => {\n\t\tthis.setState({\n\t\t\tvalue: null,\n\t\t\tisLoading: true,\n\t\t\terror: false,\n\t\t});\n\t\ttry {\n\t\t\tconst response = await fetch(\n\t\t\t\t`${normalizeUrl(this.props.url)}${PRERENDER_DATA_FILE_NAME}`\n\t\t\t);\n\t\t\tconst json = await response.json();\n\t\t\tthis.setState({\n\t\t\t\tvalue: json,\n\t\t\t\tisLoading: false,\n\t\t\t\terror: false,\n\t\t\t});\n\t\t} catch (e) {\n\t\t\tthis.setState({\n\t\t\t\tvalue: null,\n\t\t\t\tisLoading: false,\n\t\t\t\terror: e,\n\t\t\t});\n\t\t}\n\t};\n\n\trender(props, { value, isLoading, error }) {\n\t\tif (!('doAutomaticFetch' in props)) {\n\t\t\tprops.doAutomaticFetch = true;\n\t\t}\n\t\treturn (\n\t\t\t<Consumer>\n\t\t\t\t{contextValue => {\n\t\t\t\t\tlet obtainedContextValue;\n\t\t\t\t\t// If the data is in script tag, it will be accesible from the following chaining\n\t\t\t\t\tif (contextValue.CLI_DATA && contextValue.CLI_DATA.preRenderData) {\n\t\t\t\t\t\tobtainedContextValue = contextValue.CLI_DATA.preRenderData;\n\t\t\t\t\t}\n\t\t\t\t\tconst preRenderDataToBePassed = getPrerenderdata(\n\t\t\t\t\t\tvalue || obtainedContextValue,\n\t\t\t\t\t\tprops\n\t\t\t\t\t);\n\t\t\t\t\t// if the data is not in script tag, we'll fetch it from the server\n\t\t\t\t\tif (\n\t\t\t\t\t\tprops.doAutomaticFetch &&\n\t\t\t\t\t\tpreRenderDataToBePassed === null &&\n\t\t\t\t\t\t!isLoading &&\n\t\t\t\t\t\t!error\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.fetchPrerenderData();\n\t\t\t\t\t}\n\n\t\t\t\t\treturn props.render({\n\t\t\t\t\t\tvalue: preRenderDataToBePassed,\n\t\t\t\t\t\tisLoading,\n\t\t\t\t\t\terror,\n\t\t\t\t\t});\n\t\t\t\t}}\n\t\t\t</Consumer>\n\t\t);\n\t}\n}\n\nexport { PreRenderDataSource };\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nexports.GREATEST_LOWER_BOUND = 1;\nexports.LEAST_UPPER_BOUND = 2;\n\n/**\n * Recursive implementation of binary search.\n *\n * @param aLow Indices here and lower do not contain the needle.\n * @param aHigh Indices here and higher do not contain the needle.\n * @param aNeedle The element being searched for.\n * @param aHaystack The non-empty array being searched.\n * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n */\nfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\n  // This function terminates when one of the following is true:\n  //\n  //   1. We find the exact element we are looking for.\n  //\n  //   2. We did not find the exact element, but we can return the index of\n  //      the next-closest element.\n  //\n  //   3. We did not find the exact element, and there is no next-closest\n  //      element than the one we are searching for, so we return -1.\n  var mid = Math.floor((aHigh - aLow) / 2) + aLow;\n  var cmp = aCompare(aNeedle, aHaystack[mid], true);\n  if (cmp === 0) {\n    // Found the element we are looking for.\n    return mid;\n  }\n  else if (cmp > 0) {\n    // Our needle is greater than aHaystack[mid].\n    if (aHigh - mid > 1) {\n      // The element is in the upper half.\n      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // The exact needle element was not found in this haystack. Determine if\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return aHigh < aHaystack.length ? aHigh : -1;\n    } else {\n      return mid;\n    }\n  }\n  else {\n    // Our needle is less than aHaystack[mid].\n    if (mid - aLow > 1) {\n      // The element is in the lower half.\n      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return mid;\n    } else {\n      return aLow < 0 ? -1 : aLow;\n    }\n  }\n}\n\n/**\n * This is an implementation of binary search which will always try and return\n * the index of the closest element if there is no exact hit. This is because\n * mappings between original and generated line/col pairs are single points,\n * and there is an implicit region between each of them, so a miss just means\n * that you aren't on the very start of a region.\n *\n * @param aNeedle The element you are looking for.\n * @param aHaystack The array that is being searched.\n * @param aCompare A function which takes the needle and an element in the\n *     array and returns -1, 0, or 1 depending on whether the needle is less\n *     than, equal to, or greater than the element, respectively.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\n */\nexports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\n  if (aHaystack.length === 0) {\n    return -1;\n  }\n\n  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\n                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\n  if (index < 0) {\n    return -1;\n  }\n\n  // We have found either the exact element, or the next-closest element than\n  // the one we are searching for. However, there may be more than one such\n  // element. Make sure we always return the smallest of these.\n  while (index - 1 >= 0) {\n    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\n      break;\n    }\n    --index;\n  }\n\n  return index;\n};\n","import LazyResult from './lazy-result'\n\n/**\n * Contains plugins to process CSS. Create one `Processor` instance,\n * initialize its plugins, and then use that instance on numerous CSS files.\n *\n * @example\n * const processor = postcss([autoprefixer, precss])\n * processor.process(css1).then(result => console.log(result.css))\n * processor.process(css2).then(result => console.log(result.css))\n */\nclass Processor {\n  /**\n   * @param {Array.<Plugin|pluginFunction>|Processor} plugins PostCSS plugins.\n   *        See {@link Processor#use} for plugin format.\n   */\n  constructor (plugins = []) {\n    /**\n     * Current PostCSS version.\n     *\n     * @type {string}\n     *\n     * @example\n     * if (result.processor.version.split('.')[0] !== '6') {\n     *   throw new Error('This plugin works only with PostCSS 6')\n     * }\n     */\n    this.version = '7.0.35'\n    /**\n     * Plugins added to this processor.\n     *\n     * @type {pluginFunction[]}\n     *\n     * @example\n     * const processor = postcss([autoprefixer, precss])\n     * processor.plugins.length //=> 2\n     */\n    this.plugins = this.normalize(plugins)\n  }\n\n  /**\n   * Adds a plugin to be used as a CSS processor.\n   *\n   * PostCSS plugin can be in 4 formats:\n   * * A plugin created by {@link postcss.plugin} method.\n   * * A function. PostCSS will pass the function a @{link Root}\n   *   as the first argument and current {@link Result} instance\n   *   as the second.\n   * * An object with a `postcss` method. PostCSS will use that method\n   *   as described in #2.\n   * * Another {@link Processor} instance. PostCSS will copy plugins\n   *   from that instance into this one.\n   *\n   * Plugins can also be added by passing them as arguments when creating\n   * a `postcss` instance (see [`postcss(plugins)`]).\n   *\n   * Asynchronous plugins should return a `Promise` instance.\n   *\n   * @param {Plugin|pluginFunction|Processor} plugin PostCSS plugin\n   *                                                 or {@link Processor}\n   *                                                 with plugins.\n   *\n   * @example\n   * const processor = postcss()\n   *   .use(autoprefixer)\n   *   .use(precss)\n   *\n   * @return {Processes} Current processor to make methods chain.\n   */\n  use (plugin) {\n    this.plugins = this.plugins.concat(this.normalize([plugin]))\n    return this\n  }\n\n  /**\n   * Parses source CSS and returns a {@link LazyResult} Promise proxy.\n   * Because some plugins can be asynchronous it doesn’t make\n   * any transformations. Transformations will be applied\n   * in the {@link LazyResult} methods.\n   *\n   * @param {string|toString|Result} css String with input CSS or any object\n   *                                     with a `toString()` method,\n   *                                     like a Buffer. Optionally, send\n   *                                     a {@link Result} instance\n   *                                     and the processor will take\n   *                                     the {@link Root} from it.\n   * @param {processOptions} [opts]      Options.\n   *\n   * @return {LazyResult} Promise proxy.\n   *\n   * @example\n   * processor.process(css, { from: 'a.css', to: 'a.out.css' })\n   *   .then(result => {\n   *      console.log(result.css)\n   *   })\n   */\n  process (css, opts = { }) {\n    if (this.plugins.length === 0 && opts.parser === opts.stringifier) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (typeof console !== 'undefined' && console.warn) {\n          console.warn(\n            'You did not set any plugins, parser, or stringifier. ' +\n            'Right now, PostCSS does nothing. Pick plugins for your case ' +\n            'on https://www.postcss.parts/ and use them in postcss.config.js.'\n          )\n        }\n      }\n    }\n    return new LazyResult(this, css, opts)\n  }\n\n  normalize (plugins) {\n    let normalized = []\n    for (let i of plugins) {\n      if (i.postcss === true) {\n        let plugin = i()\n        throw new Error(\n          'PostCSS plugin ' + plugin.postcssPlugin + ' requires PostCSS 8.\\n' +\n          'Migration guide for end-users:\\n' +\n          'https://github.com/postcss/postcss/wiki/PostCSS-8-for-end-users'\n        )\n      }\n\n      if (i.postcss) i = i.postcss\n\n      if (typeof i === 'object' && Array.isArray(i.plugins)) {\n        normalized = normalized.concat(i.plugins)\n      } else if (typeof i === 'function') {\n        normalized.push(i)\n      } else if (typeof i === 'object' && (i.parse || i.stringify)) {\n        if (process.env.NODE_ENV !== 'production') {\n          throw new Error(\n            'PostCSS syntaxes cannot be used as plugins. Instead, please use ' +\n            'one of the syntax/parser/stringifier options as outlined ' +\n            'in your PostCSS runner documentation.'\n          )\n        }\n      } else if (typeof i === 'object' && i.postcssPlugin) {\n        throw new Error(\n          'PostCSS plugin ' + i.postcssPlugin + ' requires PostCSS 8.\\n' +\n          'Migration guide for end-users:\\n' +\n          'https://github.com/postcss/postcss/wiki/PostCSS-8-for-end-users'\n        )\n      } else {\n        throw new Error(i + ' is not a PostCSS plugin')\n      }\n    }\n    return normalized\n  }\n}\n\nexport default Processor\n\n/**\n * @callback builder\n * @param {string} part          Part of generated CSS connected to this node.\n * @param {Node}   node          AST node.\n * @param {\"start\"|\"end\"} [type] Node’s part type.\n */\n\n/**\n * @callback parser\n *\n * @param {string|toString} css   String with input CSS or any object\n *                                with toString() method, like a Buffer.\n * @param {processOptions} [opts] Options with only `from` and `map` keys.\n *\n * @return {Root} PostCSS AST\n */\n\n/**\n * @callback stringifier\n *\n * @param {Node} node       Start node for stringifing. Usually {@link Root}.\n * @param {builder} builder Function to concatenate CSS from node’s parts\n *                          or generate string and source map.\n *\n * @return {void}\n */\n\n/**\n * @typedef {object} syntax\n * @property {parser} parse          Function to generate AST by string.\n * @property {stringifier} stringify Function to generate string by AST.\n */\n\n/**\n * @typedef {object} toString\n * @property {function} toString\n */\n\n/**\n * @callback pluginFunction\n * @param {Root} root     Parsed input CSS.\n * @param {Result} result Result to set warnings or check other plugins.\n */\n\n/**\n * @typedef {object} Plugin\n * @property {function} postcss PostCSS plugin function.\n */\n\n/**\n * @typedef {object} processOptions\n * @property {string} from             The path of the CSS source file.\n *                                     You should always set `from`,\n *                                     because it is used in source map\n *                                     generation and syntax error messages.\n * @property {string} to               The path where you’ll put the output\n *                                     CSS file. You should always set `to`\n *                                     to generate correct source maps.\n * @property {parser} parser           Function to generate AST by string.\n * @property {stringifier} stringifier Class to generate string by AST.\n * @property {syntax} syntax           Object with `parse` and `stringify`.\n * @property {object} map              Source map options.\n * @property {boolean} map.inline                    Does source map should\n *                                                   be embedded in the output\n *                                                   CSS as a base64-encoded\n *                                                   comment.\n * @property {string|object|false|function} map.prev Source map content\n *                                                   from a previous\n *                                                   processing step\n *                                                   (for example, Sass).\n *                                                   PostCSS will try to find\n *                                                   previous map automatically,\n *                                                   so you could disable it by\n *                                                   `false` value.\n * @property {boolean} map.sourcesContent            Does PostCSS should set\n *                                                   the origin content to map.\n * @property {string|false} map.annotation           Does PostCSS should set\n *                                                   annotation comment to map.\n * @property {string} map.from                       Override `from` in map’s\n *                                                   sources`.\n */\n","import { cloneElement, createElement, Component, toChildArray } from 'preact';\nimport { exec, prepareVNodeForRanking, assign, pathRankSort } from './util';\n\nlet customHistory = null;\n\nconst ROUTERS = [];\n\nconst subscribers = [];\n\nconst EMPTY = {};\n\nfunction setUrl(url, type='push') {\n\tif (customHistory && customHistory[type]) {\n\t\tcustomHistory[type](url);\n\t}\n\telse if (typeof history!=='undefined' && history[type+'State']) {\n\t\thistory[type+'State'](null, null, url);\n\t}\n}\n\n\nfunction getCurrentUrl() {\n\tlet url;\n\tif (customHistory && customHistory.location) {\n\t\turl = customHistory.location;\n\t}\n\telse if (customHistory && customHistory.getCurrentLocation) {\n\t\turl = customHistory.getCurrentLocation();\n\t}\n\telse {\n\t\turl = typeof location!=='undefined' ? location : EMPTY;\n\t}\n\treturn `${url.pathname || ''}${url.search || ''}`;\n}\n\n\n\nfunction route(url, replace=false) {\n\tif (typeof url!=='string' && url.url) {\n\t\treplace = url.replace;\n\t\turl = url.url;\n\t}\n\n\t// only push URL into history if we can handle it\n\tif (canRoute(url)) {\n\t\tsetUrl(url, replace ? 'replace' : 'push');\n\t}\n\n\treturn routeTo(url);\n}\n\n\n/** Check if the given URL can be handled by any router instances. */\nfunction canRoute(url) {\n\tfor (let i=ROUTERS.length; i--; ) {\n\t\tif (ROUTERS[i].canRoute(url)) return true;\n\t}\n\treturn false;\n}\n\n\n/** Tell all router instances to handle the given URL.  */\nfunction routeTo(url) {\n\tlet didRoute = false;\n\tfor (let i=0; i<ROUTERS.length; i++) {\n\t\tif (ROUTERS[i].routeTo(url)===true) {\n\t\t\tdidRoute = true;\n\t\t}\n\t}\n\tfor (let i=subscribers.length; i--; ) {\n\t\tsubscribers[i](url);\n\t}\n\treturn didRoute;\n}\n\n\nfunction routeFromLink(node) {\n\t// only valid elements\n\tif (!node || !node.getAttribute) return;\n\n\tlet href = node.getAttribute('href'),\n\t\ttarget = node.getAttribute('target');\n\n\t// ignore links with targets and non-path URLs\n\tif (!href || !href.match(/^\\//g) || (target && !target.match(/^_?self$/i))) return;\n\n\t// attempt to route, if no match simply cede control to browser\n\treturn route(href);\n}\n\n\nfunction handleLinkClick(e) {\n\tif (e.ctrlKey || e.metaKey || e.altKey || e.shiftKey || e.button!==0) return;\n\trouteFromLink(e.currentTarget || e.target || this);\n\treturn prevent(e);\n}\n\n\nfunction prevent(e) {\n\tif (e) {\n\t\tif (e.stopImmediatePropagation) e.stopImmediatePropagation();\n\t\tif (e.stopPropagation) e.stopPropagation();\n\t\te.preventDefault();\n\t}\n\treturn false;\n}\n\n\nfunction delegateLinkHandler(e) {\n\t// ignore events the browser takes care of already:\n\tif (e.ctrlKey || e.metaKey || e.altKey || e.shiftKey || e.button!==0) return;\n\n\tlet t = e.target;\n\tdo {\n\t\tif (String(t.nodeName).toUpperCase()==='A' && t.getAttribute('href')) {\n\t\t\tif (t.hasAttribute('native')) return;\n\t\t\t// if link is handled by the router, prevent browser defaults\n\t\t\tif (routeFromLink(t)) {\n\t\t\t\treturn prevent(e);\n\t\t\t}\n\t\t}\n\t} while ((t=t.parentNode));\n}\n\n\nlet eventListenersInitialized = false;\n\nfunction initEventListeners() {\n\tif (eventListenersInitialized) return;\n\n\tif (typeof addEventListener==='function') {\n\t\tif (!customHistory) {\n\t\t\taddEventListener('popstate', () => {\n\t\t\t\trouteTo(getCurrentUrl());\n\t\t\t});\n\t\t}\n\t\taddEventListener('click', delegateLinkHandler);\n\t}\n\teventListenersInitialized = true;\n}\n\n\nclass Router extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tif (props.history) {\n\t\t\tcustomHistory = props.history;\n\t\t}\n\n\t\tthis.state = {\n\t\t\turl: props.url || getCurrentUrl()\n\t\t};\n\n\t\tinitEventListeners();\n\t}\n\n\tshouldComponentUpdate(props) {\n\t\tif (props.static!==true) return true;\n\t\treturn props.url!==this.props.url || props.onChange!==this.props.onChange;\n\t}\n\n\t/** Check if the given URL can be matched against any children */\n\tcanRoute(url) {\n\t\tconst children = toChildArray(this.props.children);\n\t\treturn this.getMatchingChildren(children, url, false).length > 0;\n\t}\n\n\t/** Re-render children with a new URL to match against. */\n\trouteTo(url) {\n\t\tthis.setState({ url });\n\n\t\tconst didRoute = this.canRoute(url);\n\n\t\t// trigger a manual re-route if we're not in the middle of an update:\n\t\tif (!this.updating) this.forceUpdate();\n\n\t\treturn didRoute;\n\t}\n\n\tcomponentWillMount() {\n\t\tROUTERS.push(this);\n\t\tthis.updating = true;\n\t}\n\n\tcomponentDidMount() {\n\t\tif (customHistory) {\n\t\t\tthis.unlisten = customHistory.listen((location) => {\n\t\t\t\tthis.routeTo(`${location.pathname || ''}${location.search || ''}`);\n\t\t\t});\n\t\t}\n\t\tthis.updating = false;\n\t}\n\n\tcomponentWillUnmount() {\n\t\tif (typeof this.unlisten==='function') this.unlisten();\n\t\tROUTERS.splice(ROUTERS.indexOf(this), 1);\n\t}\n\n\tcomponentWillUpdate() {\n\t\tthis.updating = true;\n\t}\n\n\tcomponentDidUpdate() {\n\t\tthis.updating = false;\n\t}\n\n\tgetMatchingChildren(children, url, invoke) {\n\t\treturn children\n\t\t\t.filter(prepareVNodeForRanking)\n\t\t\t.sort(pathRankSort)\n\t\t\t.map( vnode => {\n\t\t\t\tlet matches = exec(url, vnode.props.path, vnode.props);\n\t\t\t\tif (matches) {\n\t\t\t\t\tif (invoke !== false) {\n\t\t\t\t\t\tlet newProps = { url, matches };\n\t\t\t\t\t\tassign(newProps, matches);\n\t\t\t\t\t\tdelete newProps.ref;\n\t\t\t\t\t\tdelete newProps.key;\n\t\t\t\t\t\treturn cloneElement(vnode, newProps);\n\t\t\t\t\t}\n\t\t\t\t\treturn vnode;\n\t\t\t\t}\n\t\t\t}).filter(Boolean);\n\t}\n\n\trender({ children, onChange }, { url }) {\n\t\tlet active = this.getMatchingChildren(toChildArray(children), url, true);\n\n\t\tlet current = active[0] || null;\n\n\t\tlet previous = this.previousUrl;\n\t\tif (url!==previous) {\n\t\t\tthis.previousUrl = url;\n\t\t\tif (typeof onChange==='function') {\n\t\t\t\tonChange({\n\t\t\t\t\trouter: this,\n\t\t\t\t\turl,\n\t\t\t\t\tprevious,\n\t\t\t\t\tactive,\n\t\t\t\t\tcurrent\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn current;\n\t}\n}\n\nconst Link = (props) => (\n\tcreateElement('a', assign({ onClick: handleLinkClick }, props))\n);\n\nconst Route = props => createElement(props.component, props);\n\nRouter.subscribers = subscribers;\nRouter.getCurrentUrl = getCurrentUrl;\nRouter.route = route;\nRouter.Router = Router;\nRouter.Route = Route;\nRouter.Link = Link;\nRouter.exec = exec;\n\nexport { subscribers, getCurrentUrl, route, Router, Route, Link, exec };\nexport default Router;\n","import { PrerenderDataContext } from './context';\n\nconst { Provider } = PrerenderDataContext;\n\nexport { Provider };\nexport { PreRenderDataSource } from './render-prop';\nexport { usePrerenderData } from './hook';\n","//=========================================================================================\n//                        ____              _  _____\n//                       / ___| _ __   ___ | ||_   _| __ ___  _   _ _ __\n//                       \\___ \\| '_ \\ / _ \\| __|| || '__/ _ \\| | | | '_ \\\n//                        ___) | |_) | (_) | |_ | || | | (_) | |_| | |_) |\n//                       |____/| .__/ \\___/ \\__||_||_|  \\___/ \\__,_| .__/\n//                             |_|                                 |_|\n// create with figlet \n//\n// Name: index.js \n// Comments: JS file for the  Banner\n// Author: Tjark Ziehm\n// Version: 0.01\n// Date: 25.Dez. 2020\n// CoWorkers:\n//=========================================================================================\n\n/*\n* TODO: \n\n*/\n\n//=========================================================================================\n// Structure \n//=========================================================================================\n\n/**\n* Index\n\n*/\n\n//=========================================================================================\nimport { comment } from 'postcss';\nimport { h } from 'preact';\nimport style from './style.css';\n\nconst Banner = () => (\n\t<div>\n\t\t<div\n\t\t\tclass=\"bg-gray-400 border border-gray-900 text-red-700 px-5 py-3 rounded-xl relative mx-2 my-2 opacity-80 shadow-xl\"\n\t\t\trole=\"alert\"\n\t\t>\n\t\t\t<strong class=\"font-bold\">132 Tonne Plastik aus dem Meer, Einsparungen CO2: 423kg, Zeitersparnis: 3231 Stunden</strong>\n\t\t\t\n\t\t</div>\n\n\n\t</div >\n);\n\nexport default Banner;\n","//=========================================================================================\n//                        ____              _  _____\n//                       / ___| _ __   ___ | ||_   _| __ ___  _   _ _ __\n//                       \\___ \\| '_ \\ / _ \\| __|| || '__/ _ \\| | | | '_ \\\n//                        ___) | |_) | (_) | |_ | || | | (_) | |_| | |_) |\n//                       |____/| .__/ \\___/ \\__||_||_|  \\___/ \\__,_| .__/\n//                             |_|                                 |_|\n// create with figlet \n//\n// Name: index.js for the Header in the App\n// Comments: JS file for AppFind\n// Author: Tjark Ziehm\n// Version: 0.01\n// Date: 25.Dez. 2020\n// CoWorkers:\n//=========================================================================================\n\n/*\n* TODO: \n\n*/\n\n//=========================================================================================\n// Structure \n//=========================================================================================\n\n/**\n* Index\n* @class S\n* @constructor \n* @extends \n* @functions\n* @useEffect to prevend window undefind errors\n* @return\n*/\n\n//=========================================================================================\n\n\nimport { h } from 'preact';\nimport { Link } from 'preact-router/match';\nimport Banner from '../banner/index.js';\n\n\nconst Header = () => (\n\n\t<header>\n\t\t<Banner />\n\t\t<nav class=\"flex items-center justify-between flex-wrap bg-gray-800 p-6 shadow-xl\">\n\t\t\t<div class=\"w-full overflow-hidden sm:my-1 sm:px-1 sm:w-1/2 md:my-px md:px-px md:w-1/2 lg:my-2 lg:px-2 lg:w-1/4 xl:my-2 xl:px-2 xl:w-1/4 pb-6\">\n\n\t\t\t\t<img style=\"max-width: 70%;height:auto;\" class=\"\" src=\"../../assets/icons/android-icon-96x96.png\" alt=\"Logo\" />\n\t\t\t</div>\n\n\t\t\t<div class=\"w-full block flex-grow sm:flex sm:items-center sm:w-auto text-gray-400 font-extrabold\">\n\t\t\t\t<div class=\"text-sm sm:flex-grow\">\n\t\t\t\t\t<a\n\t\t\t\t\t\thref=\"#\"\n\t\t\t\t\t\tclass=\"block mt-4 ml-4 sm:inline-block sm:mt-0 text-teal-200 hover:text-white mr-4\"\n\t\t\t\t\t>\n\t\t\t\t\t\tOcean\n          </a>\n\t\t\t\t\t<a\n\t\t\t\t\t\thref=\"#\"\n\t\t\t\t\t\tclass=\"block mt-4 sm:inline-block sm:mt-0 text-teal-200 hover:text-white mr-4\"\n\t\t\t\t\t>\n\t\t\t\t\t\tfishing\n          </a>\n\t\t\t\t\t<a\n\t\t\t\t\t\thref=\"#\"\n\t\t\t\t\t\tclass=\"block mt-4 sm:inline-block sm:mt-0 text-teal-200 hover:text-white mr-4\"\n\t\t\t\t\t>\n\t\t\t\t\t\tshop\n          </a>\n\t\t\t\t\t<a\n\t\t\t\t\t\thref=\"#\"\n\t\t\t\t\t\tclass=\"block mt-4 sm:inline-block sm:mt-0 text-teal-200 hover:text-white mr-4\"\n\t\t\t\t\t>\n\t\t\t\t\t\tproduction\n          </a>\n\t\t\t\t\t<a\n\t\t\t\t\t\thref=\"#\"\n\t\t\t\t\t\tclass=\"block mt-4 sm:inline-block sm:mt-0 text-teal-200 hover:text-white mr-4\"\n\t\t\t\t\t>\n\t\t\t\t\t\tparking\n          </a>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"container w-auto\">\n\t\t\t\t\t<div class=\"relative flex w-auto flex-wrap items-stretch mb-3\">\n\t\t\t\t\t\t<input type=\"email\" placeholder=\"email@spottroup.de\" class=\"px-1 py-1 placeholder-gray-400 text-gray-700 relative bg-white rounded text-sm shadow outline-none focus:outline-none focus:shadow-outline w-50 pr-10\" />\n\t\t\t\t\t\t<span class=\"z-10 h-full leading-snug font-normal absolute text-center text-gray-400 bg-transparent rounded text-base items-center justify-center w-8 right-0 pr-2 py-1\">\n\t\t\t\t\t\t\t<i class=\"fas fa-user\"></i>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"relative flex w-full flex-wrap items-stretch mb-3 mx-3\">\n\t\t\t\t\t\t<input type=\"password\" placeholder=\"**********\" class=\"px-1 py-1 placeholder-gray-400 text-gray-700 relative bg-white  rounded text-sm shadow outline-none focus:outline-none focus:shadow-outline w-50 pr-10\" />\n\t\t\t\t\t\t<span class=\"z-10 h-full leading-snug font-normal absolute text-center text-gray-400  bg-transparent rounded text-base items-center justify-center w-8 right-0 pr-2 py-1\">\n\t\t\t\t\t\t\t<i class=\"fas fa-user\"></i>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref=\"#\"\n\t\t\t\t\t\t\tclass=\"inline-block text-sm px-4 py-2 leading-none border rounded text-white border-white hover:border-transparent hover:text-blue-500 hover:bg-white mt-4 md:mt-0\"\n\t\t\t\t\t\t>Login</a\n\t\t\t\t\t\t>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t</nav>\n\t</header >\n);\n\nexport default Header;\n","//=========================================================================================\n//                        ____              _  _____\n//                       / ___| _ __   ___ | ||_   _| __ ___  _   _ _ __\n//                       \\___ \\| '_ \\ / _ \\| __|| || '__/ _ \\| | | | '_ \\\n//                        ___) | |_) | (_) | |_ | || | | (_) | |_| | |_) |\n//                       |____/| .__/ \\___/ \\__||_||_|  \\___/ \\__,_| .__/\n//                             |_|                                 |_|\n// create with figlet \n//\n// Name: index.js for the footer of the app\n// Comments: JS file for AppFind\n// Author: Tjark Ziehm\n// Version: 0.01\n// Date: 25.Dez. 2020\n// CoWorkers:\n//=========================================================================================\n\n/*\n* TODO: \n* 1. Add Logo @ the top (single Hexagon)\n* 2. Set card with actual position\n* 3. Set search Card for Zip-code-serach field, Start-Button, Street-searchfield. start and end time props ( with clock to set) , and expert modus with popup\n* 4. Set search function for parling spaces.\n* 5. Set View of spaces.\n* 6. Set Notification for  parkingspaces with information about rating , comment, price ( day and hour ) and book button\n*/\n\n//=========================================================================================\n// Structure \n//=========================================================================================\n\n/**\n* Index\n* @class S\n* @constructor \n* @extends \n* @functions\n* @useEffect to prevend window undefind errors\n* @return\n*/\n\n//=========================================================================================\n\nimport { h } from 'preact';\nimport { Link } from 'preact-router/match';\n\nimport './style.css';\n\n\nconst Footer = () => (\n    <div class=\"flex flex-wrap justify-center bg-blue-900 p-6\">\n      <div class=\"flex flex-wrap mb-4 w-full\">\n        <div class=\"w-full sm:w-1/2 md:w-1/2 lg:w-1/4 \">\n          <h3 class=\"text-3xl py-4\">About Us</h3>\n          <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod\n            tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,\n            quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\n            consequat.\n          </p>\n        </div>\n        <div class=\"w-full sm:w-1/2 md:w-1/2 lg:w-1/4 pl-8\">\n          <h3 class=\"text-3xl py-4\">Links</h3>\n          <ul>\n            <li><a href=\"#\">Link</a></li>\n            <li><a href=\"#\">Link</a></li>\n            <li><a href=\"#\">Link</a></li>\n            <li><a href=\"#\">Link</a></li>\n            <li><a href=\"#\">Link</a></li>\n          </ul>\n        </div>\n        <div class=\"w-full sm:w-1/2 md:w-1/2 lg:w-1/4 \">\n          <h3 class=\"text-3xl py-4\">Links</h3>\n          <ul>\n            <li><a href=\"#\">Link</a></li>\n            <li><a href=\"#\">Link</a></li>\n            <li><a href=\"#\">Link</a></li>\n            <li><a href=\"#\">Link</a></li>\n            <li><a href=\"#\">Link</a></li>\n          </ul>\n        </div>\n\n      <div class=\"bg-blue-900 p-2 pl-6\">\n      <p class=\"bottom\">© Copyright 2020 - spottroup.com</p>\n    </div>\n    </div>\n    </div>\n);\n\nexport default Footer;\n","//=========================================================================================\n//                        ____              _  _____\n//                       / ___| _ __   ___ | ||_   _| __ ___  _   _ _ __\n//                       \\___ \\| '_ \\ / _ \\| __|| || '__/ _ \\| | | | '_ \\\n//                        ___) | |_) | (_) | |_ | || | | (_) | |_| | |_) |\n//                       |____/| .__/ \\___/ \\__||_||_|  \\___/ \\__,_| .__/\n//                             |_|                                 |_|\n// create with figlet \n//\n// Name: index.js \n// Comments: JS file for the  basic Button\n// Author: Tjark Ziehm\n// Version: 0.01\n// Date: 25.Dez. 2020\n// CoWorkers:\n//=========================================================================================\n\n/*\n* TODO: \n\n*/\n\n//=========================================================================================\n// Structure \n//=========================================================================================\n\n/**\n* Index\n\n*/\n\n//=========================================================================================\nimport { comment } from 'postcss';\nimport { h } from 'preact';\nimport style from './style.css';\n\nconst Button = () => (\n\t<div>\n\t\t<button class=\"my-4 mx-4 py-2 px-4 bg-green-500 text-white font-semibold rounded-lg shadow-md hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-400 focus:ring-opacity-75\">\n\t\t\tButton\n</button>\n\n\n\t</div>\n);\n\nexport default Button;\n","//=========================================================================================\n//                        ____              _  _____\n//                       / ___| _ __   ___ | ||_   _| __ ___  _   _ _ __\n//                       \\___ \\| '_ \\ / _ \\| __|| || '__/ _ \\| | | | '_ \\\n//                        ___) | |_) | (_) | |_ | || | | (_) | |_| | |_) |\n//                       |____/| .__/ \\___/ \\__||_||_|  \\___/ \\__,_| .__/\n//                             |_|                                 |_|\n// create with figlet \n//\n// Name: index.js \n// Comments: JS file for the  responsive topCard represention SpotTroup Blog\n// Author: Tjark Ziehm\n// Version: 0.01\n// Date: 25.Dez. 2020\n// CoWorkers:\n//=========================================================================================\n\n/*\n* TODO: \n\n*/\n\n//=========================================================================================\n// Structure \n//=========================================================================================\n\n/**\n* Index\n\n*/\n\n//=========================================================================================\nimport { comment } from 'postcss';\nimport { h } from 'preact';\nimport style from './style.css';\nimport Button from '../../components/button/index.js';\n\nconst MapNavigationCard = () => (\n\n\n\t<div class=\"mt-3 mb-8\">\n\t\t<div class=\"bg-gray-300 rounded-xl overflow-hidden shadow-xl border-black\">\n\t\t\t<img class=\"opacity-75 mx-auto m-2 rounded shadow-md\" src=\"../../assets/images/map.png\" />\n\t\t\t<div class=\"flex justify-start border-2 border-black opacity-75\">\n\t\t\t\t<Button class=\"\" />\n\t\t\t\t<span class=\"my-auto \">today</span>\n\t\t\t\t<Button />\n\t\t\t</div>\n\t\t\t<div class=\"flex justify-start bg-gray-300 border-2 border-black \">\n\t\t\t\t<input type=\"date\" class=\"bg-red-300 h-7 my-auto mr-2 ml-3 rounded font-bold\"></input>\n\t\t\t\t<input type=\"date\" class=\"bg-red-300 h-7 my-auto rounded font-bold\"></input>\n\t\t\t\t<div class=\"border-2 bg-yellow-500 opacity-30 rounded border-yellow-600 h-7 my-auto ml-2 hover:shadow-2xl hover:opacity-95\"><span class=\"font-bold\">Buchen</span></div>\n\t\t\t\t<Button class=\"rounded-full\" />\n\t\t\t</div>\n\t\t\t<div></div>\n\t\t</div>\n\n\n\n\t</div>\n\n\n);\n\nexport default MapNavigationCard;\n","\n//=========================================================================================\n//                        ____              _  _____\n//                       / ___| _ __   ___ | ||_   _| __ ___  _   _ _ __\n//                       \\___ \\| '_ \\ / _ \\| __|| || '__/ _ \\| | | | '_ \\\n//                        ___) | |_) | (_) | |_ | || | | (_) | |_| | |_) |\n//                       |____/| .__/ \\___/ \\__||_||_|  \\___/ \\__,_| .__/\n//                             |_|                                 |_|\n// create with figlet \n//\n// Name: index.js \n// Comments: JS file for home\n// Author: Tjark Ziehm\n// Version: 0.01\n// Date: 25.Dez. 2020\n// CoWorkers:\n//=========================================================================================\n\n/*\n* TODO: \n\n*/\n\n//=========================================================================================\n// Structure \n//=========================================================================================\n\n/**\n* Index\n* @class S\n* @constructor \n* @extends \n* @functions\n* @useEffect to prevend window undefind errors\n* @return\n*/\n\n//=========================================================================================\nimport { h } from 'preact';\n\n\nconst SizeControll = () => (\n    <div class=\"flex justify-center bg-gray-300 mt-3 mb-3 \">\n        <div class=\"\">\n            <p>'xs': '640px',</p>\n            <p>'sm': '800px',</p>\n            <p>'md': '1200px',</p>\n            <p>'lg': '1400px',</p>\n            <p>'xl': '1600px',</p>\n            <p>'2xl': '2000px'</p>\n        </div>\n\n\n        <div class=\"flex \">\n            <div class=\"bg-red-400 xs:bg-green sm:bg-yellow-400 md:bg-green-500 lg:bg-blue-500 xl:bg-purple-500 2xl:bg-pink-500\">test</div>\n        </div>\n    </div>\n);\n\nexport default SizeControll;\n\n","//=========================================================================================\n//                        ____              _  _____\n//                       / ___| _ __   ___ | ||_   _| __ ___  _   _ _ __\n//                       \\___ \\| '_ \\ / _ \\| __|| || '__/ _ \\| | | | '_ \\\n//                        ___) | |_) | (_) | |_ | || | | (_) | |_| | |_) |\n//                       |____/| .__/ \\___/ \\__||_||_|  \\___/ \\__,_| .__/\n//                             |_|                                 |_|\n// create with figlet \n//\n// Name: index.js \n// Comments: JS file for home\n// Author: Tjark Ziehm\n// Version: 0.01\n// Date: 25.Dez. 2020\n// CoWorkers:\n//=========================================================================================\n\n/*\n* TODO: \n\n*/\n\n//=========================================================================================\n// Structure \n//=========================================================================================\n\n/**\n* Index\n* @class S\n* @constructor \n* @extends \n* @functions\n* @useEffect to prevend window undefind errors\n* @return\n*/\n\n//=========================================================================================\nimport { h } from 'preact';\nimport style from './style.css';\nimport TopCard from '../../components/topCard/index.js';\nimport BasicCard from '../../components/basicCard/index.js';\nimport Button from '../../components/button/index.js';\nimport SmallCard from '../../components/smallCard/index.js';\nimport MapNavigationCard from '../../components/mapnavigationcard/index.js';\nimport SizeControll from '../../components/sizecontroll/index.js';\nimport './style.css';\n\nconst Home = () => (\n\n\t<div>\n\t\t<main class=\"container mt-3 mb-3  border-2 border-gray-900\">\n\t\t\t<header>\n\t\t\t\t<div class=\"flex mx-auto w-12/12 bg-indigo-300 h-6 border-black\">\n\t\t\t\t\t<p class=\"mx-auto text-black\">Header</p>\n\t\t\t\t</div>\n\t\t\t</header>\n\t\t\t<div class=\" bg-gray-400 px-16 py-6 mt-1 mb-1\">\n\t\t\t\t<div class=\"flex justify-between bg-gray-700\">\n\t\t\t\t\t<Button />\n\t\t\t\t\t<h1 class=\"font-bold uppercase p-4 border-b border-gray-900\">today</h1>\n\t\t\t\t\t<Button />\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"flex justify-between\">\n\t\t\t\t\t<p class=\"text-black\">Main</p>\n\t\t\t\t\t<a href=\"#\" class=\"font-bold text-black\"> Login </a>\n\t\t\t\t\t<a href=\"#\" class=\"font-bold text-black\"> Register </a>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div class=\"flex items-center mt-2\">\n\t\t\t\t<div class=\" bg-red-500 h-5 w-5\">test</div>\n\t\t\t\t<div class=\" bg-blue-500 h-7 w-8\">test</div>\n\t\t\t\t<div class=\" bg-green-500 h-9 w-11\">test</div>\n\t\t\t</div>\n\t\t\t<div class=\"flex items-center mt-2\">\n\t\t\t\t<div class=\" bg-red-500 h-5 w-5\">test</div>\n\t\t\t\t<div class=\" bg-blue-500 h-7 w-8\">test</div>\n\t\t\t\t<div class=\" bg-green-500 h-9 w-11\">test</div>\n\t\t\t</div>\n\n\t\t\t<div class=\"flex\">\n\t\t\t\t<div class=\"bg-gray-400 text-\">test</div>\n\t\t\t</div>\n\t\t\t<div class=\"flex mt-2\">\n\t\t\t\t<div class=\"bg-red-400 xs:bg-green sm:bg-yellow-400 md:bg-green-500 lg:bg-blue-500 xl:bg-purple-500 2xl:bg-pink-500\">test</div>\n\t\t\t</div>\n\n\t\t\t<MapNavigationCard/>\n\t\t</main>\n\t\t<SizeControll/>\n\t</div>\n);\n\nexport default Home;\n","//=========================================================================================\n//                        ____              _  _____\n//                       / ___| _ __   ___ | ||_   _| __ ___  _   _ _ __\n//                       \\___ \\| '_ \\ / _ \\| __|| || '__/ _ \\| | | | '_ \\\n//                        ___) | |_) | (_) | |_ | || | | (_) | |_| | |_) |\n//                       |____/| .__/ \\___/ \\__||_||_|  \\___/ \\__,_| .__/\n//                             |_|                                 |_|\n// create with figlet \n//\n// Name: index.js \n// Comments: JS file for home\n// Author: Tjark Ziehm\n// Version: 0.01\n// Date: 25.Dez. 2020\n// CoWorkers:\n//=========================================================================================\n\n/*\n* TODO: \n\n*/\n\n//=========================================================================================\n// Structure \n//=========================================================================================\n\n/**\n* Index\n* @class S\n* @constructor \n* @extends \n* @functions\n* @useEffect to prevend window undefind errors\n* @return\n*/\n\n//=========================================================================================\nimport { h } from 'preact';\nimport style from './style.css';\n\nconst Home = () => (\n\t<div class=\"container\">\n\t\t<header>\n\t\t\t<button className=\" bg-red-100 hover:font-bold border-red-700  hover:border-red-700 hover:border-r-2 hover:border-b-4 hover:bg-red-900 hover:text-white hover:from-transparent  border-transparent text-black px-4 py-3 rounded\">Alert</button>\n\t\t</header>\n\t\t<main className=\"bg-purple-300 my-20\">\n\t\t\t<button className=\"bg-indigo-300 hover:bg-indigo-700 hover:text-white font-bold ml-4 py-10 px-20 rounded mt-5 mb-5\">Test</button>\n\t\t\t<button className=\"btn btn-blue\">Nummer 2</button>\n\t\t</main>\n\t\t<footer>\n\t\t\t<div class=\"flex bg-gray-700 text-white max-w-xl container rounded\">\n\t\t\t\t<div className=\"btn btn-blue m-2 ml-1\">1</div>\n\t\t\t\t<div className=\"btn btn-blue m-2\">2</div>\n\t\t\t\t<div class=\"btn btn-blue m-2\">3</div>\n\n\t\t\t</div>\n\t\t\t<div className=\"container md:flex \">\n\t\t\t\t<div className=\"sm:inline-block sm:bg-yellow-400\">\n\n\t\t\t\t\t<button >Button</button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"max-w-sm mx-auto flexp-6 bg-white rounded-lg shadow-2xl\">\n\t\t\t\t\t<div className=\"flex-shrink-0 ml-0\">\n\t\t\t\t\t\t<img src=\"../../assets/icons/android-chrome-512x512.png\" alt=\"\" className=\"h-12 w-12 lg:items-center\"></img>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"ml-6 pt-1\">\n\t\t\t\t\t\t<h1 className=\"text-xl text-gray-900\">Logo</h1>\n\t\t\t\t\t\t<p className=\"text-base text-gray-600\"></p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</div>\n\t\t</footer>\n\t</div>\n);\n\nexport default Home;\n","//=========================================================================================\n//                        ____              _  _____\n//                       / ___| _ __   ___ | ||_   _| __ ___  _   _ _ __\n//                       \\___ \\| '_ \\ / _ \\| __|| || '__/ _ \\| | | | '_ \\\n//                        ___) | |_) | (_) | |_ | || | | (_) | |_| | |_) |\n//                       |____/| .__/ \\___/ \\__||_||_|  \\___/ \\__,_| .__/\n//                             |_|                                 |_|\n// create with figlet \n//\n// Name: index.js \n// Comments: JS file for home\n// Author: Tjark Ziehm\n// Version: 0.01\n// Date: 25.Dez. 2020\n// CoWorkers:\n//=========================================================================================\n\n/*\n* TODO: \n\n*/\n\n//=========================================================================================\n// Structure \n//=========================================================================================\n\n/**\n* Index\n* @class S\n* @constructor \n* @extends \n* @functions\n* @useEffect to prevend window undefind errors\n* @return\n*/\n\n//=========================================================================================\nimport { h } from 'preact';\nimport style from './style.css';\n\nconst Home = () => (\n\t<div class=\"container\">\n\t\t<header>\n\t\t\t<button className=\" bg-red-100 hover:font-bold border-red-700  hover:border-red-700 hover:border-r-2 hover:border-b-4 hover:bg-red-900 hover:text-white hover:from-transparent  border-transparent text-black px-4 py-3 rounded\">Alert</button>\n\t\t</header>\n\t\t<main className=\"bg-purple-300 my-20\">\n\t\t\t<button className=\"bg-indigo-300 hover:bg-indigo-700 hover:text-white font-bold ml-4 py-10 px-20 rounded mt-5 mb-5\">Test</button>\n\t\t\t<button className=\"btn btn-blue\">Nummer 2</button>\n\t\t</main>\n\t\t<footer>\n\t\t\t<div class=\"flex bg-gray-700 text-white max-w-xl container rounded\">\n\t\t\t\t<div className=\"btn btn-blue m-2 ml-1\">1</div>\n\t\t\t\t<div className=\"btn btn-blue m-2\">2</div>\n\t\t\t\t<div class=\"btn btn-blue m-2\">3</div>\n\n\t\t\t</div>\n\t\t\t<div className=\"container md:flex \">\n\t\t\t\t<div className=\"sm:inline-block sm:bg-yellow-400\">\n\n\t\t\t\t\t<button >Button</button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"max-w-sm mx-auto flexp-6 bg-white rounded-lg shadow-2xl\">\n\t\t\t\t\t<div className=\"flex-shrink-0 ml-0\">\n\t\t\t\t\t\t<img src=\"../../assets/icons/android-chrome-512x512.png\" alt=\"\" className=\"h-12 w-12 lg:items-center\"></img>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"ml-6 pt-1\">\n\t\t\t\t\t\t<h1 className=\"text-xl text-gray-900\">Logo</h1>\n\t\t\t\t\t\t<p className=\"text-base text-gray-600\"></p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</div>\n\t\t</footer>\n\t</div>\n);\n\nexport default Home;\n","//=========================================================================================\n//                        ____              _  _____\n//                       / ___| _ __   ___ | ||_   _| __ ___  _   _ _ __\n//                       \\___ \\| '_ \\ / _ \\| __|| || '__/ _ \\| | | | '_ \\\n//                        ___) | |_) | (_) | |_ | || | | (_) | |_| | |_) |\n//                       |____/| .__/ \\___/ \\__||_||_|  \\___/ \\__,_| .__/\n//                             |_|                                 |_|\n// create with figlet \n//\n// Name: index.js \n// Comments: JS file for home\n// Author: Tjark Ziehm\n// Version: 0.01\n// Date: 25.Dez. 2020\n// CoWorkers:\n//=========================================================================================\n\n/*\n* TODO: \n\n*/\n\n//=========================================================================================\n// Structure \n//=========================================================================================\n\n/**\n* Index\n* @class S\n* @constructor \n* @extends \n* @functions\n* @useEffect to prevend window undefind errors\n* @return\n*/\n\n//=========================================================================================\nimport { h } from 'preact';\nimport style from './style.css';\n\nconst Home = () => (\n\t<div class=\"container\">\n\t\t<header>\n\t\t\t<button className=\" bg-red-100 hover:font-bold border-red-700  hover:border-red-700 hover:border-r-2 hover:border-b-4 hover:bg-red-900 hover:text-white hover:from-transparent  border-transparent text-black px-4 py-3 rounded\">Alert</button>\n\t\t</header>\n\t\t<main className=\"bg-purple-300 my-20\">\n\t\t\t<button className=\"bg-indigo-300 hover:bg-indigo-700 hover:text-white font-bold ml-4 py-10 px-20 rounded mt-5 mb-5\">Test</button>\n\t\t\t<button className=\"btn btn-blue\">Nummer 2</button>\n\t\t</main>\n\t\t<footer>\n\t\t\t<div class=\"flex bg-gray-700 text-white max-w-xl container rounded\">\n\t\t\t\t<div className=\"btn btn-blue m-2 ml-1\">1</div>\n\t\t\t\t<div className=\"btn btn-blue m-2\">2</div>\n\t\t\t\t<div class=\"btn btn-blue m-2\">3</div>\n\n\t\t\t</div>\n\t\t\t<div className=\"container md:flex \">\n\t\t\t\t<div className=\"sm:inline-block sm:bg-yellow-400\">\n\n\t\t\t\t\t<button >Button</button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"max-w-sm mx-auto flexp-6 bg-white rounded-lg shadow-2xl\">\n\t\t\t\t\t<div className=\"flex-shrink-0 ml-0\">\n\t\t\t\t\t\t<img src=\"../../assets/icons/android-chrome-512x512.png\" alt=\"\" className=\"h-12 w-12 lg:items-center\"></img>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"ml-6 pt-1\">\n\t\t\t\t\t\t<h1 className=\"text-xl text-gray-900\">Logo</h1>\n\t\t\t\t\t\t<p className=\"text-base text-gray-600\"></p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</div>\n\t\t</footer>\n\t</div>\n);\n\nexport default Home;\n","//=========================================================================================\n//                        ____              _  _____\n//                       / ___| _ __   ___ | ||_   _| __ ___  _   _ _ __\n//                       \\___ \\| '_ \\ / _ \\| __|| || '__/ _ \\| | | | '_ \\\n//                        ___) | |_) | (_) | |_ | || | | (_) | |_| | |_) |\n//                       |____/| .__/ \\___/ \\__||_||_|  \\___/ \\__,_| .__/\n//                             |_|                                 |_|\n// create with figlet \n//\n// Name: index.js \n// Comments: JS file for home\n// Author: Tjark Ziehm\n// Version: 0.01\n// Date: 25.Dez. 2020\n// CoWorkers:\n//=========================================================================================\n\n/*\n* TODO: \n\n*/\n\n//=========================================================================================\n// Structure \n//=========================================================================================\n\n/**\n* Index\n* @class S\n* @constructor \n* @extends \n* @functions\n* @useEffect to prevend window undefind errors\n* @return\n*/\n\n//=========================================================================================\nimport { h } from 'preact';\nimport style from './style.css';\n\nconst Home = () => (\n\t<div class=\"container\">\n\t\t<header>\n\t\t\t<button className=\" bg-red-100 hover:font-bold border-red-700  hover:border-red-700 hover:border-r-2 hover:border-b-4 hover:bg-red-900 hover:text-white hover:from-transparent  border-transparent text-black px-4 py-3 rounded\">Alert</button>\n\t\t</header>\n\t\t<main className=\"bg-purple-300 my-20\">\n\t\t\t<button className=\"bg-indigo-300 hover:bg-indigo-700 hover:text-white font-bold ml-4 py-10 px-20 rounded mt-5 mb-5\">Test</button>\n\t\t\t<button className=\"btn btn-blue\">Nummer 2</button>\n\t\t</main>\n\t\t<footer>\n\t\t\t<div class=\"flex bg-gray-700 text-white max-w-xl container rounded\">\n\t\t\t\t<div className=\"btn btn-blue m-2 ml-1\">1</div>\n\t\t\t\t<div className=\"btn btn-blue m-2\">2</div>\n\t\t\t\t<div class=\"btn btn-blue m-2\">3</div>\n\n\t\t\t</div>\n\t\t\t<div className=\"container md:flex \">\n\t\t\t\t<div className=\"sm:inline-block sm:bg-yellow-400\">\n\n\t\t\t\t\t<button >Button</button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"max-w-sm mx-auto flexp-6 bg-white rounded-lg shadow-2xl\">\n\t\t\t\t\t<div className=\"flex-shrink-0 ml-0\">\n\t\t\t\t\t\t<img src=\"../../assets/icons/android-chrome-512x512.png\" alt=\"\" className=\"h-12 w-12 lg:items-center\"></img>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"ml-6 pt-1\">\n\t\t\t\t\t\t<h1 className=\"text-xl text-gray-900\">Logo</h1>\n\t\t\t\t\t\t<p className=\"text-base text-gray-600\"></p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</div>\n\t\t</footer>\n\t</div>\n);\n\nexport default Home;\n","//=========================================================================================\n//                        ____              _  _____\n//                       / ___| _ __   ___ | ||_   _| __ ___  _   _ _ __\n//                       \\___ \\| '_ \\ / _ \\| __|| || '__/ _ \\| | | | '_ \\\n//                        ___) | |_) | (_) | |_ | || | | (_) | |_| | |_) |\n//                       |____/| .__/ \\___/ \\__||_||_|  \\___/ \\__,_| .__/\n//                             |_|                                 |_|\n// create with figlet \n//\n// Name: index.js \n// Comments: JS file for home\n// Author: Tjark Ziehm\n// Version: 0.01\n// Date: 25.Dez. 2020\n// CoWorkers:\n//=========================================================================================\n\n/*\n* TODO: \n\n*/\n\n//=========================================================================================\n// Structure \n//=========================================================================================\n\n/**\n* Index\n* @class S\n* @constructor \n* @extends \n* @functions\n* @useEffect to prevend window undefind errors\n* @return\n*/\n\n//=========================================================================================\nimport { h } from 'preact';\nimport style from './style.css';\n\nconst Home = () => (\n\t<div class=\"container\">\n\t\t<header>\n\t\t\t<button className=\" bg-red-100 hover:font-bold border-red-700  hover:border-red-700 hover:border-r-2 hover:border-b-4 hover:bg-red-900 hover:text-white hover:from-transparent  border-transparent text-black px-4 py-3 rounded\">Alert</button>\n\t\t</header>\n\t\t<main className=\"bg-purple-300 my-20\">\n\t\t\t<button className=\"bg-indigo-300 hover:bg-indigo-700 hover:text-white font-bold ml-4 py-10 px-20 rounded mt-5 mb-5\">Test</button>\n\t\t\t<button className=\"btn btn-blue\">Nummer 2</button>\n\t\t</main>\n\t\t<footer>\n\t\t\t<div class=\"flex bg-gray-700 text-white max-w-xl container rounded\">\n\t\t\t\t<div className=\"btn btn-blue m-2 ml-1\">1</div>\n\t\t\t\t<div className=\"btn btn-blue m-2\">2</div>\n\t\t\t\t<div class=\"btn btn-blue m-2\">3</div>\n\n\t\t\t</div>\n\t\t\t<div className=\"container md:flex \">\n\t\t\t\t<div className=\"sm:inline-block sm:bg-yellow-400\">\n\n\t\t\t\t\t<button >Button</button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"max-w-sm mx-auto flexp-6 bg-white rounded-lg shadow-2xl\">\n\t\t\t\t\t<div className=\"flex-shrink-0 ml-0\">\n\t\t\t\t\t\t<img src=\"../../assets/icons/android-chrome-512x512.png\" alt=\"\" className=\"h-12 w-12 lg:items-center\"></img>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"ml-6 pt-1\">\n\t\t\t\t\t\t<h1 className=\"text-xl text-gray-900\">Logo</h1>\n\t\t\t\t\t\t<p className=\"text-base text-gray-600\"></p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</div>\n\t\t</footer>\n\t</div>\n);\n\nexport default Home;\n","import { h } from 'preact';\nimport {useEffect, useState} from \"preact/hooks\";\nimport style from './style.css';\n\n// Note: `user` comes from the URL, courtesy of our router\nconst Profile = ({ user }) => {\n\tconst [time, setTime] = useState(Date.now());\n\tconst [count, setCount] = useState(10);\n\n\tuseEffect(() => {\n\t\tlet timer = setInterval(() => setTime(Date.now()), 1000);\n\t\treturn () => clearInterval(timer);\n\t}, []);\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>Profile: {user}</h1>\n\t\t\t<p>This is the user profile for a user named { user }.</p>\n\n\t\t\t<div>Current time: {new Date(time).toLocaleString()}</div>\n\n\t\t\t<p>\n\t\t\t\t<button onClick={() => setCount((count) => count + 1)}>Click Me</button>\n\t\t\t\t{' '}\n\t\t\t\tClicked {count} times.\n\t\t\t</p>\n\t\t</div>\n\t);\n}\n\nexport default Profile;\n","//=========================================================================================\n//                        ____              _  _____\n//                       / ___| _ __   ___ | ||_   _| __ ___  _   _ _ __\n//                       \\___ \\| '_ \\ / _ \\| __|| || '__/ _ \\| | | | '_ \\\n//                        ___) | |_) | (_) | |_ | || | | (_) | |_| | |_) |\n//                       |____/| .__/ \\___/ \\__||_||_|  \\___/ \\__,_| .__/\n//                             |_|                                 |_|\n// create with figlet \n//\n// Name: app.js \n// Comments: JS file for App and Homepage as the Router for sides\n// Caller: /route/index.js \n// Author: Tjark Ziehm\n// Version: 0.01\n// Date: 25.Dez. 2020\n// CoWorkers:\n//=========================================================================================\n\n/*\n* TODO: \n\n*/\n\n//=========================================================================================\n// Structure \n//=========================================================================================\n\n/**\n* Index\n* @class S\n* @constructor \n* @extends \n* @functions\n* @useEffect to prevend window undefind errors\n* @return\n*/\n\n//=========================================================================================\n\nimport { h, Component } from 'preact';\nimport { Router } from 'preact-router';\nimport { Provider } from '@preact/prerender-data-provider';\nimport \"tailwindcss/tailwind.css\"\n\n// Elements from all sides\nimport Header from './header';\nimport Footer from './footer';\n\n// Code-splitting is automated for routes\nimport Home from '../routes/home';\nimport Fishing from '../routes/fishing';\nimport Cleaner from '../routes/cleaner';\nimport Shop from '../routes/shop';\nimport Production from '../routes/production';\nimport Parking from '../routes/parking';\n\n// Settings\nimport Profile from '../routes/profile';\n\n\n\n\n\n\nexport default class App extends Component {\n\t/** Gets fired when the route changes.\n\t\t *\t@param {Object} event\t\t\"change\" event from [preact-router](http://git.io/preact-router)\n\t\t *\t@param {string} event.url\tThe newly routed URL\n\t\t */\n\thandleRoute = e => {\n\t\tthis.currentUrl = e.url;\n\t};\n\n\trender(props) {\n\t\treturn (\n\t\t\t<Provider value={props}>\n\t\t\t\t<Header />\n\t\t\t\t<div>\n\n\t\t\t\t\t<Router onChange={this.handleRoute}>\n\n\t\t\t\t\t\t<Home path=\"/\" />\n\t\t\t\t\t\t<Fishing path=\"/fishing\" />\n\t\t\t\t\t\t<Cleaner path=\"/cleaner\" />\n\t\t\t\t\t\t<Shop path=\"/shop\" />\n\t\t\t\t\t\t<Production path=\"/production\" />\n\t\t\t\t\t\t<Parking path=\"/parking\" />\n\n\t\t\t\t\t\t<Profile path=\"/profile\" />\n\n\t\t\t\t\t</Router>\n\n\t\t\t\t</div>\n\t\t\t\t<Footer />\n\t\t\t</Provider>\n\n\t\t);\n\t}\n}\n\n","//=========================================================================================\n//                        ____              _  _____\n//                       / ___| _ __   ___ | ||_   _| __ ___  _   _ _ __\n//                       \\___ \\| '_ \\ / _ \\| __|| || '__/ _ \\| | | | '_ \\\n//                        ___) | |_) | (_) | |_ | || | | (_) | |_| | |_) |\n//                       |____/| .__/ \\___/ \\__||_||_|  \\___/ \\__,_| .__/\n//                             |_|                                 |_|\n// create with figlet \n//\n// Name: index.js \n// Comments: Starting js file to call app.js-router and /route/style/index.css\n// Author: Tjark Ziehm\n// Version: 0.01\n// Date: 25.Dez. 2020\n// CoWorkers:\n//=========================================================================================\n\n/*\n* TODO: \n* 1. Add Logo @ the top (single Hexagon)\n* 2. Set card with actual position\n* 3. Set search Card for Zip-code-serach field, Start-Button, Street-searchfield. start and end time props ( with clock to set) , and expert modus with popup\n* 4. Set search function for parling spaces.\n* 5. Set View of spaces.\n* 6. Set Notification for  parkingspaces with information about rating , comment, price ( day and hour ) and book button\n*/\n\n//=========================================================================================\n// Structure \n//=========================================================================================\n\n/**\n* Index\n* @class S\n* @constructor \n* @extends \n* @functions\n* @useEffect to prevend window undefind errors\n* @return\n*/\n\n//=========================================================================================\n\nimport './style/index.css';\nimport App from './components/app';\n\nexport default App;\n","import Declaration from './declaration'\nimport Comment from './comment'\nimport Node from './node'\n\nfunction cleanSource (nodes) {\n  return nodes.map(i => {\n    if (i.nodes) i.nodes = cleanSource(i.nodes)\n    delete i.source\n    return i\n  })\n}\n\n/**\n * The {@link Root}, {@link AtRule}, and {@link Rule} container nodes\n * inherit some common methods to help work with their children.\n *\n * Note that all containers can store any content. If you write a rule inside\n * a rule, PostCSS will parse it.\n *\n * @extends Node\n * @abstract\n */\nclass Container extends Node {\n  push (child) {\n    child.parent = this\n    this.nodes.push(child)\n    return this\n  }\n\n  /**\n   * Iterates through the container’s immediate children,\n   * calling `callback` for each child.\n   *\n   * Returning `false` in the callback will break iteration.\n   *\n   * This method only iterates through the container’s immediate children.\n   * If you need to recursively iterate through all the container’s descendant\n   * nodes, use {@link Container#walk}.\n   *\n   * Unlike the for `{}`-cycle or `Array#forEach` this iterator is safe\n   * if you are mutating the array of child nodes during iteration.\n   * PostCSS will adjust the current index to match the mutations.\n   *\n   * @param {childIterator} callback Iterator receives each node and index.\n   *\n   * @return {false|undefined} Returns `false` if iteration was broke.\n   *\n   * @example\n   * const root = postcss.parse('a { color: black; z-index: 1 }')\n   * const rule = root.first\n   *\n   * for (const decl of rule.nodes) {\n   *   decl.cloneBefore({ prop: '-webkit-' + decl.prop })\n   *   // Cycle will be infinite, because cloneBefore moves the current node\n   *   // to the next index\n   * }\n   *\n   * rule.each(decl => {\n   *   decl.cloneBefore({ prop: '-webkit-' + decl.prop })\n   *   // Will be executed only for color and z-index\n   * })\n   */\n  each (callback) {\n    if (!this.lastEach) this.lastEach = 0\n    if (!this.indexes) this.indexes = { }\n\n    this.lastEach += 1\n    let id = this.lastEach\n    this.indexes[id] = 0\n\n    if (!this.nodes) return undefined\n\n    let index, result\n    while (this.indexes[id] < this.nodes.length) {\n      index = this.indexes[id]\n      result = callback(this.nodes[index], index)\n      if (result === false) break\n\n      this.indexes[id] += 1\n    }\n\n    delete this.indexes[id]\n\n    return result\n  }\n\n  /**\n   * Traverses the container’s descendant nodes, calling callback\n   * for each node.\n   *\n   * Like container.each(), this method is safe to use\n   * if you are mutating arrays during iteration.\n   *\n   * If you only need to iterate through the container’s immediate children,\n   * use {@link Container#each}.\n   *\n   * @param {childIterator} callback Iterator receives each node and index.\n   *\n   * @return {false|undefined} Returns `false` if iteration was broke.\n   *\n   * @example\n   * root.walk(node => {\n   *   // Traverses all descendant nodes.\n   * })\n   */\n  walk (callback) {\n    return this.each((child, i) => {\n      let result\n      try {\n        result = callback(child, i)\n      } catch (e) {\n        e.postcssNode = child\n        if (e.stack && child.source && /\\n\\s{4}at /.test(e.stack)) {\n          let s = child.source\n          e.stack = e.stack.replace(/\\n\\s{4}at /,\n            `$&${ s.input.from }:${ s.start.line }:${ s.start.column }$&`)\n        }\n        throw e\n      }\n      if (result !== false && child.walk) {\n        result = child.walk(callback)\n      }\n      return result\n    })\n  }\n\n  /**\n   * Traverses the container’s descendant nodes, calling callback\n   * for each declaration node.\n   *\n   * If you pass a filter, iteration will only happen over declarations\n   * with matching properties.\n   *\n   * Like {@link Container#each}, this method is safe\n   * to use if you are mutating arrays during iteration.\n   *\n   * @param {string|RegExp} [prop]   String or regular expression\n   *                                 to filter declarations by property name.\n   * @param {childIterator} callback Iterator receives each node and index.\n   *\n   * @return {false|undefined} Returns `false` if iteration was broke.\n   *\n   * @example\n   * root.walkDecls(decl => {\n   *   checkPropertySupport(decl.prop)\n   * })\n   *\n   * root.walkDecls('border-radius', decl => {\n   *   decl.remove()\n   * })\n   *\n   * root.walkDecls(/^background/, decl => {\n   *   decl.value = takeFirstColorFromGradient(decl.value)\n   * })\n   */\n  walkDecls (prop, callback) {\n    if (!callback) {\n      callback = prop\n      return this.walk((child, i) => {\n        if (child.type === 'decl') {\n          return callback(child, i)\n        }\n      })\n    }\n    if (prop instanceof RegExp) {\n      return this.walk((child, i) => {\n        if (child.type === 'decl' && prop.test(child.prop)) {\n          return callback(child, i)\n        }\n      })\n    }\n    return this.walk((child, i) => {\n      if (child.type === 'decl' && child.prop === prop) {\n        return callback(child, i)\n      }\n    })\n  }\n\n  /**\n   * Traverses the container’s descendant nodes, calling callback\n   * for each rule node.\n   *\n   * If you pass a filter, iteration will only happen over rules\n   * with matching selectors.\n   *\n   * Like {@link Container#each}, this method is safe\n   * to use if you are mutating arrays during iteration.\n   *\n   * @param {string|RegExp} [selector] String or regular expression\n   *                                   to filter rules by selector.\n   * @param {childIterator} callback   Iterator receives each node and index.\n   *\n   * @return {false|undefined} returns `false` if iteration was broke.\n   *\n   * @example\n   * const selectors = []\n   * root.walkRules(rule => {\n   *   selectors.push(rule.selector)\n   * })\n   * console.log(`Your CSS uses ${ selectors.length } selectors`)\n   */\n  walkRules (selector, callback) {\n    if (!callback) {\n      callback = selector\n\n      return this.walk((child, i) => {\n        if (child.type === 'rule') {\n          return callback(child, i)\n        }\n      })\n    }\n    if (selector instanceof RegExp) {\n      return this.walk((child, i) => {\n        if (child.type === 'rule' && selector.test(child.selector)) {\n          return callback(child, i)\n        }\n      })\n    }\n    return this.walk((child, i) => {\n      if (child.type === 'rule' && child.selector === selector) {\n        return callback(child, i)\n      }\n    })\n  }\n\n  /**\n   * Traverses the container’s descendant nodes, calling callback\n   * for each at-rule node.\n   *\n   * If you pass a filter, iteration will only happen over at-rules\n   * that have matching names.\n   *\n   * Like {@link Container#each}, this method is safe\n   * to use if you are mutating arrays during iteration.\n   *\n   * @param {string|RegExp} [name]   String or regular expression\n   *                                 to filter at-rules by name.\n   * @param {childIterator} callback Iterator receives each node and index.\n   *\n   * @return {false|undefined} Returns `false` if iteration was broke.\n   *\n   * @example\n   * root.walkAtRules(rule => {\n   *   if (isOld(rule.name)) rule.remove()\n   * })\n   *\n   * let first = false\n   * root.walkAtRules('charset', rule => {\n   *   if (!first) {\n   *     first = true\n   *   } else {\n   *     rule.remove()\n   *   }\n   * })\n   */\n  walkAtRules (name, callback) {\n    if (!callback) {\n      callback = name\n      return this.walk((child, i) => {\n        if (child.type === 'atrule') {\n          return callback(child, i)\n        }\n      })\n    }\n    if (name instanceof RegExp) {\n      return this.walk((child, i) => {\n        if (child.type === 'atrule' && name.test(child.name)) {\n          return callback(child, i)\n        }\n      })\n    }\n    return this.walk((child, i) => {\n      if (child.type === 'atrule' && child.name === name) {\n        return callback(child, i)\n      }\n    })\n  }\n\n  /**\n   * Traverses the container’s descendant nodes, calling callback\n   * for each comment node.\n   *\n   * Like {@link Container#each}, this method is safe\n   * to use if you are mutating arrays during iteration.\n   *\n   * @param {childIterator} callback Iterator receives each node and index.\n   *\n   * @return {false|undefined} Returns `false` if iteration was broke.\n   *\n   * @example\n   * root.walkComments(comment => {\n   *   comment.remove()\n   * })\n   */\n  walkComments (callback) {\n    return this.walk((child, i) => {\n      if (child.type === 'comment') {\n        return callback(child, i)\n      }\n    })\n  }\n\n  /**\n   * Inserts new nodes to the end of the container.\n   *\n   * @param {...(Node|object|string|Node[])} children New nodes.\n   *\n   * @return {Node} This node for methods chain.\n   *\n   * @example\n   * const decl1 = postcss.decl({ prop: 'color', value: 'black' })\n   * const decl2 = postcss.decl({ prop: 'background-color', value: 'white' })\n   * rule.append(decl1, decl2)\n   *\n   * root.append({ name: 'charset', params: '\"UTF-8\"' })  // at-rule\n   * root.append({ selector: 'a' })                       // rule\n   * rule.append({ prop: 'color', value: 'black' })       // declaration\n   * rule.append({ text: 'Comment' })                     // comment\n   *\n   * root.append('a {}')\n   * root.first.append('color: black; z-index: 1')\n   */\n  append (...children) {\n    for (let child of children) {\n      let nodes = this.normalize(child, this.last)\n      for (let node of nodes) this.nodes.push(node)\n    }\n    return this\n  }\n\n  /**\n   * Inserts new nodes to the start of the container.\n   *\n   * @param {...(Node|object|string|Node[])} children New nodes.\n   *\n   * @return {Node} This node for methods chain.\n   *\n   * @example\n   * const decl1 = postcss.decl({ prop: 'color', value: 'black' })\n   * const decl2 = postcss.decl({ prop: 'background-color', value: 'white' })\n   * rule.prepend(decl1, decl2)\n   *\n   * root.append({ name: 'charset', params: '\"UTF-8\"' })  // at-rule\n   * root.append({ selector: 'a' })                       // rule\n   * rule.append({ prop: 'color', value: 'black' })       // declaration\n   * rule.append({ text: 'Comment' })                     // comment\n   *\n   * root.append('a {}')\n   * root.first.append('color: black; z-index: 1')\n   */\n  prepend (...children) {\n    children = children.reverse()\n    for (let child of children) {\n      let nodes = this.normalize(child, this.first, 'prepend').reverse()\n      for (let node of nodes) this.nodes.unshift(node)\n      for (let id in this.indexes) {\n        this.indexes[id] = this.indexes[id] + nodes.length\n      }\n    }\n    return this\n  }\n\n  cleanRaws (keepBetween) {\n    super.cleanRaws(keepBetween)\n    if (this.nodes) {\n      for (let node of this.nodes) node.cleanRaws(keepBetween)\n    }\n  }\n\n  /**\n   * Insert new node before old node within the container.\n   *\n   * @param {Node|number} exist             Child or child’s index.\n   * @param {Node|object|string|Node[]} add New node.\n   *\n   * @return {Node} This node for methods chain.\n   *\n   * @example\n   * rule.insertBefore(decl, decl.clone({ prop: '-webkit-' + decl.prop }))\n   */\n  insertBefore (exist, add) {\n    exist = this.index(exist)\n\n    let type = exist === 0 ? 'prepend' : false\n    let nodes = this.normalize(add, this.nodes[exist], type).reverse()\n    for (let node of nodes) this.nodes.splice(exist, 0, node)\n\n    let index\n    for (let id in this.indexes) {\n      index = this.indexes[id]\n      if (exist <= index) {\n        this.indexes[id] = index + nodes.length\n      }\n    }\n\n    return this\n  }\n\n  /**\n   * Insert new node after old node within the container.\n   *\n   * @param {Node|number} exist             Child or child’s index.\n   * @param {Node|object|string|Node[]} add New node.\n   *\n   * @return {Node} This node for methods chain.\n   */\n  insertAfter (exist, add) {\n    exist = this.index(exist)\n\n    let nodes = this.normalize(add, this.nodes[exist]).reverse()\n    for (let node of nodes) this.nodes.splice(exist + 1, 0, node)\n\n    let index\n    for (let id in this.indexes) {\n      index = this.indexes[id]\n      if (exist < index) {\n        this.indexes[id] = index + nodes.length\n      }\n    }\n\n    return this\n  }\n\n  /**\n   * Removes node from the container and cleans the parent properties\n   * from the node and its children.\n   *\n   * @param {Node|number} child Child or child’s index.\n   *\n   * @return {Node} This node for methods chain\n   *\n   * @example\n   * rule.nodes.length  //=> 5\n   * rule.removeChild(decl)\n   * rule.nodes.length  //=> 4\n   * decl.parent        //=> undefined\n   */\n  removeChild (child) {\n    child = this.index(child)\n    this.nodes[child].parent = undefined\n    this.nodes.splice(child, 1)\n\n    let index\n    for (let id in this.indexes) {\n      index = this.indexes[id]\n      if (index >= child) {\n        this.indexes[id] = index - 1\n      }\n    }\n\n    return this\n  }\n\n  /**\n   * Removes all children from the container\n   * and cleans their parent properties.\n   *\n   * @return {Node} This node for methods chain.\n   *\n   * @example\n   * rule.removeAll()\n   * rule.nodes.length //=> 0\n   */\n  removeAll () {\n    for (let node of this.nodes) node.parent = undefined\n    this.nodes = []\n    return this\n  }\n\n  /**\n   * Passes all declaration values within the container that match pattern\n   * through callback, replacing those values with the returned result\n   * of callback.\n   *\n   * This method is useful if you are using a custom unit or function\n   * and need to iterate through all values.\n   *\n   * @param {string|RegExp} pattern      Replace pattern.\n   * @param {object} opts                Options to speed up the search.\n   * @param {string|string[]} opts.props An array of property names.\n   * @param {string} opts.fast           String that’s used to narrow down\n   *                                     values and speed up the regexp search.\n   * @param {function|string} callback   String to replace pattern or callback\n   *                                     that returns a new value. The callback\n   *                                     will receive the same arguments\n   *                                     as those passed to a function parameter\n   *                                     of `String#replace`.\n   *\n   * @return {Node} This node for methods chain.\n   *\n   * @example\n   * root.replaceValues(/\\d+rem/, { fast: 'rem' }, string => {\n   *   return 15 * parseInt(string) + 'px'\n   * })\n   */\n  replaceValues (pattern, opts, callback) {\n    if (!callback) {\n      callback = opts\n      opts = { }\n    }\n\n    this.walkDecls(decl => {\n      if (opts.props && opts.props.indexOf(decl.prop) === -1) return\n      if (opts.fast && decl.value.indexOf(opts.fast) === -1) return\n\n      decl.value = decl.value.replace(pattern, callback)\n    })\n\n    return this\n  }\n\n  /**\n   * Returns `true` if callback returns `true`\n   * for all of the container’s children.\n   *\n   * @param {childCondition} condition Iterator returns true or false.\n   *\n   * @return {boolean} Is every child pass condition.\n   *\n   * @example\n   * const noPrefixes = rule.every(i => i.prop[0] !== '-')\n   */\n  every (condition) {\n    return this.nodes.every(condition)\n  }\n\n  /**\n   * Returns `true` if callback returns `true` for (at least) one\n   * of the container’s children.\n   *\n   * @param {childCondition} condition Iterator returns true or false.\n   *\n   * @return {boolean} Is some child pass condition.\n   *\n   * @example\n   * const hasPrefix = rule.some(i => i.prop[0] === '-')\n   */\n  some (condition) {\n    return this.nodes.some(condition)\n  }\n\n  /**\n   * Returns a `child`’s index within the {@link Container#nodes} array.\n   *\n   * @param {Node} child Child of the current container.\n   *\n   * @return {number} Child index.\n   *\n   * @example\n   * rule.index( rule.nodes[2] ) //=> 2\n   */\n  index (child) {\n    if (typeof child === 'number') {\n      return child\n    }\n    return this.nodes.indexOf(child)\n  }\n\n  /**\n   * The container’s first child.\n   *\n   * @type {Node}\n   *\n   * @example\n   * rule.first === rules.nodes[0]\n   */\n  get first () {\n    if (!this.nodes) return undefined\n    return this.nodes[0]\n  }\n\n  /**\n   * The container’s last child.\n   *\n   * @type {Node}\n   *\n   * @example\n   * rule.last === rule.nodes[rule.nodes.length - 1]\n   */\n  get last () {\n    if (!this.nodes) return undefined\n    return this.nodes[this.nodes.length - 1]\n  }\n\n  normalize (nodes, sample) {\n    if (typeof nodes === 'string') {\n      let parse = require('./parse')\n      nodes = cleanSource(parse(nodes).nodes)\n    } else if (Array.isArray(nodes)) {\n      nodes = nodes.slice(0)\n      for (let i of nodes) {\n        if (i.parent) i.parent.removeChild(i, 'ignore')\n      }\n    } else if (nodes.type === 'root') {\n      nodes = nodes.nodes.slice(0)\n      for (let i of nodes) {\n        if (i.parent) i.parent.removeChild(i, 'ignore')\n      }\n    } else if (nodes.type) {\n      nodes = [nodes]\n    } else if (nodes.prop) {\n      if (typeof nodes.value === 'undefined') {\n        throw new Error('Value field is missed in node creation')\n      } else if (typeof nodes.value !== 'string') {\n        nodes.value = String(nodes.value)\n      }\n      nodes = [new Declaration(nodes)]\n    } else if (nodes.selector) {\n      let Rule = require('./rule')\n      nodes = [new Rule(nodes)]\n    } else if (nodes.name) {\n      let AtRule = require('./at-rule')\n      nodes = [new AtRule(nodes)]\n    } else if (nodes.text) {\n      nodes = [new Comment(nodes)]\n    } else {\n      throw new Error('Unknown node type in node creation')\n    }\n\n    let processed = nodes.map(i => {\n      if (i.parent) i.parent.removeChild(i)\n      if (typeof i.raws.before === 'undefined') {\n        if (sample && typeof sample.raws.before !== 'undefined') {\n          i.raws.before = sample.raws.before.replace(/[^\\s]/g, '')\n        }\n      }\n      i.parent = this\n      return i\n    })\n\n    return processed\n  }\n\n  /**\n   * @memberof Container#\n   * @member {Node[]} nodes An array containing the container’s children.\n   *\n   * @example\n   * const root = postcss.parse('a { color: black }')\n   * root.nodes.length           //=> 1\n   * root.nodes[0].selector      //=> 'a'\n   * root.nodes[0].nodes[0].prop //=> 'color'\n   */\n}\n\nexport default Container\n\n/**\n * @callback childCondition\n * @param {Node} node    Container child.\n * @param {number} index Child index.\n * @param {Node[]} nodes All container children.\n * @return {boolean}\n */\n\n/**\n * @callback childIterator\n * @param {Node} node    Container child.\n * @param {number} index Child index.\n * @return {false|undefined} Returning `false` will break iteration.\n */\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar has = Object.prototype.hasOwnProperty;\nvar hasNativeMap = typeof Map !== \"undefined\";\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nfunction ArraySet() {\n  this._array = [];\n  this._set = hasNativeMap ? new Map() : Object.create(null);\n}\n\n/**\n * Static method for creating ArraySet instances from an existing array.\n */\nArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n  var set = new ArraySet();\n  for (var i = 0, len = aArray.length; i < len; i++) {\n    set.add(aArray[i], aAllowDuplicates);\n  }\n  return set;\n};\n\n/**\n * Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number\n */\nArraySet.prototype.size = function ArraySet_size() {\n  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;\n};\n\n/**\n * Add the given string to this set.\n *\n * @param String aStr\n */\nArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n  var sStr = hasNativeMap ? aStr : util.toSetString(aStr);\n  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);\n  var idx = this._array.length;\n  if (!isDuplicate || aAllowDuplicates) {\n    this._array.push(aStr);\n  }\n  if (!isDuplicate) {\n    if (hasNativeMap) {\n      this._set.set(aStr, idx);\n    } else {\n      this._set[sStr] = idx;\n    }\n  }\n};\n\n/**\n * Is the given string a member of this set?\n *\n * @param String aStr\n */\nArraySet.prototype.has = function ArraySet_has(aStr) {\n  if (hasNativeMap) {\n    return this._set.has(aStr);\n  } else {\n    var sStr = util.toSetString(aStr);\n    return has.call(this._set, sStr);\n  }\n};\n\n/**\n * What is the index of the given string in the array?\n *\n * @param String aStr\n */\nArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n  if (hasNativeMap) {\n    var idx = this._set.get(aStr);\n    if (idx >= 0) {\n        return idx;\n    }\n  } else {\n    var sStr = util.toSetString(aStr);\n    if (has.call(this._set, sStr)) {\n      return this._set[sStr];\n    }\n  }\n\n  throw new Error('\"' + aStr + '\" is not in the set.');\n};\n\n/**\n * What is the element at the given index?\n *\n * @param Number aIdx\n */\nArraySet.prototype.at = function ArraySet_at(aIdx) {\n  if (aIdx >= 0 && aIdx < this._array.length) {\n    return this._array[aIdx];\n  }\n  throw new Error('No element indexed by ' + aIdx);\n};\n\n/**\n * Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.\n */\nArraySet.prototype.toArray = function ArraySet_toArray() {\n  return this._array.slice();\n};\n\nexports.ArraySet = ArraySet;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar binarySearch = require('./binary-search');\nvar ArraySet = require('./array-set').ArraySet;\nvar base64VLQ = require('./base64-vlq');\nvar quickSort = require('./quick-sort').quickSort;\n\nfunction SourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  return sourceMap.sections != null\n    ? new IndexedSourceMapConsumer(sourceMap, aSourceMapURL)\n    : new BasicSourceMapConsumer(sourceMap, aSourceMapURL);\n}\n\nSourceMapConsumer.fromSourceMap = function(aSourceMap, aSourceMapURL) {\n  return BasicSourceMapConsumer.fromSourceMap(aSourceMap, aSourceMapURL);\n}\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nSourceMapConsumer.prototype._version = 3;\n\n// `__generatedMappings` and `__originalMappings` are arrays that hold the\n// parsed mapping coordinates from the source map's \"mappings\" attribute. They\n// are lazily instantiated, accessed via the `_generatedMappings` and\n// `_originalMappings` getters respectively, and we only parse the mappings\n// and create these arrays once queried for a source location. We jump through\n// these hoops because there can be many thousands of mappings, and parsing\n// them is expensive, so we only want to do it if we must.\n//\n// Each object in the arrays is of the form:\n//\n//     {\n//       generatedLine: The line number in the generated code,\n//       generatedColumn: The column number in the generated code,\n//       source: The path to the original source file that generated this\n//               chunk of code,\n//       originalLine: The line number in the original source that\n//                     corresponds to this chunk of generated code,\n//       originalColumn: The column number in the original source that\n//                       corresponds to this chunk of generated code,\n//       name: The name of the original symbol which generated this chunk of\n//             code.\n//     }\n//\n// All properties except for `generatedLine` and `generatedColumn` can be\n// `null`.\n//\n// `_generatedMappings` is ordered by the generated positions.\n//\n// `_originalMappings` is ordered by the original positions.\n\nSourceMapConsumer.prototype.__generatedMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__generatedMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__generatedMappings;\n  }\n});\n\nSourceMapConsumer.prototype.__originalMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__originalMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__originalMappings;\n  }\n});\n\nSourceMapConsumer.prototype._charIsMappingSeparator =\n  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\n    var c = aStr.charAt(index);\n    return c === \";\" || c === \",\";\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    throw new Error(\"Subclasses must implement _parseMappings\");\n  };\n\nSourceMapConsumer.GENERATED_ORDER = 1;\nSourceMapConsumer.ORIGINAL_ORDER = 2;\n\nSourceMapConsumer.GREATEST_LOWER_BOUND = 1;\nSourceMapConsumer.LEAST_UPPER_BOUND = 2;\n\n/**\n * Iterate over each mapping between an original source/line/column and a\n * generated line/column in this source map.\n *\n * @param Function aCallback\n *        The function that is called with each mapping.\n * @param Object aContext\n *        Optional. If specified, this object will be the value of `this` every\n *        time that `aCallback` is called.\n * @param aOrder\n *        Either `SourceMapConsumer.GENERATED_ORDER` or\n *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n *        iterate over the mappings sorted by the generated file's line/column\n *        order or the original's source/line/column order, respectively. Defaults to\n *        `SourceMapConsumer.GENERATED_ORDER`.\n */\nSourceMapConsumer.prototype.eachMapping =\n  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n    var context = aContext || null;\n    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n\n    var mappings;\n    switch (order) {\n    case SourceMapConsumer.GENERATED_ORDER:\n      mappings = this._generatedMappings;\n      break;\n    case SourceMapConsumer.ORIGINAL_ORDER:\n      mappings = this._originalMappings;\n      break;\n    default:\n      throw new Error(\"Unknown order of iteration.\");\n    }\n\n    var sourceRoot = this.sourceRoot;\n    mappings.map(function (mapping) {\n      var source = mapping.source === null ? null : this._sources.at(mapping.source);\n      source = util.computeSourceURL(sourceRoot, source, this._sourceMapURL);\n      return {\n        source: source,\n        generatedLine: mapping.generatedLine,\n        generatedColumn: mapping.generatedColumn,\n        originalLine: mapping.originalLine,\n        originalColumn: mapping.originalColumn,\n        name: mapping.name === null ? null : this._names.at(mapping.name)\n      };\n    }, this).forEach(aCallback, context);\n  };\n\n/**\n * Returns all generated line and column information for the original source,\n * line, and column provided. If no column is provided, returns all mappings\n * corresponding to a either the line we are searching for or the next\n * closest line that has any mappings. Otherwise, returns all mappings\n * corresponding to the given line and either the column we are searching for\n * or the next closest column that has any offsets.\n *\n * The only argument is an object with the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number is 1-based.\n *   - column: Optional. the column number in the original source.\n *    The column number is 0-based.\n *\n * and an array of objects is returned, each with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *    line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *    The column number is 0-based.\n */\nSourceMapConsumer.prototype.allGeneratedPositionsFor =\n  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\n    var line = util.getArg(aArgs, 'line');\n\n    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\n    // returns the index of the closest mapping less than the needle. By\n    // setting needle.originalColumn to 0, we thus find the last mapping for\n    // the given line, provided such a mapping exists.\n    var needle = {\n      source: util.getArg(aArgs, 'source'),\n      originalLine: line,\n      originalColumn: util.getArg(aArgs, 'column', 0)\n    };\n\n    needle.source = this._findSourceIndex(needle.source);\n    if (needle.source < 0) {\n      return [];\n    }\n\n    var mappings = [];\n\n    var index = this._findMapping(needle,\n                                  this._originalMappings,\n                                  \"originalLine\",\n                                  \"originalColumn\",\n                                  util.compareByOriginalPositions,\n                                  binarySearch.LEAST_UPPER_BOUND);\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (aArgs.column === undefined) {\n        var originalLine = mapping.originalLine;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we found. Since\n        // mappings are sorted, this is guaranteed to find all mappings for\n        // the line we found.\n        while (mapping && mapping.originalLine === originalLine) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      } else {\n        var originalColumn = mapping.originalColumn;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we were searching for.\n        // Since mappings are sorted, this is guaranteed to find all mappings for\n        // the line we are searching for.\n        while (mapping &&\n               mapping.originalLine === line &&\n               mapping.originalColumn == originalColumn) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      }\n    }\n\n    return mappings;\n  };\n\nexports.SourceMapConsumer = SourceMapConsumer;\n\n/**\n * A BasicSourceMapConsumer instance represents a parsed source map which we can\n * query for information about the original file positions by giving it a file\n * position in the generated source.\n *\n * The first parameter is the raw source map (either as a JSON string, or\n * already parsed to an object). According to the spec, source maps have the\n * following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - sources: An array of URLs to the original source files.\n *   - names: An array of identifiers which can be referrenced by individual mappings.\n *   - sourceRoot: Optional. The URL root from which all sources are relative.\n *   - sourcesContent: Optional. An array of contents of the original source files.\n *   - mappings: A string of base64 VLQs which contain the actual mappings.\n *   - file: Optional. The generated file this source map is associated with.\n *\n * Here is an example source map, taken from the source map spec[0]:\n *\n *     {\n *       version : 3,\n *       file: \"out.js\",\n *       sourceRoot : \"\",\n *       sources: [\"foo.js\", \"bar.js\"],\n *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n *       mappings: \"AA,AB;;ABCDE;\"\n *     }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n */\nfunction BasicSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sources = util.getArg(sourceMap, 'sources');\n  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n  // requires the array) to play nice here.\n  var names = util.getArg(sourceMap, 'names', []);\n  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\n  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\n  var mappings = util.getArg(sourceMap, 'mappings');\n  var file = util.getArg(sourceMap, 'file', null);\n\n  // Once again, Sass deviates from the spec and supplies the version as a\n  // string rather than a number, so we use loose equality checking here.\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  if (sourceRoot) {\n    sourceRoot = util.normalize(sourceRoot);\n  }\n\n  sources = sources\n    .map(String)\n    // Some source maps produce relative source paths like \"./foo.js\" instead of\n    // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n    // See bugzil.la/1090768.\n    .map(util.normalize)\n    // Always ensure that absolute sources are internally stored relative to\n    // the source root, if the source root is absolute. Not doing this would\n    // be particularly problematic when the source root is a prefix of the\n    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n    .map(function (source) {\n      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\n        ? util.relative(sourceRoot, source)\n        : source;\n    });\n\n  // Pass `true` below to allow duplicate names and sources. While source maps\n  // are intended to be compressed and deduplicated, the TypeScript compiler\n  // sometimes generates source maps with duplicates in them. See Github issue\n  // #72 and bugzil.la/889492.\n  this._names = ArraySet.fromArray(names.map(String), true);\n  this._sources = ArraySet.fromArray(sources, true);\n\n  this._absoluteSources = this._sources.toArray().map(function (s) {\n    return util.computeSourceURL(sourceRoot, s, aSourceMapURL);\n  });\n\n  this.sourceRoot = sourceRoot;\n  this.sourcesContent = sourcesContent;\n  this._mappings = mappings;\n  this._sourceMapURL = aSourceMapURL;\n  this.file = file;\n}\n\nBasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nBasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;\n\n/**\n * Utility function to find the index of a source.  Returns -1 if not\n * found.\n */\nBasicSourceMapConsumer.prototype._findSourceIndex = function(aSource) {\n  var relativeSource = aSource;\n  if (this.sourceRoot != null) {\n    relativeSource = util.relative(this.sourceRoot, relativeSource);\n  }\n\n  if (this._sources.has(relativeSource)) {\n    return this._sources.indexOf(relativeSource);\n  }\n\n  // Maybe aSource is an absolute URL as returned by |sources|.  In\n  // this case we can't simply undo the transform.\n  var i;\n  for (i = 0; i < this._absoluteSources.length; ++i) {\n    if (this._absoluteSources[i] == aSource) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\n/**\n * Create a BasicSourceMapConsumer from a SourceMapGenerator.\n *\n * @param SourceMapGenerator aSourceMap\n *        The source map that will be consumed.\n * @param String aSourceMapURL\n *        The URL at which the source map can be found (optional)\n * @returns BasicSourceMapConsumer\n */\nBasicSourceMapConsumer.fromSourceMap =\n  function SourceMapConsumer_fromSourceMap(aSourceMap, aSourceMapURL) {\n    var smc = Object.create(BasicSourceMapConsumer.prototype);\n\n    var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\n    var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\n    smc.sourceRoot = aSourceMap._sourceRoot;\n    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\n                                                            smc.sourceRoot);\n    smc.file = aSourceMap._file;\n    smc._sourceMapURL = aSourceMapURL;\n    smc._absoluteSources = smc._sources.toArray().map(function (s) {\n      return util.computeSourceURL(smc.sourceRoot, s, aSourceMapURL);\n    });\n\n    // Because we are modifying the entries (by converting string sources and\n    // names to indices into the sources and names ArraySets), we have to make\n    // a copy of the entry or else bad things happen. Shared mutable state\n    // strikes again! See github issue #191.\n\n    var generatedMappings = aSourceMap._mappings.toArray().slice();\n    var destGeneratedMappings = smc.__generatedMappings = [];\n    var destOriginalMappings = smc.__originalMappings = [];\n\n    for (var i = 0, length = generatedMappings.length; i < length; i++) {\n      var srcMapping = generatedMappings[i];\n      var destMapping = new Mapping;\n      destMapping.generatedLine = srcMapping.generatedLine;\n      destMapping.generatedColumn = srcMapping.generatedColumn;\n\n      if (srcMapping.source) {\n        destMapping.source = sources.indexOf(srcMapping.source);\n        destMapping.originalLine = srcMapping.originalLine;\n        destMapping.originalColumn = srcMapping.originalColumn;\n\n        if (srcMapping.name) {\n          destMapping.name = names.indexOf(srcMapping.name);\n        }\n\n        destOriginalMappings.push(destMapping);\n      }\n\n      destGeneratedMappings.push(destMapping);\n    }\n\n    quickSort(smc.__originalMappings, util.compareByOriginalPositions);\n\n    return smc;\n  };\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nBasicSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    return this._absoluteSources.slice();\n  }\n});\n\n/**\n * Provide the JIT with a nice shape / hidden class.\n */\nfunction Mapping() {\n  this.generatedLine = 0;\n  this.generatedColumn = 0;\n  this.source = null;\n  this.originalLine = null;\n  this.originalColumn = null;\n  this.name = null;\n}\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nBasicSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    var generatedLine = 1;\n    var previousGeneratedColumn = 0;\n    var previousOriginalLine = 0;\n    var previousOriginalColumn = 0;\n    var previousSource = 0;\n    var previousName = 0;\n    var length = aStr.length;\n    var index = 0;\n    var cachedSegments = {};\n    var temp = {};\n    var originalMappings = [];\n    var generatedMappings = [];\n    var mapping, str, segment, end, value;\n\n    while (index < length) {\n      if (aStr.charAt(index) === ';') {\n        generatedLine++;\n        index++;\n        previousGeneratedColumn = 0;\n      }\n      else if (aStr.charAt(index) === ',') {\n        index++;\n      }\n      else {\n        mapping = new Mapping();\n        mapping.generatedLine = generatedLine;\n\n        // Because each offset is encoded relative to the previous one,\n        // many segments often have the same encoding. We can exploit this\n        // fact by caching the parsed variable length fields of each segment,\n        // allowing us to avoid a second parse if we encounter the same\n        // segment again.\n        for (end = index; end < length; end++) {\n          if (this._charIsMappingSeparator(aStr, end)) {\n            break;\n          }\n        }\n        str = aStr.slice(index, end);\n\n        segment = cachedSegments[str];\n        if (segment) {\n          index += str.length;\n        } else {\n          segment = [];\n          while (index < end) {\n            base64VLQ.decode(aStr, index, temp);\n            value = temp.value;\n            index = temp.rest;\n            segment.push(value);\n          }\n\n          if (segment.length === 2) {\n            throw new Error('Found a source, but no line and column');\n          }\n\n          if (segment.length === 3) {\n            throw new Error('Found a source and line, but no column');\n          }\n\n          cachedSegments[str] = segment;\n        }\n\n        // Generated column.\n        mapping.generatedColumn = previousGeneratedColumn + segment[0];\n        previousGeneratedColumn = mapping.generatedColumn;\n\n        if (segment.length > 1) {\n          // Original source.\n          mapping.source = previousSource + segment[1];\n          previousSource += segment[1];\n\n          // Original line.\n          mapping.originalLine = previousOriginalLine + segment[2];\n          previousOriginalLine = mapping.originalLine;\n          // Lines are stored 0-based\n          mapping.originalLine += 1;\n\n          // Original column.\n          mapping.originalColumn = previousOriginalColumn + segment[3];\n          previousOriginalColumn = mapping.originalColumn;\n\n          if (segment.length > 4) {\n            // Original name.\n            mapping.name = previousName + segment[4];\n            previousName += segment[4];\n          }\n        }\n\n        generatedMappings.push(mapping);\n        if (typeof mapping.originalLine === 'number') {\n          originalMappings.push(mapping);\n        }\n      }\n    }\n\n    quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated);\n    this.__generatedMappings = generatedMappings;\n\n    quickSort(originalMappings, util.compareByOriginalPositions);\n    this.__originalMappings = originalMappings;\n  };\n\n/**\n * Find the mapping that best matches the hypothetical \"needle\" mapping that\n * we are searching for in the given \"haystack\" of mappings.\n */\nBasicSourceMapConsumer.prototype._findMapping =\n  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\n                                         aColumnName, aComparator, aBias) {\n    // To return the position we are searching for, we must first find the\n    // mapping for the given position and then return the opposite position it\n    // points to. Because the mappings are sorted, we can use binary search to\n    // find the best mapping.\n\n    if (aNeedle[aLineName] <= 0) {\n      throw new TypeError('Line must be greater than or equal to 1, got '\n                          + aNeedle[aLineName]);\n    }\n    if (aNeedle[aColumnName] < 0) {\n      throw new TypeError('Column must be greater than or equal to 0, got '\n                          + aNeedle[aColumnName]);\n    }\n\n    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\n  };\n\n/**\n * Compute the last column for each generated mapping. The last column is\n * inclusive.\n */\nBasicSourceMapConsumer.prototype.computeColumnSpans =\n  function SourceMapConsumer_computeColumnSpans() {\n    for (var index = 0; index < this._generatedMappings.length; ++index) {\n      var mapping = this._generatedMappings[index];\n\n      // Mappings do not contain a field for the last generated columnt. We\n      // can come up with an optimistic estimate, however, by assuming that\n      // mappings are contiguous (i.e. given two consecutive mappings, the\n      // first mapping ends where the second one starts).\n      if (index + 1 < this._generatedMappings.length) {\n        var nextMapping = this._generatedMappings[index + 1];\n\n        if (mapping.generatedLine === nextMapping.generatedLine) {\n          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\n          continue;\n        }\n      }\n\n      // The last mapping for each line spans the entire line.\n      mapping.lastGeneratedColumn = Infinity;\n    }\n  };\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nBasicSourceMapConsumer.prototype.originalPositionFor =\n  function SourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._generatedMappings,\n      \"generatedLine\",\n      \"generatedColumn\",\n      util.compareByGeneratedPositionsDeflated,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._generatedMappings[index];\n\n      if (mapping.generatedLine === needle.generatedLine) {\n        var source = util.getArg(mapping, 'source', null);\n        if (source !== null) {\n          source = this._sources.at(source);\n          source = util.computeSourceURL(this.sourceRoot, source, this._sourceMapURL);\n        }\n        var name = util.getArg(mapping, 'name', null);\n        if (name !== null) {\n          name = this._names.at(name);\n        }\n        return {\n          source: source,\n          line: util.getArg(mapping, 'originalLine', null),\n          column: util.getArg(mapping, 'originalColumn', null),\n          name: name\n        };\n      }\n    }\n\n    return {\n      source: null,\n      line: null,\n      column: null,\n      name: null\n    };\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nBasicSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function BasicSourceMapConsumer_hasContentsOfAllSources() {\n    if (!this.sourcesContent) {\n      return false;\n    }\n    return this.sourcesContent.length >= this._sources.size() &&\n      !this.sourcesContent.some(function (sc) { return sc == null; });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nBasicSourceMapConsumer.prototype.sourceContentFor =\n  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    if (!this.sourcesContent) {\n      return null;\n    }\n\n    var index = this._findSourceIndex(aSource);\n    if (index >= 0) {\n      return this.sourcesContent[index];\n    }\n\n    var relativeSource = aSource;\n    if (this.sourceRoot != null) {\n      relativeSource = util.relative(this.sourceRoot, relativeSource);\n    }\n\n    var url;\n    if (this.sourceRoot != null\n        && (url = util.urlParse(this.sourceRoot))) {\n      // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n      // many users. We can help them out when they expect file:// URIs to\n      // behave like it would if they were running a local HTTP server. See\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n      var fileUriAbsPath = relativeSource.replace(/^file:\\/\\//, \"\");\n      if (url.scheme == \"file\"\n          && this._sources.has(fileUriAbsPath)) {\n        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\n      }\n\n      if ((!url.path || url.path == \"/\")\n          && this._sources.has(\"/\" + relativeSource)) {\n        return this.sourcesContent[this._sources.indexOf(\"/\" + relativeSource)];\n      }\n    }\n\n    // This function is used recursively from\n    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\n    // don't want to throw if we can't find the source - we just want to\n    // return null, so we provide a flag to exit gracefully.\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + relativeSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nBasicSourceMapConsumer.prototype.generatedPositionFor =\n  function SourceMapConsumer_generatedPositionFor(aArgs) {\n    var source = util.getArg(aArgs, 'source');\n    source = this._findSourceIndex(source);\n    if (source < 0) {\n      return {\n        line: null,\n        column: null,\n        lastColumn: null\n      };\n    }\n\n    var needle = {\n      source: source,\n      originalLine: util.getArg(aArgs, 'line'),\n      originalColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._originalMappings,\n      \"originalLine\",\n      \"originalColumn\",\n      util.compareByOriginalPositions,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (mapping.source === needle.source) {\n        return {\n          line: util.getArg(mapping, 'generatedLine', null),\n          column: util.getArg(mapping, 'generatedColumn', null),\n          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n        };\n      }\n    }\n\n    return {\n      line: null,\n      column: null,\n      lastColumn: null\n    };\n  };\n\nexports.BasicSourceMapConsumer = BasicSourceMapConsumer;\n\n/**\n * An IndexedSourceMapConsumer instance represents a parsed source map which\n * we can query for information. It differs from BasicSourceMapConsumer in\n * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\n * input.\n *\n * The first parameter is a raw source map (either as a JSON string, or already\n * parsed to an object). According to the spec for indexed source maps, they\n * have the following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - file: Optional. The generated file this source map is associated with.\n *   - sections: A list of section definitions.\n *\n * Each value under the \"sections\" field has two fields:\n *   - offset: The offset into the original specified at which this section\n *       begins to apply, defined as an object with a \"line\" and \"column\"\n *       field.\n *   - map: A source map definition. This source map could also be indexed,\n *       but doesn't have to be.\n *\n * Instead of the \"map\" field, it's also possible to have a \"url\" field\n * specifying a URL to retrieve a source map from, but that's currently\n * unsupported.\n *\n * Here's an example source map, taken from the source map spec[0], but\n * modified to omit a section which uses the \"url\" field.\n *\n *  {\n *    version : 3,\n *    file: \"app.js\",\n *    sections: [{\n *      offset: {line:100, column:10},\n *      map: {\n *        version : 3,\n *        file: \"section.js\",\n *        sources: [\"foo.js\", \"bar.js\"],\n *        names: [\"src\", \"maps\", \"are\", \"fun\"],\n *        mappings: \"AAAA,E;;ABCDE;\"\n *      }\n *    }],\n *  }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\n */\nfunction IndexedSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sections = util.getArg(sourceMap, 'sections');\n\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n\n  var lastOffset = {\n    line: -1,\n    column: 0\n  };\n  this._sections = sections.map(function (s) {\n    if (s.url) {\n      // The url field will require support for asynchronicity.\n      // See https://github.com/mozilla/source-map/issues/16\n      throw new Error('Support for url field in sections not implemented.');\n    }\n    var offset = util.getArg(s, 'offset');\n    var offsetLine = util.getArg(offset, 'line');\n    var offsetColumn = util.getArg(offset, 'column');\n\n    if (offsetLine < lastOffset.line ||\n        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\n      throw new Error('Section offsets must be ordered and non-overlapping.');\n    }\n    lastOffset = offset;\n\n    return {\n      generatedOffset: {\n        // The offset fields are 0-based, but we use 1-based indices when\n        // encoding/decoding from VLQ.\n        generatedLine: offsetLine + 1,\n        generatedColumn: offsetColumn + 1\n      },\n      consumer: new SourceMapConsumer(util.getArg(s, 'map'), aSourceMapURL)\n    }\n  });\n}\n\nIndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nIndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nIndexedSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    var sources = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\n        sources.push(this._sections[i].consumer.sources[j]);\n      }\n    }\n    return sources;\n  }\n});\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nIndexedSourceMapConsumer.prototype.originalPositionFor =\n  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    // Find the section containing the generated position we're trying to map\n    // to an original position.\n    var sectionIndex = binarySearch.search(needle, this._sections,\n      function(needle, section) {\n        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\n        if (cmp) {\n          return cmp;\n        }\n\n        return (needle.generatedColumn -\n                section.generatedOffset.generatedColumn);\n      });\n    var section = this._sections[sectionIndex];\n\n    if (!section) {\n      return {\n        source: null,\n        line: null,\n        column: null,\n        name: null\n      };\n    }\n\n    return section.consumer.originalPositionFor({\n      line: needle.generatedLine -\n        (section.generatedOffset.generatedLine - 1),\n      column: needle.generatedColumn -\n        (section.generatedOffset.generatedLine === needle.generatedLine\n         ? section.generatedOffset.generatedColumn - 1\n         : 0),\n      bias: aArgs.bias\n    });\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nIndexedSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function IndexedSourceMapConsumer_hasContentsOfAllSources() {\n    return this._sections.every(function (s) {\n      return s.consumer.hasContentsOfAllSources();\n    });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nIndexedSourceMapConsumer.prototype.sourceContentFor =\n  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      var content = section.consumer.sourceContentFor(aSource, true);\n      if (content) {\n        return content;\n      }\n    }\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based. \n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nIndexedSourceMapConsumer.prototype.generatedPositionFor =\n  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      // Only consider this section if the requested source is in the list of\n      // sources of the consumer.\n      if (section.consumer._findSourceIndex(util.getArg(aArgs, 'source')) === -1) {\n        continue;\n      }\n      var generatedPosition = section.consumer.generatedPositionFor(aArgs);\n      if (generatedPosition) {\n        var ret = {\n          line: generatedPosition.line +\n            (section.generatedOffset.generatedLine - 1),\n          column: generatedPosition.column +\n            (section.generatedOffset.generatedLine === generatedPosition.line\n             ? section.generatedOffset.generatedColumn - 1\n             : 0)\n        };\n        return ret;\n      }\n    }\n\n    return {\n      line: null,\n      column: null\n    };\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nIndexedSourceMapConsumer.prototype._parseMappings =\n  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    this.__generatedMappings = [];\n    this.__originalMappings = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n      var sectionMappings = section.consumer._generatedMappings;\n      for (var j = 0; j < sectionMappings.length; j++) {\n        var mapping = sectionMappings[j];\n\n        var source = section.consumer._sources.at(mapping.source);\n        source = util.computeSourceURL(section.consumer.sourceRoot, source, this._sourceMapURL);\n        this._sources.add(source);\n        source = this._sources.indexOf(source);\n\n        var name = null;\n        if (mapping.name) {\n          name = section.consumer._names.at(mapping.name);\n          this._names.add(name);\n          name = this._names.indexOf(name);\n        }\n\n        // The mappings coming from the consumer for the section have\n        // generated positions relative to the start of the section, so we\n        // need to offset them to be relative to the start of the concatenated\n        // generated file.\n        var adjustedMapping = {\n          source: source,\n          generatedLine: mapping.generatedLine +\n            (section.generatedOffset.generatedLine - 1),\n          generatedColumn: mapping.generatedColumn +\n            (section.generatedOffset.generatedLine === mapping.generatedLine\n            ? section.generatedOffset.generatedColumn - 1\n            : 0),\n          originalLine: mapping.originalLine,\n          originalColumn: mapping.originalColumn,\n          name: name\n        };\n\n        this.__generatedMappings.push(adjustedMapping);\n        if (typeof adjustedMapping.originalLine === 'number') {\n          this.__originalMappings.push(adjustedMapping);\n        }\n      }\n    }\n\n    quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);\n    quickSort(this.__originalMappings, util.compareByOriginalPositions);\n  };\n\nexports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;\n","/**\n * Contains helpers for safely splitting lists of CSS values,\n * preserving parentheses and quotes.\n *\n * @example\n * const list = postcss.list\n *\n * @namespace list\n */\nlet list = {\n\n  split (string, separators, last) {\n    let array = []\n    let current = ''\n    let split = false\n\n    let func = 0\n    let quote = false\n    let escape = false\n\n    for (let i = 0; i < string.length; i++) {\n      let letter = string[i]\n\n      if (quote) {\n        if (escape) {\n          escape = false\n        } else if (letter === '\\\\') {\n          escape = true\n        } else if (letter === quote) {\n          quote = false\n        }\n      } else if (letter === '\"' || letter === '\\'') {\n        quote = letter\n      } else if (letter === '(') {\n        func += 1\n      } else if (letter === ')') {\n        if (func > 0) func -= 1\n      } else if (func === 0) {\n        if (separators.indexOf(letter) !== -1) split = true\n      }\n\n      if (split) {\n        if (current !== '') array.push(current.trim())\n        current = ''\n        split = false\n      } else {\n        current += letter\n      }\n    }\n\n    if (last || current !== '') array.push(current.trim())\n    return array\n  },\n\n  /**\n   * Safely splits space-separated values (such as those for `background`,\n   * `border-radius`, and other shorthand properties).\n   *\n   * @param {string} string Space-separated values.\n   *\n   * @return {string[]} Split values.\n   *\n   * @example\n   * postcss.list.space('1px calc(10% + 1px)') //=> ['1px', 'calc(10% + 1px)']\n   */\n  space (string) {\n    let spaces = [' ', '\\n', '\\t']\n    return list.split(string, spaces)\n  },\n\n  /**\n   * Safely splits comma-separated values (such as those for `transition-*`\n   * and `background` properties).\n   *\n   * @param {string} string Comma-separated values.\n   *\n   * @return {string[]} Split values.\n   *\n   * @example\n   * postcss.list.comma('black, linear-gradient(white, black)')\n   * //=> ['black', 'linear-gradient(white, black)']\n   */\n  comma (string) {\n    return list.split(string, [','], true)\n  }\n\n}\n\nexport default list\n","'use strict';\nmodule.exports = function () {\n\treturn /[\\u001b\\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-PRZcf-nqry=><]/g;\n};\n","\nconst EMPTY = {};\n\nexport function assign(obj, props) {\n\t// eslint-disable-next-line guard-for-in\n\tfor (let i in props) {\n\t\tobj[i] = props[i];\n\t}\n\treturn obj;\n}\n\nexport function exec(url, route, opts) {\n\tlet reg = /(?:\\?([^#]*))?(#.*)?$/,\n\t\tc = url.match(reg),\n\t\tmatches = {},\n\t\tret;\n\tif (c && c[1]) {\n\t\tlet p = c[1].split('&');\n\t\tfor (let i=0; i<p.length; i++) {\n\t\t\tlet r = p[i].split('=');\n\t\t\tmatches[decodeURIComponent(r[0])] = decodeURIComponent(r.slice(1).join('='));\n\t\t}\n\t}\n\turl = segmentize(url.replace(reg, ''));\n\troute = segmentize(route || '');\n\tlet max = Math.max(url.length, route.length);\n\tfor (let i=0; i<max; i++) {\n\t\tif (route[i] && route[i].charAt(0)===':') {\n\t\t\tlet param = route[i].replace(/(^:|[+*?]+$)/g, ''),\n\t\t\t\tflags = (route[i].match(/[+*?]+$/) || EMPTY)[0] || '',\n\t\t\t\tplus = ~flags.indexOf('+'),\n\t\t\t\tstar = ~flags.indexOf('*'),\n\t\t\t\tval = url[i] || '';\n\t\t\tif (!val && !star && (flags.indexOf('?')<0 || plus)) {\n\t\t\t\tret = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tmatches[param] = decodeURIComponent(val);\n\t\t\tif (plus || star) {\n\t\t\t\tmatches[param] = url.slice(i).map(decodeURIComponent).join('/');\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\telse if (route[i]!==url[i]) {\n\t\t\tret = false;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (opts.default!==true && ret===false) return false;\n\treturn matches;\n}\n\nexport function pathRankSort(a, b) {\n\treturn (\n\t\t(a.rank < b.rank) ? 1 :\n\t\t\t(a.rank > b.rank) ? -1 :\n\t\t\t\t(a.index - b.index)\n\t);\n}\n\n// filter out VNodes without attributes (which are unrankeable), and add `index`/`rank` properties to be used in sorting.\nexport function prepareVNodeForRanking(vnode, index) {\n\tvnode.index = index;\n\tvnode.rank = rankChild(vnode);\n\treturn vnode.props;\n}\n\nexport function segmentize(url) {\n\treturn url.replace(/(^\\/+|\\/+$)/g, '').split('/');\n}\n\nexport function rankSegment(segment) {\n\treturn segment.charAt(0)==':' ? (1 + '*+?'.indexOf(segment.charAt(segment.length-1))) || 4 : 5;\n}\n\nexport function rank(path) {\n\treturn segmentize(path).map(rankSegment).join('');\n}\n\nfunction rankChild(vnode) {\n\treturn vnode.props.default ? 0 : rank(vnode.props.path);\n}\n","import Node from './node'\n\n/**\n * Represents a CSS declaration.\n *\n * @extends Node\n *\n * @example\n * const root = postcss.parse('a { color: black }')\n * const decl = root.first.first\n * decl.type       //=> 'decl'\n * decl.toString() //=> ' color: black'\n */\nclass Declaration extends Node {\n  constructor (defaults) {\n    super(defaults)\n    this.type = 'decl'\n  }\n\n  /**\n   * @memberof Declaration#\n   * @member {string} prop The declaration’s property name.\n   *\n   * @example\n   * const root = postcss.parse('a { color: black }')\n   * const decl = root.first.first\n   * decl.prop //=> 'color'\n   */\n\n  /**\n   * @memberof Declaration#\n   * @member {string} value The declaration’s value.\n   *\n   * @example\n   * const root = postcss.parse('a { color: black }')\n   * const decl = root.first.first\n   * decl.value //=> 'black'\n   */\n\n  /**\n   * @memberof Declaration#\n   * @member {boolean} important `true` if the declaration\n   *                             has an !important annotation.\n   *\n   * @example\n   * const root = postcss.parse('a { color: black !important; color: red }')\n   * root.first.first.important //=> true\n   * root.first.last.important  //=> undefined\n   */\n\n  /**\n   * @memberof Declaration#\n   * @member {object} raws Information to generate byte-to-byte equal\n   *                       node string as it was in the origin input.\n   *\n   * Every parser saves its own properties,\n   * but the default CSS parser uses:\n   *\n   * * `before`: the space symbols before the node. It also stores `*`\n   *   and `_` symbols before the declaration (IE hack).\n   * * `between`: the symbols between the property and value\n   *   for declarations.\n   * * `important`: the content of the important statement,\n   *   if it is not just `!important`.\n   *\n   * PostCSS cleans declaration from comments and extra spaces,\n   * but it stores origin content in raws properties.\n   * As such, if you don’t change a declaration’s value,\n   * PostCSS will use the raw value with comments.\n   *\n   * @example\n   * const root = postcss.parse('a {\\n  color:black\\n}')\n   * root.first.first.raws //=> { before: '\\n  ', between: ':' }\n   */\n}\n\nexport default Declaration\n","import MapGenerator from './map-generator'\nimport stringify from './stringify'\nimport warnOnce from './warn-once'\nimport Result from './result'\nimport parse from './parse'\n\nfunction isPromise (obj) {\n  return typeof obj === 'object' && typeof obj.then === 'function'\n}\n\n/**\n * A Promise proxy for the result of PostCSS transformations.\n *\n * A `LazyResult` instance is returned by {@link Processor#process}.\n *\n * @example\n * const lazy = postcss([autoprefixer]).process(css)\n */\nclass LazyResult {\n  constructor (processor, css, opts) {\n    this.stringified = false\n    this.processed = false\n\n    let root\n    if (typeof css === 'object' && css !== null && css.type === 'root') {\n      root = css\n    } else if (css instanceof LazyResult || css instanceof Result) {\n      root = css.root\n      if (css.map) {\n        if (typeof opts.map === 'undefined') opts.map = { }\n        if (!opts.map.inline) opts.map.inline = false\n        opts.map.prev = css.map\n      }\n    } else {\n      let parser = parse\n      if (opts.syntax) parser = opts.syntax.parse\n      if (opts.parser) parser = opts.parser\n      if (parser.parse) parser = parser.parse\n\n      try {\n        root = parser(css, opts)\n      } catch (error) {\n        this.error = error\n      }\n    }\n\n    this.result = new Result(processor, root, opts)\n  }\n\n  /**\n   * Returns a {@link Processor} instance, which will be used\n   * for CSS transformations.\n   *\n   * @type {Processor}\n   */\n  get processor () {\n    return this.result.processor\n  }\n\n  /**\n   * Options from the {@link Processor#process} call.\n   *\n   * @type {processOptions}\n   */\n  get opts () {\n    return this.result.opts\n  }\n\n  /**\n   * Processes input CSS through synchronous plugins, converts `Root`\n   * to a CSS string and returns {@link Result#css}.\n   *\n   * This property will only work with synchronous plugins.\n   * If the processor contains any asynchronous plugins\n   * it will throw an error. This is why this method is only\n   * for debug purpose, you should always use {@link LazyResult#then}.\n   *\n   * @type {string}\n   * @see Result#css\n   */\n  get css () {\n    return this.stringify().css\n  }\n\n  /**\n   * An alias for the `css` property. Use it with syntaxes\n   * that generate non-CSS output.\n   *\n   * This property will only work with synchronous plugins.\n   * If the processor contains any asynchronous plugins\n   * it will throw an error. This is why this method is only\n   * for debug purpose, you should always use {@link LazyResult#then}.\n   *\n   * @type {string}\n   * @see Result#content\n   */\n  get content () {\n    return this.stringify().content\n  }\n\n  /**\n   * Processes input CSS through synchronous plugins\n   * and returns {@link Result#map}.\n   *\n   * This property will only work with synchronous plugins.\n   * If the processor contains any asynchronous plugins\n   * it will throw an error. This is why this method is only\n   * for debug purpose, you should always use {@link LazyResult#then}.\n   *\n   * @type {SourceMapGenerator}\n   * @see Result#map\n   */\n  get map () {\n    return this.stringify().map\n  }\n\n  /**\n   * Processes input CSS through synchronous plugins\n   * and returns {@link Result#root}.\n   *\n   * This property will only work with synchronous plugins. If the processor\n   * contains any asynchronous plugins it will throw an error.\n   *\n   * This is why this method is only for debug purpose,\n   * you should always use {@link LazyResult#then}.\n   *\n   * @type {Root}\n   * @see Result#root\n   */\n  get root () {\n    return this.sync().root\n  }\n\n  /**\n   * Processes input CSS through synchronous plugins\n   * and returns {@link Result#messages}.\n   *\n   * This property will only work with synchronous plugins. If the processor\n   * contains any asynchronous plugins it will throw an error.\n   *\n   * This is why this method is only for debug purpose,\n   * you should always use {@link LazyResult#then}.\n   *\n   * @type {Message[]}\n   * @see Result#messages\n   */\n  get messages () {\n    return this.sync().messages\n  }\n\n  /**\n   * Processes input CSS through synchronous plugins\n   * and calls {@link Result#warnings()}.\n   *\n   * @return {Warning[]} Warnings from plugins.\n   */\n  warnings () {\n    return this.sync().warnings()\n  }\n\n  /**\n   * Alias for the {@link LazyResult#css} property.\n   *\n   * @example\n   * lazy + '' === lazy.css\n   *\n   * @return {string} Output CSS.\n   */\n  toString () {\n    return this.css\n  }\n\n  /**\n   * Processes input CSS through synchronous and asynchronous plugins\n   * and calls `onFulfilled` with a Result instance. If a plugin throws\n   * an error, the `onRejected` callback will be executed.\n   *\n   * It implements standard Promise API.\n   *\n   * @param {onFulfilled} onFulfilled Callback will be executed\n   *                                  when all plugins will finish work.\n   * @param {onRejected}  onRejected  Callback will be executed on any error.\n   *\n   * @return {Promise} Promise API to make queue.\n   *\n   * @example\n   * postcss([autoprefixer]).process(css, { from: cssPath }).then(result => {\n   *   console.log(result.css)\n   * })\n   */\n  then (onFulfilled, onRejected) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!('from' in this.opts)) {\n        warnOnce(\n          'Without `from` option PostCSS could generate wrong source map ' +\n          'and will not find Browserslist config. Set it to CSS file path ' +\n          'or to `undefined` to prevent this warning.'\n        )\n      }\n    }\n    return this.async().then(onFulfilled, onRejected)\n  }\n\n  /**\n   * Processes input CSS through synchronous and asynchronous plugins\n   * and calls onRejected for each error thrown in any plugin.\n   *\n   * It implements standard Promise API.\n   *\n   * @param {onRejected} onRejected Callback will be executed on any error.\n   *\n   * @return {Promise} Promise API to make queue.\n   *\n   * @example\n   * postcss([autoprefixer]).process(css).then(result => {\n   *   console.log(result.css)\n   * }).catch(error => {\n   *   console.error(error)\n   * })\n   */\n  catch (onRejected) {\n    return this.async().catch(onRejected)\n  }\n  /**\n   * Processes input CSS through synchronous and asynchronous plugins\n   * and calls onFinally on any error or when all plugins will finish work.\n   *\n   * It implements standard Promise API.\n   *\n   * @param {onFinally} onFinally Callback will be executed on any error or\n   *                              when all plugins will finish work.\n   *\n   * @return {Promise} Promise API to make queue.\n   *\n   * @example\n   * postcss([autoprefixer]).process(css).finally(() => {\n   *   console.log('processing ended')\n   * })\n   */\n  finally (onFinally) {\n    return this.async().then(onFinally, onFinally)\n  }\n\n  handleError (error, plugin) {\n    try {\n      this.error = error\n      if (error.name === 'CssSyntaxError' && !error.plugin) {\n        error.plugin = plugin.postcssPlugin\n        error.setMessage()\n      } else if (plugin.postcssVersion) {\n        if (process.env.NODE_ENV !== 'production') {\n          let pluginName = plugin.postcssPlugin\n          let pluginVer = plugin.postcssVersion\n          let runtimeVer = this.result.processor.version\n          let a = pluginVer.split('.')\n          let b = runtimeVer.split('.')\n\n          if (a[0] !== b[0] || parseInt(a[1]) > parseInt(b[1])) {\n            console.error(\n              'Unknown error from PostCSS plugin. Your current PostCSS ' +\n              'version is ' + runtimeVer + ', but ' + pluginName + ' uses ' +\n              pluginVer + '. Perhaps this is the source of the error below.'\n            )\n          }\n        }\n      }\n    } catch (err) {\n      if (console && console.error) console.error(err)\n    }\n  }\n\n  asyncTick (resolve, reject) {\n    if (this.plugin >= this.processor.plugins.length) {\n      this.processed = true\n      return resolve()\n    }\n\n    try {\n      let plugin = this.processor.plugins[this.plugin]\n      let promise = this.run(plugin)\n      this.plugin += 1\n\n      if (isPromise(promise)) {\n        promise.then(() => {\n          this.asyncTick(resolve, reject)\n        }).catch(error => {\n          this.handleError(error, plugin)\n          this.processed = true\n          reject(error)\n        })\n      } else {\n        this.asyncTick(resolve, reject)\n      }\n    } catch (error) {\n      this.processed = true\n      reject(error)\n    }\n  }\n\n  async () {\n    if (this.processed) {\n      return new Promise((resolve, reject) => {\n        if (this.error) {\n          reject(this.error)\n        } else {\n          resolve(this.stringify())\n        }\n      })\n    }\n    if (this.processing) {\n      return this.processing\n    }\n\n    this.processing = new Promise((resolve, reject) => {\n      if (this.error) return reject(this.error)\n      this.plugin = 0\n      this.asyncTick(resolve, reject)\n    }).then(() => {\n      this.processed = true\n      return this.stringify()\n    })\n\n    return this.processing\n  }\n\n  sync () {\n    if (this.processed) return this.result\n    this.processed = true\n\n    if (this.processing) {\n      throw new Error(\n        'Use process(css).then(cb) to work with async plugins')\n    }\n\n    if (this.error) throw this.error\n\n    for (let plugin of this.result.processor.plugins) {\n      let promise = this.run(plugin)\n      if (isPromise(promise)) {\n        throw new Error(\n          'Use process(css).then(cb) to work with async plugins')\n      }\n    }\n\n    return this.result\n  }\n\n  run (plugin) {\n    this.result.lastPlugin = plugin\n\n    try {\n      return plugin(this.result.root, this.result)\n    } catch (error) {\n      this.handleError(error, plugin)\n      throw error\n    }\n  }\n\n  stringify () {\n    if (this.stringified) return this.result\n    this.stringified = true\n\n    this.sync()\n\n    let opts = this.result.opts\n    let str = stringify\n    if (opts.syntax) str = opts.syntax.stringify\n    if (opts.stringifier) str = opts.stringifier\n    if (str.stringify) str = str.stringify\n\n    let map = new MapGenerator(str, this.result.root, this.result.opts)\n    let data = map.generate()\n    this.result.css = data[0]\n    this.result.map = data[1]\n\n    return this.result\n  }\n}\n\nexport default LazyResult\n\n/**\n * @callback onFulfilled\n * @param {Result} result\n */\n\n/**\n * @callback onRejected\n * @param {Error} error\n */\n","'use strict';\nvar ansiRegex = require('ansi-regex')();\n\nmodule.exports = function (str) {\n\treturn typeof str === 'string' ? str.replace(ansiRegex, '') : str;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n// It turns out that some (most?) JavaScript engines don't self-host\n// `Array.prototype.sort`. This makes sense because C++ will likely remain\n// faster than JS when doing raw CPU-intensive sorting. However, when using a\n// custom comparator function, calling back and forth between the VM's C++ and\n// JIT'd JS is rather slow *and* loses JIT type information, resulting in\n// worse generated code for the comparator function than would be optimal. In\n// fact, when sorting with a comparator, these costs outweigh the benefits of\n// sorting in C++. By using our own JS-implemented Quick Sort (below), we get\n// a ~3500ms mean speed-up in `bench/bench.html`.\n\n/**\n * Swap the elements indexed by `x` and `y` in the array `ary`.\n *\n * @param {Array} ary\n *        The array.\n * @param {Number} x\n *        The index of the first item.\n * @param {Number} y\n *        The index of the second item.\n */\nfunction swap(ary, x, y) {\n  var temp = ary[x];\n  ary[x] = ary[y];\n  ary[y] = temp;\n}\n\n/**\n * Returns a random integer within the range `low .. high` inclusive.\n *\n * @param {Number} low\n *        The lower bound on the range.\n * @param {Number} high\n *        The upper bound on the range.\n */\nfunction randomIntInRange(low, high) {\n  return Math.round(low + (Math.random() * (high - low)));\n}\n\n/**\n * The Quick Sort algorithm.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n * @param {Number} p\n *        Start index of the array\n * @param {Number} r\n *        End index of the array\n */\nfunction doQuickSort(ary, comparator, p, r) {\n  // If our lower bound is less than our upper bound, we (1) partition the\n  // array into two pieces and (2) recurse on each half. If it is not, this is\n  // the empty array and our base case.\n\n  if (p < r) {\n    // (1) Partitioning.\n    //\n    // The partitioning chooses a pivot between `p` and `r` and moves all\n    // elements that are less than or equal to the pivot to the before it, and\n    // all the elements that are greater than it after it. The effect is that\n    // once partition is done, the pivot is in the exact place it will be when\n    // the array is put in sorted order, and it will not need to be moved\n    // again. This runs in O(n) time.\n\n    // Always choose a random pivot so that an input array which is reverse\n    // sorted does not cause O(n^2) running time.\n    var pivotIndex = randomIntInRange(p, r);\n    var i = p - 1;\n\n    swap(ary, pivotIndex, r);\n    var pivot = ary[r];\n\n    // Immediately after `j` is incremented in this loop, the following hold\n    // true:\n    //\n    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.\n    //\n    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.\n    for (var j = p; j < r; j++) {\n      if (comparator(ary[j], pivot) <= 0) {\n        i += 1;\n        swap(ary, i, j);\n      }\n    }\n\n    swap(ary, i + 1, j);\n    var q = i + 1;\n\n    // (2) Recurse on each half.\n\n    doQuickSort(ary, comparator, p, q - 1);\n    doQuickSort(ary, comparator, q + 1, r);\n  }\n}\n\n/**\n * Sort the given array in-place with the given comparator function.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n */\nexports.quickSort = function (ary, comparator) {\n  doQuickSort(ary, comparator, 0, ary.length - 1);\n};\n","import Warning from './warning'\n\n/**\n * Provides the result of the PostCSS transformations.\n *\n * A Result instance is returned by {@link LazyResult#then}\n * or {@link Root#toResult} methods.\n *\n * @example\n * postcss([autoprefixer]).process(css).then(result => {\n *  console.log(result.css)\n * })\n *\n * @example\n * const result2 = postcss.parse(css).toResult()\n */\nclass Result {\n  /**\n   * @param {Processor} processor Processor used for this transformation.\n   * @param {Root}      root      Root node after all transformations.\n   * @param {processOptions} opts Options from the {@link Processor#process}\n   *                              or {@link Root#toResult}.\n   */\n  constructor (processor, root, opts) {\n    /**\n     * The Processor instance used for this transformation.\n     *\n     * @type {Processor}\n     *\n     * @example\n     * for (const plugin of result.processor.plugins) {\n     *   if (plugin.postcssPlugin === 'postcss-bad') {\n     *     throw 'postcss-good is incompatible with postcss-bad'\n     *   }\n     * })\n     */\n    this.processor = processor\n    /**\n     * Contains messages from plugins (e.g., warnings or custom messages).\n     * Each message should have type and plugin properties.\n     *\n     * @type {Message[]}\n     *\n     * @example\n     * postcss.plugin('postcss-min-browser', () => {\n     *   return (root, result) => {\n     *     const browsers = detectMinBrowsersByCanIUse(root)\n     *     result.messages.push({\n     *       type: 'min-browser',\n     *       plugin: 'postcss-min-browser',\n     *       browsers\n     *     })\n     *   }\n     * })\n     */\n    this.messages = []\n    /**\n     * Root node after all transformations.\n     *\n     * @type {Root}\n     *\n     * @example\n     * root.toResult().root === root\n     */\n    this.root = root\n    /**\n     * Options from the {@link Processor#process} or {@link Root#toResult} call\n     * that produced this Result instance.\n     *\n     * @type {processOptions}\n     *\n     * @example\n     * root.toResult(opts).opts === opts\n     */\n    this.opts = opts\n    /**\n     * A CSS string representing of {@link Result#root}.\n     *\n     * @type {string}\n     *\n     * @example\n     * postcss.parse('a{}').toResult().css //=> \"a{}\"\n     */\n    this.css = undefined\n    /**\n     * An instance of `SourceMapGenerator` class from the `source-map` library,\n     * representing changes to the {@link Result#root} instance.\n     *\n     * @type {SourceMapGenerator}\n     *\n     * @example\n     * result.map.toJSON() //=> { version: 3, file: 'a.css', … }\n     *\n     * @example\n     * if (result.map) {\n     *   fs.writeFileSync(result.opts.to + '.map', result.map.toString())\n     * }\n     */\n    this.map = undefined\n  }\n\n  /**\n   * Returns for @{link Result#css} content.\n   *\n   * @example\n   * result + '' === result.css\n   *\n   * @return {string} String representing of {@link Result#root}.\n   */\n  toString () {\n    return this.css\n  }\n\n  /**\n   * Creates an instance of {@link Warning} and adds it\n   * to {@link Result#messages}.\n   *\n   * @param {string} text        Warning message.\n   * @param {Object} [opts]      Warning options.\n   * @param {Node}   opts.node   CSS node that caused the warning.\n   * @param {string} opts.word   Word in CSS source that caused the warning.\n   * @param {number} opts.index  Index in CSS node string that caused\n   *                             the warning.\n   * @param {string} opts.plugin Name of the plugin that created\n   *                             this warning. {@link Result#warn} fills\n   *                             this property automatically.\n   *\n   * @return {Warning} Created warning.\n   */\n  warn (text, opts = { }) {\n    if (!opts.plugin) {\n      if (this.lastPlugin && this.lastPlugin.postcssPlugin) {\n        opts.plugin = this.lastPlugin.postcssPlugin\n      }\n    }\n\n    let warning = new Warning(text, opts)\n    this.messages.push(warning)\n\n    return warning\n  }\n\n  /**\n     * Returns warnings from plugins. Filters {@link Warning} instances\n     * from {@link Result#messages}.\n     *\n     * @example\n     * result.warnings().forEach(warn => {\n     *   console.warn(warn.toString())\n     * })\n     *\n     * @return {Warning[]} Warnings from plugins.\n     */\n  warnings () {\n    return this.messages.filter(i => i.type === 'warning')\n  }\n\n  /**\n   * An alias for the {@link Result#css} property.\n   * Use it with syntaxes that generate non-CSS output.\n   *\n   * @type {string}\n   *\n   * @example\n   * result.css === result.content\n   */\n  get content () {\n    return this.css\n  }\n}\n\nexport default Result\n\n/**\n * @typedef  {object} Message\n * @property {string} type   Message type.\n * @property {string} plugin Source PostCSS plugin name.\n */\n","import Container from './container'\n\n/**\n * Represents a CSS file and contains all its parsed nodes.\n *\n * @extends Container\n *\n * @example\n * const root = postcss.parse('a{color:black} b{z-index:2}')\n * root.type         //=> 'root'\n * root.nodes.length //=> 2\n */\nclass Root extends Container {\n  constructor (defaults) {\n    super(defaults)\n    this.type = 'root'\n    if (!this.nodes) this.nodes = []\n  }\n\n  removeChild (child, ignore) {\n    let index = this.index(child)\n\n    if (!ignore && index === 0 && this.nodes.length > 1) {\n      this.nodes[1].raws.before = this.nodes[index].raws.before\n    }\n\n    return super.removeChild(child)\n  }\n\n  normalize (child, sample, type) {\n    let nodes = super.normalize(child)\n\n    if (sample) {\n      if (type === 'prepend') {\n        if (this.nodes.length > 1) {\n          sample.raws.before = this.nodes[1].raws.before\n        } else {\n          delete sample.raws.before\n        }\n      } else if (this.first !== sample) {\n        for (let node of nodes) {\n          node.raws.before = sample.raws.before\n        }\n      }\n    }\n\n    return nodes\n  }\n\n  /**\n   * Returns a {@link Result} instance representing the root’s CSS.\n   *\n   * @param {processOptions} [opts] Options with only `to` and `map` keys.\n   *\n   * @return {Result} Result with current root’s CSS.\n   *\n   * @example\n   * const root1 = postcss.parse(css1, { from: 'a.css' })\n   * const root2 = postcss.parse(css2, { from: 'b.css' })\n   * root1.append(root2)\n   * const result = root1.toResult({ to: 'all.css', map: true })\n   */\n  toResult (opts = { }) {\n    let LazyResult = require('./lazy-result')\n    let Processor = require('./processor')\n\n    let lazy = new LazyResult(new Processor(), this, opts)\n    return lazy.stringify()\n  }\n\n  /**\n   * @memberof Root#\n   * @member {object} raws Information to generate byte-to-byte equal\n   *                       node string as it was in the origin input.\n   *\n   * Every parser saves its own properties,\n   * but the default CSS parser uses:\n   *\n   * * `after`: the space symbols after the last child to the end of file.\n   * * `semicolon`: is the last child has an (optional) semicolon.\n   *\n   * @example\n   * postcss.parse('a {}\\n').raws //=> { after: '\\n' }\n   * postcss.parse('a {}').raws   //=> { after: '' }\n   */\n}\n\nexport default Root\n","/*\n * Copyright 2009-2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE.txt or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nexports.SourceMapGenerator = require('./lib/source-map-generator').SourceMapGenerator;\nexports.SourceMapConsumer = require('./lib/source-map-consumer').SourceMapConsumer;\nexports.SourceNode = require('./lib/source-node').SourceNode;\n","'use strict';\nvar argv = process.argv;\n\nvar terminator = argv.indexOf('--');\nvar hasFlag = function (flag) {\n\tflag = '--' + flag;\n\tvar pos = argv.indexOf(flag);\n\treturn pos !== -1 && (terminator !== -1 ? pos < terminator : true);\n};\n\nmodule.exports = (function () {\n\tif ('FORCE_COLOR' in process.env) {\n\t\treturn true;\n\t}\n\n\tif (hasFlag('no-color') ||\n\t\thasFlag('no-colors') ||\n\t\thasFlag('color=false')) {\n\t\treturn false;\n\t}\n\n\tif (hasFlag('color') ||\n\t\thasFlag('colors') ||\n\t\thasFlag('color=true') ||\n\t\thasFlag('color=always')) {\n\t\treturn true;\n\t}\n\n\tif (process.stdout && !process.stdout.isTTY) {\n\t\treturn false;\n\t}\n\n\tif (process.platform === 'win32') {\n\t\treturn true;\n\t}\n\n\tif ('COLORTERM' in process.env) {\n\t\treturn true;\n\t}\n\n\tif (process.env.TERM === 'dumb') {\n\t\treturn false;\n\t}\n\n\tif (/^screen|^xterm|^vt100|color|ansi|cygwin|linux/i.test(process.env.TERM)) {\n\t\treturn true;\n\t}\n\n\treturn false;\n})();\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar base64VLQ = require('./base64-vlq');\nvar util = require('./util');\nvar ArraySet = require('./array-set').ArraySet;\nvar MappingList = require('./mapping-list').MappingList;\n\n/**\n * An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.\n */\nfunction SourceMapGenerator(aArgs) {\n  if (!aArgs) {\n    aArgs = {};\n  }\n  this._file = util.getArg(aArgs, 'file', null);\n  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n  this._mappings = new MappingList();\n  this._sourcesContents = null;\n}\n\nSourceMapGenerator.prototype._version = 3;\n\n/**\n * Creates a new SourceMapGenerator based on a SourceMapConsumer\n *\n * @param aSourceMapConsumer The SourceMap.\n */\nSourceMapGenerator.fromSourceMap =\n  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n    var sourceRoot = aSourceMapConsumer.sourceRoot;\n    var generator = new SourceMapGenerator({\n      file: aSourceMapConsumer.file,\n      sourceRoot: sourceRoot\n    });\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      var newMapping = {\n        generated: {\n          line: mapping.generatedLine,\n          column: mapping.generatedColumn\n        }\n      };\n\n      if (mapping.source != null) {\n        newMapping.source = mapping.source;\n        if (sourceRoot != null) {\n          newMapping.source = util.relative(sourceRoot, newMapping.source);\n        }\n\n        newMapping.original = {\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        };\n\n        if (mapping.name != null) {\n          newMapping.name = mapping.name;\n        }\n      }\n\n      generator.addMapping(newMapping);\n    });\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var sourceRelative = sourceFile;\n      if (sourceRoot !== null) {\n        sourceRelative = util.relative(sourceRoot, sourceFile);\n      }\n\n      if (!generator._sources.has(sourceRelative)) {\n        generator._sources.add(sourceRelative);\n      }\n\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        generator.setSourceContent(sourceFile, content);\n      }\n    });\n    return generator;\n  };\n\n/**\n * Add a single mapping from original source line and column to the generated\n * source's line and column for this source map being created. The mapping\n * object should have the following properties:\n *\n *   - generated: An object with the generated line and column positions.\n *   - original: An object with the original line and column positions.\n *   - source: The original source file (relative to the sourceRoot).\n *   - name: An optional original token name for this mapping.\n */\nSourceMapGenerator.prototype.addMapping =\n  function SourceMapGenerator_addMapping(aArgs) {\n    var generated = util.getArg(aArgs, 'generated');\n    var original = util.getArg(aArgs, 'original', null);\n    var source = util.getArg(aArgs, 'source', null);\n    var name = util.getArg(aArgs, 'name', null);\n\n    if (!this._skipValidation) {\n      this._validateMapping(generated, original, source, name);\n    }\n\n    if (source != null) {\n      source = String(source);\n      if (!this._sources.has(source)) {\n        this._sources.add(source);\n      }\n    }\n\n    if (name != null) {\n      name = String(name);\n      if (!this._names.has(name)) {\n        this._names.add(name);\n      }\n    }\n\n    this._mappings.add({\n      generatedLine: generated.line,\n      generatedColumn: generated.column,\n      originalLine: original != null && original.line,\n      originalColumn: original != null && original.column,\n      source: source,\n      name: name\n    });\n  };\n\n/**\n * Set the source content for a source file.\n */\nSourceMapGenerator.prototype.setSourceContent =\n  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n    var source = aSourceFile;\n    if (this._sourceRoot != null) {\n      source = util.relative(this._sourceRoot, source);\n    }\n\n    if (aSourceContent != null) {\n      // Add the source content to the _sourcesContents map.\n      // Create a new _sourcesContents map if the property is null.\n      if (!this._sourcesContents) {\n        this._sourcesContents = Object.create(null);\n      }\n      this._sourcesContents[util.toSetString(source)] = aSourceContent;\n    } else if (this._sourcesContents) {\n      // Remove the source file from the _sourcesContents map.\n      // If the _sourcesContents map is empty, set the property to null.\n      delete this._sourcesContents[util.toSetString(source)];\n      if (Object.keys(this._sourcesContents).length === 0) {\n        this._sourcesContents = null;\n      }\n    }\n  };\n\n/**\n * Applies the mappings of a sub-source-map for a specific source file to the\n * source map being generated. Each mapping to the supplied source file is\n * rewritten using the supplied source map. Note: The resolution for the\n * resulting mappings is the minimium of this map and the supplied map.\n *\n * @param aSourceMapConsumer The source map to be applied.\n * @param aSourceFile Optional. The filename of the source file.\n *        If omitted, SourceMapConsumer's file property will be used.\n * @param aSourceMapPath Optional. The dirname of the path to the source map\n *        to be applied. If relative, it is relative to the SourceMapConsumer.\n *        This parameter is needed when the two source maps aren't in the same\n *        directory, and the source map to be applied contains relative source\n *        paths. If so, those relative source paths need to be rewritten\n *        relative to the SourceMapGenerator.\n */\nSourceMapGenerator.prototype.applySourceMap =\n  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n    var sourceFile = aSourceFile;\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\n    if (aSourceFile == null) {\n      if (aSourceMapConsumer.file == null) {\n        throw new Error(\n          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\n          'or the source map\\'s \"file\" property. Both were omitted.'\n        );\n      }\n      sourceFile = aSourceMapConsumer.file;\n    }\n    var sourceRoot = this._sourceRoot;\n    // Make \"sourceFile\" relative if an absolute Url is passed.\n    if (sourceRoot != null) {\n      sourceFile = util.relative(sourceRoot, sourceFile);\n    }\n    // Applying the SourceMap can add and remove items from the sources and\n    // the names array.\n    var newSources = new ArraySet();\n    var newNames = new ArraySet();\n\n    // Find mappings for the \"sourceFile\"\n    this._mappings.unsortedForEach(function (mapping) {\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\n        // Check if it can be mapped by the source map, then update the mapping.\n        var original = aSourceMapConsumer.originalPositionFor({\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        });\n        if (original.source != null) {\n          // Copy mapping\n          mapping.source = original.source;\n          if (aSourceMapPath != null) {\n            mapping.source = util.join(aSourceMapPath, mapping.source)\n          }\n          if (sourceRoot != null) {\n            mapping.source = util.relative(sourceRoot, mapping.source);\n          }\n          mapping.originalLine = original.line;\n          mapping.originalColumn = original.column;\n          if (original.name != null) {\n            mapping.name = original.name;\n          }\n        }\n      }\n\n      var source = mapping.source;\n      if (source != null && !newSources.has(source)) {\n        newSources.add(source);\n      }\n\n      var name = mapping.name;\n      if (name != null && !newNames.has(name)) {\n        newNames.add(name);\n      }\n\n    }, this);\n    this._sources = newSources;\n    this._names = newNames;\n\n    // Copy sourcesContents of applied map.\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aSourceMapPath != null) {\n          sourceFile = util.join(aSourceMapPath, sourceFile);\n        }\n        if (sourceRoot != null) {\n          sourceFile = util.relative(sourceRoot, sourceFile);\n        }\n        this.setSourceContent(sourceFile, content);\n      }\n    }, this);\n  };\n\n/**\n * A mapping can have one of the three levels of data:\n *\n *   1. Just the generated position.\n *   2. The Generated position, original position, and original source.\n *   3. Generated and original position, original source, as well as a name\n *      token.\n *\n * To maintain consistency, we validate that any new mapping being added falls\n * in to one of these categories.\n */\nSourceMapGenerator.prototype._validateMapping =\n  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n                                              aName) {\n    // When aOriginal is truthy but has empty values for .line and .column,\n    // it is most likely a programmer error. In this case we throw a very\n    // specific error message to try to guide them the right way.\n    // For example: https://github.com/Polymer/polymer-bundler/pull/519\n    if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {\n        throw new Error(\n            'original.line and original.column are not numbers -- you probably meant to omit ' +\n            'the original mapping entirely and only map the generated position. If so, pass ' +\n            'null for the original mapping instead of an object with empty or null values.'\n        );\n    }\n\n    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n        && aGenerated.line > 0 && aGenerated.column >= 0\n        && !aOriginal && !aSource && !aName) {\n      // Case 1.\n      return;\n    }\n    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n             && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n             && aGenerated.line > 0 && aGenerated.column >= 0\n             && aOriginal.line > 0 && aOriginal.column >= 0\n             && aSource) {\n      // Cases 2 and 3.\n      return;\n    }\n    else {\n      throw new Error('Invalid mapping: ' + JSON.stringify({\n        generated: aGenerated,\n        source: aSource,\n        original: aOriginal,\n        name: aName\n      }));\n    }\n  };\n\n/**\n * Serialize the accumulated mappings in to the stream of base 64 VLQs\n * specified by the source map format.\n */\nSourceMapGenerator.prototype._serializeMappings =\n  function SourceMapGenerator_serializeMappings() {\n    var previousGeneratedColumn = 0;\n    var previousGeneratedLine = 1;\n    var previousOriginalColumn = 0;\n    var previousOriginalLine = 0;\n    var previousName = 0;\n    var previousSource = 0;\n    var result = '';\n    var next;\n    var mapping;\n    var nameIdx;\n    var sourceIdx;\n\n    var mappings = this._mappings.toArray();\n    for (var i = 0, len = mappings.length; i < len; i++) {\n      mapping = mappings[i];\n      next = ''\n\n      if (mapping.generatedLine !== previousGeneratedLine) {\n        previousGeneratedColumn = 0;\n        while (mapping.generatedLine !== previousGeneratedLine) {\n          next += ';';\n          previousGeneratedLine++;\n        }\n      }\n      else {\n        if (i > 0) {\n          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n            continue;\n          }\n          next += ',';\n        }\n      }\n\n      next += base64VLQ.encode(mapping.generatedColumn\n                                 - previousGeneratedColumn);\n      previousGeneratedColumn = mapping.generatedColumn;\n\n      if (mapping.source != null) {\n        sourceIdx = this._sources.indexOf(mapping.source);\n        next += base64VLQ.encode(sourceIdx - previousSource);\n        previousSource = sourceIdx;\n\n        // lines are stored 0-based in SourceMap spec version 3\n        next += base64VLQ.encode(mapping.originalLine - 1\n                                   - previousOriginalLine);\n        previousOriginalLine = mapping.originalLine - 1;\n\n        next += base64VLQ.encode(mapping.originalColumn\n                                   - previousOriginalColumn);\n        previousOriginalColumn = mapping.originalColumn;\n\n        if (mapping.name != null) {\n          nameIdx = this._names.indexOf(mapping.name);\n          next += base64VLQ.encode(nameIdx - previousName);\n          previousName = nameIdx;\n        }\n      }\n\n      result += next;\n    }\n\n    return result;\n  };\n\nSourceMapGenerator.prototype._generateSourcesContent =\n  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n    return aSources.map(function (source) {\n      if (!this._sourcesContents) {\n        return null;\n      }\n      if (aSourceRoot != null) {\n        source = util.relative(aSourceRoot, source);\n      }\n      var key = util.toSetString(source);\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\n        ? this._sourcesContents[key]\n        : null;\n    }, this);\n  };\n\n/**\n * Externalize the source map.\n */\nSourceMapGenerator.prototype.toJSON =\n  function SourceMapGenerator_toJSON() {\n    var map = {\n      version: this._version,\n      sources: this._sources.toArray(),\n      names: this._names.toArray(),\n      mappings: this._serializeMappings()\n    };\n    if (this._file != null) {\n      map.file = this._file;\n    }\n    if (this._sourceRoot != null) {\n      map.sourceRoot = this._sourceRoot;\n    }\n    if (this._sourcesContents) {\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n    }\n\n    return map;\n  };\n\n/**\n * Render the source map being generated to a string.\n */\nSourceMapGenerator.prototype.toString =\n  function SourceMapGenerator_toString() {\n    return JSON.stringify(this.toJSON());\n  };\n\nexports.SourceMapGenerator = SourceMapGenerator;\n","module.exports = require(\"fs\");","/**\n * Contains helpers for working with vendor prefixes.\n *\n * @example\n * const vendor = postcss.vendor\n *\n * @namespace vendor\n */\nlet vendor = {\n\n  /**\n   * Returns the vendor prefix extracted from an input string.\n   *\n   * @param {string} prop String with or without vendor prefix.\n   *\n   * @return {string} vendor prefix or empty string\n   *\n   * @example\n   * postcss.vendor.prefix('-moz-tab-size') //=> '-moz-'\n   * postcss.vendor.prefix('tab-size')      //=> ''\n   */\n  prefix (prop) {\n    let match = prop.match(/^(-\\w+-)/)\n    if (match) {\n      return match[0]\n    }\n\n    return ''\n  },\n\n  /**\n     * Returns the input string stripped of its vendor prefix.\n     *\n     * @param {string} prop String with or without vendor prefix.\n     *\n     * @return {string} String name without vendor prefixes.\n     *\n     * @example\n     * postcss.vendor.unprefixed('-moz-tab-size') //=> 'tab-size'\n     */\n  unprefixed (prop) {\n    return prop.replace(/^-\\w+-/, '')\n  }\n\n}\n\nexport default vendor\n","import path from 'path'\n\nimport CssSyntaxError from './css-syntax-error'\nimport PreviousMap from './previous-map'\n\nlet sequence = 0\n\n/**\n * Represents the source CSS.\n *\n * @example\n * const root  = postcss.parse(css, { from: file })\n * const input = root.source.input\n */\nclass Input {\n  /**\n   * @param {string} css    Input CSS source.\n   * @param {object} [opts] {@link Processor#process} options.\n   */\n  constructor (css, opts = { }) {\n    if (\n      css === null ||\n      typeof css === 'undefined' ||\n      (typeof css === 'object' && !css.toString)\n    ) {\n      throw new Error(`PostCSS received ${ css } instead of CSS string`)\n    }\n\n    /**\n     * Input CSS source\n     *\n     * @type {string}\n     *\n     * @example\n     * const input = postcss.parse('a{}', { from: file }).input\n     * input.css //=> \"a{}\"\n     */\n    this.css = css.toString()\n\n    if (this.css[0] === '\\uFEFF' || this.css[0] === '\\uFFFE') {\n      this.hasBOM = true\n      this.css = this.css.slice(1)\n    } else {\n      this.hasBOM = false\n    }\n\n    if (opts.from) {\n      if (/^\\w+:\\/\\//.test(opts.from) || path.isAbsolute(opts.from)) {\n        /**\n         * The absolute path to the CSS source file defined\n         * with the `from` option.\n         *\n         * @type {string}\n         *\n         * @example\n         * const root = postcss.parse(css, { from: 'a.css' })\n         * root.source.input.file //=> '/home/ai/a.css'\n         */\n        this.file = opts.from\n      } else {\n        this.file = path.resolve(opts.from)\n      }\n    }\n\n    let map = new PreviousMap(this.css, opts)\n    if (map.text) {\n      /**\n       * The input source map passed from a compilation step before PostCSS\n       * (for example, from Sass compiler).\n       *\n       * @type {PreviousMap}\n       *\n       * @example\n       * root.source.input.map.consumer().sources //=> ['a.sass']\n       */\n      this.map = map\n      let file = map.consumer().file\n      if (!this.file && file) this.file = this.mapResolve(file)\n    }\n\n    if (!this.file) {\n      sequence += 1\n      /**\n       * The unique ID of the CSS source. It will be created if `from` option\n       * is not provided (because PostCSS does not know the file path).\n       *\n       * @type {string}\n       *\n       * @example\n       * const root = postcss.parse(css)\n       * root.source.input.file //=> undefined\n       * root.source.input.id   //=> \"<input css 1>\"\n       */\n      this.id = '<input css ' + sequence + '>'\n    }\n    if (this.map) this.map.file = this.from\n  }\n\n  error (message, line, column, opts = { }) {\n    let result\n    let origin = this.origin(line, column)\n    if (origin) {\n      result = new CssSyntaxError(\n        message, origin.line, origin.column,\n        origin.source, origin.file, opts.plugin\n      )\n    } else {\n      result = new CssSyntaxError(\n        message, line, column, this.css, this.file, opts.plugin)\n    }\n\n    result.input = { line, column, source: this.css }\n    if (this.file) result.input.file = this.file\n\n    return result\n  }\n\n  /**\n   * Reads the input source map and returns a symbol position\n   * in the input source (e.g., in a Sass file that was compiled\n   * to CSS before being passed to PostCSS).\n   *\n   * @param {number} line   Line in input CSS.\n   * @param {number} column Column in input CSS.\n   *\n   * @return {filePosition} Position in input source.\n   *\n   * @example\n   * root.source.input.origin(1, 1) //=> { file: 'a.css', line: 3, column: 1 }\n   */\n  origin (line, column) {\n    if (!this.map) return false\n    let consumer = this.map.consumer()\n\n    let from = consumer.originalPositionFor({ line, column })\n    if (!from.source) return false\n\n    let result = {\n      file: this.mapResolve(from.source),\n      line: from.line,\n      column: from.column\n    }\n\n    let source = consumer.sourceContentFor(from.source)\n    if (source) result.source = source\n\n    return result\n  }\n\n  mapResolve (file) {\n    if (/^\\w+:\\/\\//.test(file)) {\n      return file\n    }\n    return path.resolve(this.map.consumer().sourceRoot || '.', file)\n  }\n\n  /**\n   * The CSS source identifier. Contains {@link Input#file} if the user\n   * set the `from` option, or {@link Input#id} if they did not.\n   *\n   * @type {string}\n   *\n   * @example\n   * const root = postcss.parse(css, { from: 'a.css' })\n   * root.source.input.from //=> \"/home/ai/a.css\"\n   *\n   * const root = postcss.parse(css)\n   * root.source.input.from //=> \"<input css 1>\"\n   */\n  get from () {\n    return this.file || this.id\n  }\n}\n\nexport default Input\n\n/**\n * @typedef  {object} filePosition\n * @property {string} file   Path to file.\n * @property {number} line   Source line in file.\n * @property {number} column Source column in file.\n */\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.Link = exports.Match = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _preact = require('preact');\n\nvar _preactRouter = require('preact-router');\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Match = exports.Match = function (_Component) {\n\t_inherits(Match, _Component);\n\n\tfunction Match() {\n\t\tvar _temp, _this, _ret;\n\n\t\t_classCallCheck(this, Match);\n\n\t\tfor (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t\t\targs[_key] = arguments[_key];\n\t\t}\n\n\t\treturn _ret = (_temp = (_this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.update = function (url) {\n\t\t\t_this.nextUrl = url;\n\t\t\t_this.setState({});\n\t\t}, _temp), _possibleConstructorReturn(_this, _ret);\n\t}\n\n\tMatch.prototype.componentDidMount = function componentDidMount() {\n\t\t_preactRouter.subscribers.push(this.update);\n\t};\n\n\tMatch.prototype.componentWillUnmount = function componentWillUnmount() {\n\t\t_preactRouter.subscribers.splice(_preactRouter.subscribers.indexOf(this.update) >>> 0, 1);\n\t};\n\n\tMatch.prototype.render = function render(props) {\n\t\tvar url = this.nextUrl || (0, _preactRouter.getCurrentUrl)(),\n\t\t    path = url.replace(/\\?.+$/, '');\n\t\tthis.nextUrl = null;\n\t\treturn props.children({\n\t\t\turl: url,\n\t\t\tpath: path,\n\t\t\tmatches: (0, _preactRouter.exec)(path, props.path, {}) !== false\n\t\t});\n\t};\n\n\treturn Match;\n}(_preact.Component);\n\nvar Link = function Link(_ref) {\n\tvar activeClassName = _ref.activeClassName,\n\t    path = _ref.path,\n\t    props = _objectWithoutProperties(_ref, ['activeClassName', 'path']);\n\n\treturn (0, _preact.h)(\n\t\tMatch,\n\t\t{ path: path || props.href },\n\t\tfunction (_ref2) {\n\t\t\tvar matches = _ref2.matches;\n\t\t\treturn (0, _preact.h)(_preactRouter.Link, _extends({}, props, { 'class': [props.class || props.className, matches && activeClassName].filter(Boolean).join(' ') }));\n\t\t}\n\t);\n};\n\nexports.Link = Link;\nexports.default = Match;\n\nMatch.Link = Link;\n","module.exports = require(\"path\");","'use strict';\nvar ansiRegex = require('ansi-regex');\nvar re = new RegExp(ansiRegex().source); // remove the `g` flag\nmodule.exports = re.test.bind(re);\n","function normalizeUrl(url) {\n\treturn url.endsWith('/') ? url : url + '/';\n}\n\nfunction getPrerenderdata(value, props) {\n\tif (\n\t\tvalue &&\n\t\tvalue.url &&\n\t\tnormalizeUrl(props.url) === normalizeUrl(value.url)\n\t) {\n\t\treturn value;\n\t}\n\treturn null;\n}\n\nfunction checkProps(props) {\n\tif (!('url' in props)) {\n\t\tthrow new Error(\n\t\t\t'The prerender-data provider expects current URL in props. This is required to give the pre-render data to the correct instance only.'\n\t\t);\n\t}\n}\n\nexport { normalizeUrl, getPrerenderdata, checkProps };\n","import Container from './container'\n\n/**\n * Represents an at-rule.\n *\n * If it’s followed in the CSS by a {} block, this node will have\n * a nodes property representing its children.\n *\n * @extends Container\n *\n * @example\n * const root = postcss.parse('@charset \"UTF-8\"; @media print {}')\n *\n * const charset = root.first\n * charset.type  //=> 'atrule'\n * charset.nodes //=> undefined\n *\n * const media = root.last\n * media.nodes   //=> []\n */\nclass AtRule extends Container {\n  constructor (defaults) {\n    super(defaults)\n    this.type = 'atrule'\n  }\n\n  append (...children) {\n    if (!this.nodes) this.nodes = []\n    return super.append(...children)\n  }\n\n  prepend (...children) {\n    if (!this.nodes) this.nodes = []\n    return super.prepend(...children)\n  }\n\n  /**\n   * @memberof AtRule#\n   * @member {string} name The at-rule’s name immediately follows the `@`.\n   *\n   * @example\n   * const root  = postcss.parse('@media print {}')\n   * media.name //=> 'media'\n   * const media = root.first\n   */\n\n  /**\n   * @memberof AtRule#\n   * @member {string} params The at-rule’s parameters, the values\n   *                         that follow the at-rule’s name but precede\n   *                         any {} block.\n   *\n   * @example\n   * const root  = postcss.parse('@media print, screen {}')\n   * const media = root.first\n   * media.params //=> 'print, screen'\n   */\n\n  /**\n   * @memberof AtRule#\n   * @member {object} raws Information to generate byte-to-byte equal\n   *                        node string as it was in the origin input.\n   *\n   * Every parser saves its own properties,\n   * but the default CSS parser uses:\n   *\n   * * `before`: the space symbols before the node. It also stores `*`\n   *   and `_` symbols before the declaration (IE hack).\n   * * `after`: the space symbols after the last child of the node\n   *   to the end of the node.\n   * * `between`: the symbols between the property and value\n   *   for declarations, selector and `{` for rules, or last parameter\n   *   and `{` for at-rules.\n   * * `semicolon`: contains true if the last child has\n   *   an (optional) semicolon.\n   * * `afterName`: the space between the at-rule name and its parameters.\n   *\n   * PostCSS cleans at-rule parameters from comments and extra spaces,\n   * but it stores origin content in raws properties.\n   * As such, if you don’t change a declaration’s value,\n   * PostCSS will use the raw value with comments.\n   *\n   * @example\n   * const root = postcss.parse('  @media\\nprint {\\n}')\n   * root.first.first.raws //=> { before: '  ',\n   *                       //     between: ' ',\n   *                       //     afterName: '\\n',\n   *                       //     after: '\\n' }\n   */\n}\n\nexport default AtRule\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"w-1/4\":\"w-1/4__1vBO4\",\"w-full\":\"w-full__1u3Uc\",\"bottom\":\"bottom__3gKQC\",\"pl-8\":\"pl-8__17jDD\"};","import mozilla from 'source-map'\nimport path from 'path'\n\nclass MapGenerator {\n  constructor (stringify, root, opts) {\n    this.stringify = stringify\n    this.mapOpts = opts.map || { }\n    this.root = root\n    this.opts = opts\n  }\n\n  isMap () {\n    if (typeof this.opts.map !== 'undefined') {\n      return !!this.opts.map\n    }\n    return this.previous().length > 0\n  }\n\n  previous () {\n    if (!this.previousMaps) {\n      this.previousMaps = []\n      this.root.walk(node => {\n        if (node.source && node.source.input.map) {\n          let map = node.source.input.map\n          if (this.previousMaps.indexOf(map) === -1) {\n            this.previousMaps.push(map)\n          }\n        }\n      })\n    }\n\n    return this.previousMaps\n  }\n\n  isInline () {\n    if (typeof this.mapOpts.inline !== 'undefined') {\n      return this.mapOpts.inline\n    }\n\n    let annotation = this.mapOpts.annotation\n    if (typeof annotation !== 'undefined' && annotation !== true) {\n      return false\n    }\n\n    if (this.previous().length) {\n      return this.previous().some(i => i.inline)\n    }\n    return true\n  }\n\n  isSourcesContent () {\n    if (typeof this.mapOpts.sourcesContent !== 'undefined') {\n      return this.mapOpts.sourcesContent\n    }\n    if (this.previous().length) {\n      return this.previous().some(i => i.withContent())\n    }\n    return true\n  }\n\n  clearAnnotation () {\n    if (this.mapOpts.annotation === false) return\n\n    let node\n    for (let i = this.root.nodes.length - 1; i >= 0; i--) {\n      node = this.root.nodes[i]\n      if (node.type !== 'comment') continue\n      if (node.text.indexOf('# sourceMappingURL=') === 0) {\n        this.root.removeChild(i)\n      }\n    }\n  }\n\n  setSourcesContent () {\n    let already = { }\n    this.root.walk(node => {\n      if (node.source) {\n        let from = node.source.input.from\n        if (from && !already[from]) {\n          already[from] = true\n          let relative = this.relative(from)\n          this.map.setSourceContent(relative, node.source.input.css)\n        }\n      }\n    })\n  }\n\n  applyPrevMaps () {\n    for (let prev of this.previous()) {\n      let from = this.relative(prev.file)\n      let root = prev.root || path.dirname(prev.file)\n      let map\n\n      if (this.mapOpts.sourcesContent === false) {\n        map = new mozilla.SourceMapConsumer(prev.text)\n        if (map.sourcesContent) {\n          map.sourcesContent = map.sourcesContent.map(() => null)\n        }\n      } else {\n        map = prev.consumer()\n      }\n\n      this.map.applySourceMap(map, from, this.relative(root))\n    }\n  }\n\n  isAnnotation () {\n    if (this.isInline()) {\n      return true\n    }\n    if (typeof this.mapOpts.annotation !== 'undefined') {\n      return this.mapOpts.annotation\n    }\n    if (this.previous().length) {\n      return this.previous().some(i => i.annotation)\n    }\n    return true\n  }\n\n  toBase64 (str) {\n    if (Buffer) {\n      return Buffer.from(str).toString('base64')\n    }\n    return window.btoa(unescape(encodeURIComponent(str)))\n  }\n\n  addAnnotation () {\n    let content\n\n    if (this.isInline()) {\n      content = 'data:application/json;base64,' +\n                this.toBase64(this.map.toString())\n    } else if (typeof this.mapOpts.annotation === 'string') {\n      content = this.mapOpts.annotation\n    } else {\n      content = this.outputFile() + '.map'\n    }\n\n    let eol = '\\n'\n    if (this.css.indexOf('\\r\\n') !== -1) eol = '\\r\\n'\n\n    this.css += eol + '/*# sourceMappingURL=' + content + ' */'\n  }\n\n  outputFile () {\n    if (this.opts.to) {\n      return this.relative(this.opts.to)\n    }\n    if (this.opts.from) {\n      return this.relative(this.opts.from)\n    }\n    return 'to.css'\n  }\n\n  generateMap () {\n    this.generateString()\n    if (this.isSourcesContent()) this.setSourcesContent()\n    if (this.previous().length > 0) this.applyPrevMaps()\n    if (this.isAnnotation()) this.addAnnotation()\n\n    if (this.isInline()) {\n      return [this.css]\n    }\n    return [this.css, this.map]\n  }\n\n  relative (file) {\n    if (file.indexOf('<') === 0) return file\n    if (/^\\w+:\\/\\//.test(file)) return file\n\n    let from = this.opts.to ? path.dirname(this.opts.to) : '.'\n\n    if (typeof this.mapOpts.annotation === 'string') {\n      from = path.dirname(path.resolve(from, this.mapOpts.annotation))\n    }\n\n    file = path.relative(from, file)\n    if (path.sep === '\\\\') {\n      return file.replace(/\\\\/g, '/')\n    }\n    return file\n  }\n\n  sourcePath (node) {\n    if (this.mapOpts.from) {\n      return this.mapOpts.from\n    }\n    return this.relative(node.source.input.from)\n  }\n\n  generateString () {\n    this.css = ''\n    this.map = new mozilla.SourceMapGenerator({ file: this.outputFile() })\n\n    let line = 1\n    let column = 1\n\n    let lines, last\n    this.stringify(this.root, (str, node, type) => {\n      this.css += str\n\n      if (node && type !== 'end') {\n        if (node.source && node.source.start) {\n          this.map.addMapping({\n            source: this.sourcePath(node),\n            generated: { line, column: column - 1 },\n            original: {\n              line: node.source.start.line,\n              column: node.source.start.column - 1\n            }\n          })\n        } else {\n          this.map.addMapping({\n            source: '<no source>',\n            original: { line: 1, column: 0 },\n            generated: { line, column: column - 1 }\n          })\n        }\n      }\n\n      lines = str.match(/\\n/g)\n      if (lines) {\n        line += lines.length\n        last = str.lastIndexOf('\\n')\n        column = str.length - last\n      } else {\n        column += str.length\n      }\n\n      if (node && type !== 'start') {\n        let p = node.parent || { raws: { } }\n        if (node.type !== 'decl' || node !== p.last || p.raws.semicolon) {\n          if (node.source && node.source.end) {\n            this.map.addMapping({\n              source: this.sourcePath(node),\n              generated: { line, column: column - 2 },\n              original: {\n                line: node.source.end.line,\n                column: node.source.end.column - 1\n              }\n            })\n          } else {\n            this.map.addMapping({\n              source: '<no source>',\n              original: { line: 1, column: 0 },\n              generated: { line, column: column - 1 }\n            })\n          }\n        }\n      }\n    })\n  }\n\n  generate () {\n    this.clearAnnotation()\n\n    if (this.isMap()) {\n      return this.generateMap()\n    }\n\n    let result = ''\n    this.stringify(this.root, i => {\n      result += i\n    })\n    return [result]\n  }\n}\n\nexport default MapGenerator\n","const DEFAULT_RAW = {\n  colon: ': ',\n  indent: '    ',\n  beforeDecl: '\\n',\n  beforeRule: '\\n',\n  beforeOpen: ' ',\n  beforeClose: '\\n',\n  beforeComment: '\\n',\n  after: '\\n',\n  emptyBody: '',\n  commentLeft: ' ',\n  commentRight: ' ',\n  semicolon: false\n}\n\nfunction capitalize (str) {\n  return str[0].toUpperCase() + str.slice(1)\n}\n\nclass Stringifier {\n  constructor (builder) {\n    this.builder = builder\n  }\n\n  stringify (node, semicolon) {\n    this[node.type](node, semicolon)\n  }\n\n  root (node) {\n    this.body(node)\n    if (node.raws.after) this.builder(node.raws.after)\n  }\n\n  comment (node) {\n    let left = this.raw(node, 'left', 'commentLeft')\n    let right = this.raw(node, 'right', 'commentRight')\n    this.builder('/*' + left + node.text + right + '*/', node)\n  }\n\n  decl (node, semicolon) {\n    let between = this.raw(node, 'between', 'colon')\n    let string = node.prop + between + this.rawValue(node, 'value')\n\n    if (node.important) {\n      string += node.raws.important || ' !important'\n    }\n\n    if (semicolon) string += ';'\n    this.builder(string, node)\n  }\n\n  rule (node) {\n    this.block(node, this.rawValue(node, 'selector'))\n    if (node.raws.ownSemicolon) {\n      this.builder(node.raws.ownSemicolon, node, 'end')\n    }\n  }\n\n  atrule (node, semicolon) {\n    let name = '@' + node.name\n    let params = node.params ? this.rawValue(node, 'params') : ''\n\n    if (typeof node.raws.afterName !== 'undefined') {\n      name += node.raws.afterName\n    } else if (params) {\n      name += ' '\n    }\n\n    if (node.nodes) {\n      this.block(node, name + params)\n    } else {\n      let end = (node.raws.between || '') + (semicolon ? ';' : '')\n      this.builder(name + params + end, node)\n    }\n  }\n\n  body (node) {\n    let last = node.nodes.length - 1\n    while (last > 0) {\n      if (node.nodes[last].type !== 'comment') break\n      last -= 1\n    }\n\n    let semicolon = this.raw(node, 'semicolon')\n    for (let i = 0; i < node.nodes.length; i++) {\n      let child = node.nodes[i]\n      let before = this.raw(child, 'before')\n      if (before) this.builder(before)\n      this.stringify(child, last !== i || semicolon)\n    }\n  }\n\n  block (node, start) {\n    let between = this.raw(node, 'between', 'beforeOpen')\n    this.builder(start + between + '{', node, 'start')\n\n    let after\n    if (node.nodes && node.nodes.length) {\n      this.body(node)\n      after = this.raw(node, 'after')\n    } else {\n      after = this.raw(node, 'after', 'emptyBody')\n    }\n\n    if (after) this.builder(after)\n    this.builder('}', node, 'end')\n  }\n\n  raw (node, own, detect) {\n    let value\n    if (!detect) detect = own\n\n    // Already had\n    if (own) {\n      value = node.raws[own]\n      if (typeof value !== 'undefined') return value\n    }\n\n    let parent = node.parent\n\n    // Hack for first rule in CSS\n    if (detect === 'before') {\n      if (!parent || (parent.type === 'root' && parent.first === node)) {\n        return ''\n      }\n    }\n\n    // Floating child without parent\n    if (!parent) return DEFAULT_RAW[detect]\n\n    // Detect style by other nodes\n    let root = node.root()\n    if (!root.rawCache) root.rawCache = { }\n    if (typeof root.rawCache[detect] !== 'undefined') {\n      return root.rawCache[detect]\n    }\n\n    if (detect === 'before' || detect === 'after') {\n      return this.beforeAfter(node, detect)\n    } else {\n      let method = 'raw' + capitalize(detect)\n      if (this[method]) {\n        value = this[method](root, node)\n      } else {\n        root.walk(i => {\n          value = i.raws[own]\n          if (typeof value !== 'undefined') return false\n        })\n      }\n    }\n\n    if (typeof value === 'undefined') value = DEFAULT_RAW[detect]\n\n    root.rawCache[detect] = value\n    return value\n  }\n\n  rawSemicolon (root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && i.nodes.length && i.last.type === 'decl') {\n        value = i.raws.semicolon\n        if (typeof value !== 'undefined') return false\n      }\n    })\n    return value\n  }\n\n  rawEmptyBody (root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && i.nodes.length === 0) {\n        value = i.raws.after\n        if (typeof value !== 'undefined') return false\n      }\n    })\n    return value\n  }\n\n  rawIndent (root) {\n    if (root.raws.indent) return root.raws.indent\n    let value\n    root.walk(i => {\n      let p = i.parent\n      if (p && p !== root && p.parent && p.parent === root) {\n        if (typeof i.raws.before !== 'undefined') {\n          let parts = i.raws.before.split('\\n')\n          value = parts[parts.length - 1]\n          value = value.replace(/[^\\s]/g, '')\n          return false\n        }\n      }\n    })\n    return value\n  }\n\n  rawBeforeComment (root, node) {\n    let value\n    root.walkComments(i => {\n      if (typeof i.raws.before !== 'undefined') {\n        value = i.raws.before\n        if (value.indexOf('\\n') !== -1) {\n          value = value.replace(/[^\\n]+$/, '')\n        }\n        return false\n      }\n    })\n    if (typeof value === 'undefined') {\n      value = this.raw(node, null, 'beforeDecl')\n    } else if (value) {\n      value = value.replace(/[^\\s]/g, '')\n    }\n    return value\n  }\n\n  rawBeforeDecl (root, node) {\n    let value\n    root.walkDecls(i => {\n      if (typeof i.raws.before !== 'undefined') {\n        value = i.raws.before\n        if (value.indexOf('\\n') !== -1) {\n          value = value.replace(/[^\\n]+$/, '')\n        }\n        return false\n      }\n    })\n    if (typeof value === 'undefined') {\n      value = this.raw(node, null, 'beforeRule')\n    } else if (value) {\n      value = value.replace(/[^\\s]/g, '')\n    }\n    return value\n  }\n\n  rawBeforeRule (root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && (i.parent !== root || root.first !== i)) {\n        if (typeof i.raws.before !== 'undefined') {\n          value = i.raws.before\n          if (value.indexOf('\\n') !== -1) {\n            value = value.replace(/[^\\n]+$/, '')\n          }\n          return false\n        }\n      }\n    })\n    if (value) value = value.replace(/[^\\s]/g, '')\n    return value\n  }\n\n  rawBeforeClose (root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && i.nodes.length > 0) {\n        if (typeof i.raws.after !== 'undefined') {\n          value = i.raws.after\n          if (value.indexOf('\\n') !== -1) {\n            value = value.replace(/[^\\n]+$/, '')\n          }\n          return false\n        }\n      }\n    })\n    if (value) value = value.replace(/[^\\s]/g, '')\n    return value\n  }\n\n  rawBeforeOpen (root) {\n    let value\n    root.walk(i => {\n      if (i.type !== 'decl') {\n        value = i.raws.between\n        if (typeof value !== 'undefined') return false\n      }\n    })\n    return value\n  }\n\n  rawColon (root) {\n    let value\n    root.walkDecls(i => {\n      if (typeof i.raws.between !== 'undefined') {\n        value = i.raws.between.replace(/[^\\s:]/g, '')\n        return false\n      }\n    })\n    return value\n  }\n\n  beforeAfter (node, detect) {\n    let value\n    if (node.type === 'decl') {\n      value = this.raw(node, null, 'beforeDecl')\n    } else if (node.type === 'comment') {\n      value = this.raw(node, null, 'beforeComment')\n    } else if (detect === 'before') {\n      value = this.raw(node, null, 'beforeRule')\n    } else {\n      value = this.raw(node, null, 'beforeClose')\n    }\n\n    let buf = node.parent\n    let depth = 0\n    while (buf && buf.type !== 'root') {\n      depth += 1\n      buf = buf.parent\n    }\n\n    if (value.indexOf('\\n') !== -1) {\n      let indent = this.raw(node, null, 'indent')\n      if (indent.length) {\n        for (let step = 0; step < depth; step++) value += indent\n      }\n    }\n\n    return value\n  }\n\n  rawValue (node, prop) {\n    let value = node[prop]\n    let raw = node.raws[prop]\n    if (raw && raw.value === value) {\n      return raw.raw\n    }\n\n    return value\n  }\n}\n\nexport default Stringifier\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar SourceMapGenerator = require('./source-map-generator').SourceMapGenerator;\nvar util = require('./util');\n\n// Matches a Windows-style `\\r\\n` newline or a `\\n` newline used by all other\n// operating systems these days (capturing the result).\nvar REGEX_NEWLINE = /(\\r?\\n)/;\n\n// Newline character code for charCodeAt() comparisons\nvar NEWLINE_CODE = 10;\n\n// Private symbol for identifying `SourceNode`s when multiple versions of\n// the source-map library are loaded. This MUST NOT CHANGE across\n// versions!\nvar isSourceNode = \"$$$isSourceNode$$$\";\n\n/**\n * SourceNodes provide a way to abstract over interpolating/concatenating\n * snippets of generated JavaScript source code while maintaining the line and\n * column information associated with the original source code.\n *\n * @param aLine The original line number.\n * @param aColumn The original column number.\n * @param aSource The original source's filename.\n * @param aChunks Optional. An array of strings which are snippets of\n *        generated JS, or other SourceNodes.\n * @param aName The original identifier.\n */\nfunction SourceNode(aLine, aColumn, aSource, aChunks, aName) {\n  this.children = [];\n  this.sourceContents = {};\n  this.line = aLine == null ? null : aLine;\n  this.column = aColumn == null ? null : aColumn;\n  this.source = aSource == null ? null : aSource;\n  this.name = aName == null ? null : aName;\n  this[isSourceNode] = true;\n  if (aChunks != null) this.add(aChunks);\n}\n\n/**\n * Creates a SourceNode from generated code and a SourceMapConsumer.\n *\n * @param aGeneratedCode The generated code\n * @param aSourceMapConsumer The SourceMap for the generated code\n * @param aRelativePath Optional. The path that relative sources in the\n *        SourceMapConsumer should be relative to.\n */\nSourceNode.fromStringWithSourceMap =\n  function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {\n    // The SourceNode we want to fill with the generated code\n    // and the SourceMap\n    var node = new SourceNode();\n\n    // All even indices of this array are one line of the generated code,\n    // while all odd indices are the newlines between two adjacent lines\n    // (since `REGEX_NEWLINE` captures its match).\n    // Processed fragments are accessed by calling `shiftNextLine`.\n    var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);\n    var remainingLinesIndex = 0;\n    var shiftNextLine = function() {\n      var lineContents = getNextLine();\n      // The last line of a file might not have a newline.\n      var newLine = getNextLine() || \"\";\n      return lineContents + newLine;\n\n      function getNextLine() {\n        return remainingLinesIndex < remainingLines.length ?\n            remainingLines[remainingLinesIndex++] : undefined;\n      }\n    };\n\n    // We need to remember the position of \"remainingLines\"\n    var lastGeneratedLine = 1, lastGeneratedColumn = 0;\n\n    // The generate SourceNodes we need a code range.\n    // To extract it current and last mapping is used.\n    // Here we store the last mapping.\n    var lastMapping = null;\n\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      if (lastMapping !== null) {\n        // We add the code from \"lastMapping\" to \"mapping\":\n        // First check if there is a new line in between.\n        if (lastGeneratedLine < mapping.generatedLine) {\n          // Associate first line with \"lastMapping\"\n          addMappingWithCode(lastMapping, shiftNextLine());\n          lastGeneratedLine++;\n          lastGeneratedColumn = 0;\n          // The remaining code is added without mapping\n        } else {\n          // There is no new line in between.\n          // Associate the code between \"lastGeneratedColumn\" and\n          // \"mapping.generatedColumn\" with \"lastMapping\"\n          var nextLine = remainingLines[remainingLinesIndex] || '';\n          var code = nextLine.substr(0, mapping.generatedColumn -\n                                        lastGeneratedColumn);\n          remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn -\n                                              lastGeneratedColumn);\n          lastGeneratedColumn = mapping.generatedColumn;\n          addMappingWithCode(lastMapping, code);\n          // No more remaining code, continue\n          lastMapping = mapping;\n          return;\n        }\n      }\n      // We add the generated code until the first mapping\n      // to the SourceNode without any mapping.\n      // Each line is added as separate string.\n      while (lastGeneratedLine < mapping.generatedLine) {\n        node.add(shiftNextLine());\n        lastGeneratedLine++;\n      }\n      if (lastGeneratedColumn < mapping.generatedColumn) {\n        var nextLine = remainingLines[remainingLinesIndex] || '';\n        node.add(nextLine.substr(0, mapping.generatedColumn));\n        remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn);\n        lastGeneratedColumn = mapping.generatedColumn;\n      }\n      lastMapping = mapping;\n    }, this);\n    // We have processed all mappings.\n    if (remainingLinesIndex < remainingLines.length) {\n      if (lastMapping) {\n        // Associate the remaining code in the current line with \"lastMapping\"\n        addMappingWithCode(lastMapping, shiftNextLine());\n      }\n      // and add the remaining lines without any mapping\n      node.add(remainingLines.splice(remainingLinesIndex).join(\"\"));\n    }\n\n    // Copy sourcesContent into SourceNode\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aRelativePath != null) {\n          sourceFile = util.join(aRelativePath, sourceFile);\n        }\n        node.setSourceContent(sourceFile, content);\n      }\n    });\n\n    return node;\n\n    function addMappingWithCode(mapping, code) {\n      if (mapping === null || mapping.source === undefined) {\n        node.add(code);\n      } else {\n        var source = aRelativePath\n          ? util.join(aRelativePath, mapping.source)\n          : mapping.source;\n        node.add(new SourceNode(mapping.originalLine,\n                                mapping.originalColumn,\n                                source,\n                                code,\n                                mapping.name));\n      }\n    }\n  };\n\n/**\n * Add a chunk of generated JS to this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.add = function SourceNode_add(aChunk) {\n  if (Array.isArray(aChunk)) {\n    aChunk.forEach(function (chunk) {\n      this.add(chunk);\n    }, this);\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    if (aChunk) {\n      this.children.push(aChunk);\n    }\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Add a chunk of generated JS to the beginning of this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {\n  if (Array.isArray(aChunk)) {\n    for (var i = aChunk.length-1; i >= 0; i--) {\n      this.prepend(aChunk[i]);\n    }\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    this.children.unshift(aChunk);\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Walk over the tree of JS snippets in this node and its children. The\n * walking function is called once for each snippet of JS and is passed that\n * snippet and the its original associated source's line/column location.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walk = function SourceNode_walk(aFn) {\n  var chunk;\n  for (var i = 0, len = this.children.length; i < len; i++) {\n    chunk = this.children[i];\n    if (chunk[isSourceNode]) {\n      chunk.walk(aFn);\n    }\n    else {\n      if (chunk !== '') {\n        aFn(chunk, { source: this.source,\n                     line: this.line,\n                     column: this.column,\n                     name: this.name });\n      }\n    }\n  }\n};\n\n/**\n * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between\n * each of `this.children`.\n *\n * @param aSep The separator.\n */\nSourceNode.prototype.join = function SourceNode_join(aSep) {\n  var newChildren;\n  var i;\n  var len = this.children.length;\n  if (len > 0) {\n    newChildren = [];\n    for (i = 0; i < len-1; i++) {\n      newChildren.push(this.children[i]);\n      newChildren.push(aSep);\n    }\n    newChildren.push(this.children[i]);\n    this.children = newChildren;\n  }\n  return this;\n};\n\n/**\n * Call String.prototype.replace on the very right-most source snippet. Useful\n * for trimming whitespace from the end of a source node, etc.\n *\n * @param aPattern The pattern to replace.\n * @param aReplacement The thing to replace the pattern with.\n */\nSourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {\n  var lastChild = this.children[this.children.length - 1];\n  if (lastChild[isSourceNode]) {\n    lastChild.replaceRight(aPattern, aReplacement);\n  }\n  else if (typeof lastChild === 'string') {\n    this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);\n  }\n  else {\n    this.children.push(''.replace(aPattern, aReplacement));\n  }\n  return this;\n};\n\n/**\n * Set the source content for a source file. This will be added to the SourceMapGenerator\n * in the sourcesContent field.\n *\n * @param aSourceFile The filename of the source file\n * @param aSourceContent The content of the source file\n */\nSourceNode.prototype.setSourceContent =\n  function SourceNode_setSourceContent(aSourceFile, aSourceContent) {\n    this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;\n  };\n\n/**\n * Walk over the tree of SourceNodes. The walking function is called for each\n * source file content and is passed the filename and source content.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walkSourceContents =\n  function SourceNode_walkSourceContents(aFn) {\n    for (var i = 0, len = this.children.length; i < len; i++) {\n      if (this.children[i][isSourceNode]) {\n        this.children[i].walkSourceContents(aFn);\n      }\n    }\n\n    var sources = Object.keys(this.sourceContents);\n    for (var i = 0, len = sources.length; i < len; i++) {\n      aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);\n    }\n  };\n\n/**\n * Return the string representation of this source node. Walks over the tree\n * and concatenates all the various snippets together to one string.\n */\nSourceNode.prototype.toString = function SourceNode_toString() {\n  var str = \"\";\n  this.walk(function (chunk) {\n    str += chunk;\n  });\n  return str;\n};\n\n/**\n * Returns the string representation of this source node along with a source\n * map.\n */\nSourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {\n  var generated = {\n    code: \"\",\n    line: 1,\n    column: 0\n  };\n  var map = new SourceMapGenerator(aArgs);\n  var sourceMappingActive = false;\n  var lastOriginalSource = null;\n  var lastOriginalLine = null;\n  var lastOriginalColumn = null;\n  var lastOriginalName = null;\n  this.walk(function (chunk, original) {\n    generated.code += chunk;\n    if (original.source !== null\n        && original.line !== null\n        && original.column !== null) {\n      if(lastOriginalSource !== original.source\n         || lastOriginalLine !== original.line\n         || lastOriginalColumn !== original.column\n         || lastOriginalName !== original.name) {\n        map.addMapping({\n          source: original.source,\n          original: {\n            line: original.line,\n            column: original.column\n          },\n          generated: {\n            line: generated.line,\n            column: generated.column\n          },\n          name: original.name\n        });\n      }\n      lastOriginalSource = original.source;\n      lastOriginalLine = original.line;\n      lastOriginalColumn = original.column;\n      lastOriginalName = original.name;\n      sourceMappingActive = true;\n    } else if (sourceMappingActive) {\n      map.addMapping({\n        generated: {\n          line: generated.line,\n          column: generated.column\n        }\n      });\n      lastOriginalSource = null;\n      sourceMappingActive = false;\n    }\n    for (var idx = 0, length = chunk.length; idx < length; idx++) {\n      if (chunk.charCodeAt(idx) === NEWLINE_CODE) {\n        generated.line++;\n        generated.column = 0;\n        // Mappings end at eol\n        if (idx + 1 === length) {\n          lastOriginalSource = null;\n          sourceMappingActive = false;\n        } else if (sourceMappingActive) {\n          map.addMapping({\n            source: original.source,\n            original: {\n              line: original.line,\n              column: original.column\n            },\n            generated: {\n              line: generated.line,\n              column: generated.column\n            },\n            name: original.name\n          });\n        }\n      } else {\n        generated.column++;\n      }\n    }\n  });\n  this.walkSourceContents(function (sourceFile, sourceContent) {\n    map.setSourceContent(sourceFile, sourceContent);\n  });\n\n  return { code: generated.code, map: map };\n};\n\nexports.SourceNode = SourceNode;\n","import Declaration from './declaration'\nimport tokenizer from './tokenize'\nimport Comment from './comment'\nimport AtRule from './at-rule'\nimport Root from './root'\nimport Rule from './rule'\n\nexport default class Parser {\n  constructor (input) {\n    this.input = input\n\n    this.root = new Root()\n    this.current = this.root\n    this.spaces = ''\n    this.semicolon = false\n\n    this.createTokenizer()\n    this.root.source = { input, start: { line: 1, column: 1 } }\n  }\n\n  createTokenizer () {\n    this.tokenizer = tokenizer(this.input)\n  }\n\n  parse () {\n    let token\n    while (!this.tokenizer.endOfFile()) {\n      token = this.tokenizer.nextToken()\n\n      switch (token[0]) {\n        case 'space':\n          this.spaces += token[1]\n          break\n\n        case ';':\n          this.freeSemicolon(token)\n          break\n\n        case '}':\n          this.end(token)\n          break\n\n        case 'comment':\n          this.comment(token)\n          break\n\n        case 'at-word':\n          this.atrule(token)\n          break\n\n        case '{':\n          this.emptyRule(token)\n          break\n\n        default:\n          this.other(token)\n          break\n      }\n    }\n    this.endFile()\n  }\n\n  comment (token) {\n    let node = new Comment()\n    this.init(node, token[2], token[3])\n    node.source.end = { line: token[4], column: token[5] }\n\n    let text = token[1].slice(2, -2)\n    if (/^\\s*$/.test(text)) {\n      node.text = ''\n      node.raws.left = text\n      node.raws.right = ''\n    } else {\n      let match = text.match(/^(\\s*)([^]*[^\\s])(\\s*)$/)\n      node.text = match[2]\n      node.raws.left = match[1]\n      node.raws.right = match[3]\n    }\n  }\n\n  emptyRule (token) {\n    let node = new Rule()\n    this.init(node, token[2], token[3])\n    node.selector = ''\n    node.raws.between = ''\n    this.current = node\n  }\n\n  other (start) {\n    let end = false\n    let type = null\n    let colon = false\n    let bracket = null\n    let brackets = []\n\n    let tokens = []\n    let token = start\n    while (token) {\n      type = token[0]\n      tokens.push(token)\n\n      if (type === '(' || type === '[') {\n        if (!bracket) bracket = token\n        brackets.push(type === '(' ? ')' : ']')\n      } else if (brackets.length === 0) {\n        if (type === ';') {\n          if (colon) {\n            this.decl(tokens)\n            return\n          } else {\n            break\n          }\n        } else if (type === '{') {\n          this.rule(tokens)\n          return\n        } else if (type === '}') {\n          this.tokenizer.back(tokens.pop())\n          end = true\n          break\n        } else if (type === ':') {\n          colon = true\n        }\n      } else if (type === brackets[brackets.length - 1]) {\n        brackets.pop()\n        if (brackets.length === 0) bracket = null\n      }\n\n      token = this.tokenizer.nextToken()\n    }\n\n    if (this.tokenizer.endOfFile()) end = true\n    if (brackets.length > 0) this.unclosedBracket(bracket)\n\n    if (end && colon) {\n      while (tokens.length) {\n        token = tokens[tokens.length - 1][0]\n        if (token !== 'space' && token !== 'comment') break\n        this.tokenizer.back(tokens.pop())\n      }\n      this.decl(tokens)\n    } else {\n      this.unknownWord(tokens)\n    }\n  }\n\n  rule (tokens) {\n    tokens.pop()\n\n    let node = new Rule()\n    this.init(node, tokens[0][2], tokens[0][3])\n\n    node.raws.between = this.spacesAndCommentsFromEnd(tokens)\n    this.raw(node, 'selector', tokens)\n    this.current = node\n  }\n\n  decl (tokens) {\n    let node = new Declaration()\n    this.init(node)\n\n    let last = tokens[tokens.length - 1]\n    if (last[0] === ';') {\n      this.semicolon = true\n      tokens.pop()\n    }\n    if (last[4]) {\n      node.source.end = { line: last[4], column: last[5] }\n    } else {\n      node.source.end = { line: last[2], column: last[3] }\n    }\n\n    while (tokens[0][0] !== 'word') {\n      if (tokens.length === 1) this.unknownWord(tokens)\n      node.raws.before += tokens.shift()[1]\n    }\n    node.source.start = { line: tokens[0][2], column: tokens[0][3] }\n\n    node.prop = ''\n    while (tokens.length) {\n      let type = tokens[0][0]\n      if (type === ':' || type === 'space' || type === 'comment') {\n        break\n      }\n      node.prop += tokens.shift()[1]\n    }\n\n    node.raws.between = ''\n\n    let token\n    while (tokens.length) {\n      token = tokens.shift()\n\n      if (token[0] === ':') {\n        node.raws.between += token[1]\n        break\n      } else {\n        if (token[0] === 'word' && /\\w/.test(token[1])) {\n          this.unknownWord([token])\n        }\n        node.raws.between += token[1]\n      }\n    }\n\n    if (node.prop[0] === '_' || node.prop[0] === '*') {\n      node.raws.before += node.prop[0]\n      node.prop = node.prop.slice(1)\n    }\n    node.raws.between += this.spacesAndCommentsFromStart(tokens)\n    this.precheckMissedSemicolon(tokens)\n\n    for (let i = tokens.length - 1; i > 0; i--) {\n      token = tokens[i]\n      if (token[1].toLowerCase() === '!important') {\n        node.important = true\n        let string = this.stringFrom(tokens, i)\n        string = this.spacesFromEnd(tokens) + string\n        if (string !== ' !important') node.raws.important = string\n        break\n      } else if (token[1].toLowerCase() === 'important') {\n        let cache = tokens.slice(0)\n        let str = ''\n        for (let j = i; j > 0; j--) {\n          let type = cache[j][0]\n          if (str.trim().indexOf('!') === 0 && type !== 'space') {\n            break\n          }\n          str = cache.pop()[1] + str\n        }\n        if (str.trim().indexOf('!') === 0) {\n          node.important = true\n          node.raws.important = str\n          tokens = cache\n        }\n      }\n\n      if (token[0] !== 'space' && token[0] !== 'comment') {\n        break\n      }\n    }\n\n    this.raw(node, 'value', tokens)\n\n    if (node.value.indexOf(':') !== -1) this.checkMissedSemicolon(tokens)\n  }\n\n  atrule (token) {\n    let node = new AtRule()\n    node.name = token[1].slice(1)\n    if (node.name === '') {\n      this.unnamedAtrule(node, token)\n    }\n    this.init(node, token[2], token[3])\n\n    let prev\n    let shift\n    let last = false\n    let open = false\n    let params = []\n\n    while (!this.tokenizer.endOfFile()) {\n      token = this.tokenizer.nextToken()\n\n      if (token[0] === ';') {\n        node.source.end = { line: token[2], column: token[3] }\n        this.semicolon = true\n        break\n      } else if (token[0] === '{') {\n        open = true\n        break\n      } else if (token[0] === '}') {\n        if (params.length > 0) {\n          shift = params.length - 1\n          prev = params[shift]\n          while (prev && prev[0] === 'space') {\n            prev = params[--shift]\n          }\n          if (prev) {\n            node.source.end = { line: prev[4], column: prev[5] }\n          }\n        }\n        this.end(token)\n        break\n      } else {\n        params.push(token)\n      }\n\n      if (this.tokenizer.endOfFile()) {\n        last = true\n        break\n      }\n    }\n\n    node.raws.between = this.spacesAndCommentsFromEnd(params)\n    if (params.length) {\n      node.raws.afterName = this.spacesAndCommentsFromStart(params)\n      this.raw(node, 'params', params)\n      if (last) {\n        token = params[params.length - 1]\n        node.source.end = { line: token[4], column: token[5] }\n        this.spaces = node.raws.between\n        node.raws.between = ''\n      }\n    } else {\n      node.raws.afterName = ''\n      node.params = ''\n    }\n\n    if (open) {\n      node.nodes = []\n      this.current = node\n    }\n  }\n\n  end (token) {\n    if (this.current.nodes && this.current.nodes.length) {\n      this.current.raws.semicolon = this.semicolon\n    }\n    this.semicolon = false\n\n    this.current.raws.after = (this.current.raws.after || '') + this.spaces\n    this.spaces = ''\n\n    if (this.current.parent) {\n      this.current.source.end = { line: token[2], column: token[3] }\n      this.current = this.current.parent\n    } else {\n      this.unexpectedClose(token)\n    }\n  }\n\n  endFile () {\n    if (this.current.parent) this.unclosedBlock()\n    if (this.current.nodes && this.current.nodes.length) {\n      this.current.raws.semicolon = this.semicolon\n    }\n    this.current.raws.after = (this.current.raws.after || '') + this.spaces\n  }\n\n  freeSemicolon (token) {\n    this.spaces += token[1]\n    if (this.current.nodes) {\n      let prev = this.current.nodes[this.current.nodes.length - 1]\n      if (prev && prev.type === 'rule' && !prev.raws.ownSemicolon) {\n        prev.raws.ownSemicolon = this.spaces\n        this.spaces = ''\n      }\n    }\n  }\n\n  // Helpers\n\n  init (node, line, column) {\n    this.current.push(node)\n\n    node.source = { start: { line, column }, input: this.input }\n    node.raws.before = this.spaces\n    this.spaces = ''\n    if (node.type !== 'comment') this.semicolon = false\n  }\n\n  raw (node, prop, tokens) {\n    let token, type\n    let length = tokens.length\n    let value = ''\n    let clean = true\n    let next, prev\n    let pattern = /^([.|#])?([\\w])+/i\n\n    for (let i = 0; i < length; i += 1) {\n      token = tokens[i]\n      type = token[0]\n\n      if (type === 'comment' && node.type === 'rule') {\n        prev = tokens[i - 1]\n        next = tokens[i + 1]\n\n        if (\n          prev[0] !== 'space' &&\n          next[0] !== 'space' &&\n          pattern.test(prev[1]) &&\n          pattern.test(next[1])\n        ) {\n          value += token[1]\n        } else {\n          clean = false\n        }\n\n        continue\n      }\n\n      if (type === 'comment' || (type === 'space' && i === length - 1)) {\n        clean = false\n      } else {\n        value += token[1]\n      }\n    }\n    if (!clean) {\n      let raw = tokens.reduce((all, i) => all + i[1], '')\n      node.raws[prop] = { value, raw }\n    }\n    node[prop] = value\n  }\n\n  spacesAndCommentsFromEnd (tokens) {\n    let lastTokenType\n    let spaces = ''\n    while (tokens.length) {\n      lastTokenType = tokens[tokens.length - 1][0]\n      if (lastTokenType !== 'space' && lastTokenType !== 'comment') break\n      spaces = tokens.pop()[1] + spaces\n    }\n    return spaces\n  }\n\n  spacesAndCommentsFromStart (tokens) {\n    let next\n    let spaces = ''\n    while (tokens.length) {\n      next = tokens[0][0]\n      if (next !== 'space' && next !== 'comment') break\n      spaces += tokens.shift()[1]\n    }\n    return spaces\n  }\n\n  spacesFromEnd (tokens) {\n    let lastTokenType\n    let spaces = ''\n    while (tokens.length) {\n      lastTokenType = tokens[tokens.length - 1][0]\n      if (lastTokenType !== 'space') break\n      spaces = tokens.pop()[1] + spaces\n    }\n    return spaces\n  }\n\n  stringFrom (tokens, from) {\n    let result = ''\n    for (let i = from; i < tokens.length; i++) {\n      result += tokens[i][1]\n    }\n    tokens.splice(from, tokens.length - from)\n    return result\n  }\n\n  colon (tokens) {\n    let brackets = 0\n    let token, type, prev\n    for (let i = 0; i < tokens.length; i++) {\n      token = tokens[i]\n      type = token[0]\n\n      if (type === '(') {\n        brackets += 1\n      }\n      if (type === ')') {\n        brackets -= 1\n      }\n      if (brackets === 0 && type === ':') {\n        if (!prev) {\n          this.doubleColon(token)\n        } else if (prev[0] === 'word' && prev[1] === 'progid') {\n          continue\n        } else {\n          return i\n        }\n      }\n\n      prev = token\n    }\n    return false\n  }\n\n  // Errors\n\n  unclosedBracket (bracket) {\n    throw this.input.error('Unclosed bracket', bracket[2], bracket[3])\n  }\n\n  unknownWord (tokens) {\n    throw this.input.error('Unknown word', tokens[0][2], tokens[0][3])\n  }\n\n  unexpectedClose (token) {\n    throw this.input.error('Unexpected }', token[2], token[3])\n  }\n\n  unclosedBlock () {\n    let pos = this.current.source.start\n    throw this.input.error('Unclosed block', pos.line, pos.column)\n  }\n\n  doubleColon (token) {\n    throw this.input.error('Double colon', token[2], token[3])\n  }\n\n  unnamedAtrule (node, token) {\n    throw this.input.error('At-rule without name', token[2], token[3])\n  }\n\n  precheckMissedSemicolon (/* tokens */) {\n    // Hook for Safe Parser\n  }\n\n  checkMissedSemicolon (tokens) {\n    let colon = this.colon(tokens)\n    if (colon === false) return\n\n    let founded = 0\n    let token\n    for (let j = colon - 1; j >= 0; j--) {\n      token = tokens[j]\n      if (token[0] !== 'space') {\n        founded += 1\n        if (founded === 2) break\n      }\n    }\n    throw this.input.error('Missed semicolon', token[2], token[3])\n  }\n}\n","const PRERENDER_DATA_FILE_NAME = 'preact_prerender_data.json';\n\nmodule.exports = {\n\tPRERENDER_DATA_FILE_NAME,\n};\n","const SINGLE_QUOTE = '\\''.charCodeAt(0)\nconst DOUBLE_QUOTE = '\"'.charCodeAt(0)\nconst BACKSLASH = '\\\\'.charCodeAt(0)\nconst SLASH = '/'.charCodeAt(0)\nconst NEWLINE = '\\n'.charCodeAt(0)\nconst SPACE = ' '.charCodeAt(0)\nconst FEED = '\\f'.charCodeAt(0)\nconst TAB = '\\t'.charCodeAt(0)\nconst CR = '\\r'.charCodeAt(0)\nconst OPEN_SQUARE = '['.charCodeAt(0)\nconst CLOSE_SQUARE = ']'.charCodeAt(0)\nconst OPEN_PARENTHESES = '('.charCodeAt(0)\nconst CLOSE_PARENTHESES = ')'.charCodeAt(0)\nconst OPEN_CURLY = '{'.charCodeAt(0)\nconst CLOSE_CURLY = '}'.charCodeAt(0)\nconst SEMICOLON = ';'.charCodeAt(0)\nconst ASTERISK = '*'.charCodeAt(0)\nconst COLON = ':'.charCodeAt(0)\nconst AT = '@'.charCodeAt(0)\n\nconst RE_AT_END = /[ \\n\\t\\r\\f{}()'\"\\\\;/[\\]#]/g\nconst RE_WORD_END = /[ \\n\\t\\r\\f(){}:;@!'\"\\\\\\][#]|\\/(?=\\*)/g\nconst RE_BAD_BRACKET = /.[\\\\/(\"'\\n]/\nconst RE_HEX_ESCAPE = /[a-f0-9]/i\n\nexport default function tokenizer (input, options = {}) {\n  let css = input.css.valueOf()\n  let ignore = options.ignoreErrors\n\n  let code, next, quote, lines, last, content, escape\n  let nextLine, nextOffset, escaped, escapePos, prev, n, currentToken\n\n  let length = css.length\n  let offset = -1\n  let line = 1\n  let pos = 0\n  let buffer = []\n  let returned = []\n\n  function position () {\n    return pos\n  }\n\n  function unclosed (what) {\n    throw input.error('Unclosed ' + what, line, pos - offset)\n  }\n\n  function endOfFile () {\n    return returned.length === 0 && pos >= length\n  }\n\n  function nextToken (opts) {\n    if (returned.length) return returned.pop()\n    if (pos >= length) return\n\n    let ignoreUnclosed = opts ? opts.ignoreUnclosed : false\n\n    code = css.charCodeAt(pos)\n    if (\n      code === NEWLINE || code === FEED ||\n      (code === CR && css.charCodeAt(pos + 1) !== NEWLINE)\n    ) {\n      offset = pos\n      line += 1\n    }\n\n    switch (code) {\n      case NEWLINE:\n      case SPACE:\n      case TAB:\n      case CR:\n      case FEED:\n        next = pos\n        do {\n          next += 1\n          code = css.charCodeAt(next)\n          if (code === NEWLINE) {\n            offset = next\n            line += 1\n          }\n        } while (\n          code === SPACE ||\n          code === NEWLINE ||\n          code === TAB ||\n          code === CR ||\n          code === FEED\n        )\n\n        currentToken = ['space', css.slice(pos, next)]\n        pos = next - 1\n        break\n\n      case OPEN_SQUARE:\n      case CLOSE_SQUARE:\n      case OPEN_CURLY:\n      case CLOSE_CURLY:\n      case COLON:\n      case SEMICOLON:\n      case CLOSE_PARENTHESES:\n        let controlChar = String.fromCharCode(code)\n        currentToken = [controlChar, controlChar, line, pos - offset]\n        break\n\n      case OPEN_PARENTHESES:\n        prev = buffer.length ? buffer.pop()[1] : ''\n        n = css.charCodeAt(pos + 1)\n        if (\n          prev === 'url' &&\n          n !== SINGLE_QUOTE && n !== DOUBLE_QUOTE &&\n          n !== SPACE && n !== NEWLINE && n !== TAB &&\n          n !== FEED && n !== CR\n        ) {\n          next = pos\n          do {\n            escaped = false\n            next = css.indexOf(')', next + 1)\n            if (next === -1) {\n              if (ignore || ignoreUnclosed) {\n                next = pos\n                break\n              } else {\n                unclosed('bracket')\n              }\n            }\n            escapePos = next\n            while (css.charCodeAt(escapePos - 1) === BACKSLASH) {\n              escapePos -= 1\n              escaped = !escaped\n            }\n          } while (escaped)\n\n          currentToken = ['brackets', css.slice(pos, next + 1),\n            line, pos - offset,\n            line, next - offset\n          ]\n\n          pos = next\n        } else {\n          next = css.indexOf(')', pos + 1)\n          content = css.slice(pos, next + 1)\n\n          if (next === -1 || RE_BAD_BRACKET.test(content)) {\n            currentToken = ['(', '(', line, pos - offset]\n          } else {\n            currentToken = ['brackets', content,\n              line, pos - offset,\n              line, next - offset\n            ]\n            pos = next\n          }\n        }\n\n        break\n\n      case SINGLE_QUOTE:\n      case DOUBLE_QUOTE:\n        quote = code === SINGLE_QUOTE ? '\\'' : '\"'\n        next = pos\n        do {\n          escaped = false\n          next = css.indexOf(quote, next + 1)\n          if (next === -1) {\n            if (ignore || ignoreUnclosed) {\n              next = pos + 1\n              break\n            } else {\n              unclosed('string')\n            }\n          }\n          escapePos = next\n          while (css.charCodeAt(escapePos - 1) === BACKSLASH) {\n            escapePos -= 1\n            escaped = !escaped\n          }\n        } while (escaped)\n\n        content = css.slice(pos, next + 1)\n        lines = content.split('\\n')\n        last = lines.length - 1\n\n        if (last > 0) {\n          nextLine = line + last\n          nextOffset = next - lines[last].length\n        } else {\n          nextLine = line\n          nextOffset = offset\n        }\n\n        currentToken = ['string', css.slice(pos, next + 1),\n          line, pos - offset,\n          nextLine, next - nextOffset\n        ]\n\n        offset = nextOffset\n        line = nextLine\n        pos = next\n        break\n\n      case AT:\n        RE_AT_END.lastIndex = pos + 1\n        RE_AT_END.test(css)\n        if (RE_AT_END.lastIndex === 0) {\n          next = css.length - 1\n        } else {\n          next = RE_AT_END.lastIndex - 2\n        }\n\n        currentToken = ['at-word', css.slice(pos, next + 1),\n          line, pos - offset,\n          line, next - offset\n        ]\n\n        pos = next\n        break\n\n      case BACKSLASH:\n        next = pos\n        escape = true\n        while (css.charCodeAt(next + 1) === BACKSLASH) {\n          next += 1\n          escape = !escape\n        }\n        code = css.charCodeAt(next + 1)\n        if (\n          escape &&\n          code !== SLASH &&\n          code !== SPACE &&\n          code !== NEWLINE &&\n          code !== TAB &&\n          code !== CR &&\n          code !== FEED\n        ) {\n          next += 1\n          if (RE_HEX_ESCAPE.test(css.charAt(next))) {\n            while (RE_HEX_ESCAPE.test(css.charAt(next + 1))) {\n              next += 1\n            }\n            if (css.charCodeAt(next + 1) === SPACE) {\n              next += 1\n            }\n          }\n        }\n\n        currentToken = ['word', css.slice(pos, next + 1),\n          line, pos - offset,\n          line, next - offset\n        ]\n\n        pos = next\n        break\n\n      default:\n        if (code === SLASH && css.charCodeAt(pos + 1) === ASTERISK) {\n          next = css.indexOf('*/', pos + 2) + 1\n          if (next === 0) {\n            if (ignore || ignoreUnclosed) {\n              next = css.length\n            } else {\n              unclosed('comment')\n            }\n          }\n\n          content = css.slice(pos, next + 1)\n          lines = content.split('\\n')\n          last = lines.length - 1\n\n          if (last > 0) {\n            nextLine = line + last\n            nextOffset = next - lines[last].length\n          } else {\n            nextLine = line\n            nextOffset = offset\n          }\n\n          currentToken = ['comment', content,\n            line, pos - offset,\n            nextLine, next - nextOffset\n          ]\n\n          offset = nextOffset\n          line = nextLine\n          pos = next\n        } else {\n          RE_WORD_END.lastIndex = pos + 1\n          RE_WORD_END.test(css)\n          if (RE_WORD_END.lastIndex === 0) {\n            next = css.length - 1\n          } else {\n            next = RE_WORD_END.lastIndex - 2\n          }\n\n          currentToken = ['word', css.slice(pos, next + 1),\n            line, pos - offset,\n            line, next - offset\n          ]\n\n          buffer.push(currentToken)\n\n          pos = next\n        }\n\n        break\n    }\n\n    pos++\n    return currentToken\n  }\n\n  function back (token) {\n    returned.push(token)\n  }\n\n  return {\n    back,\n    nextToken,\n    endOfFile,\n    position\n  }\n}\n"],"sourceRoot":""}